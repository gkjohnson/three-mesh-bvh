import{M as z1,i as a0,B as G1,u as I1,C as D1,W as c0,p as x0,c as f0,d as h0,D as u0,A as v0,s as p0,g as q1,t as r0,P as m0,G as n0,l as y0,e as w0,f as z0,X as A0,O as M0,n as e0,V as b0}from"./ExtendedTriangle-DttJMGjs.js";import{S as g0}from"./Stats-9dH8FB2H.js";import{g as C0}from"./lil-gui.module.min-BH_YJbPT.js";import{O as F0}from"./OrbitControls--aO4oMeG.js";import{T as S0}from"./TransformControls-Br4Hm-bE.js";import{g as P0}from"./_commonjsHelpers-CqkleIqs.js";import{M as B0}from"./MeshBVHHelper-DN_ezUtB.js";import{a as D0,c as T0,d as W0}from"./ExtensionUtilities-QU1zl1dQ.js";import"./MeshBVH-DAC57waP.js";class l0 extends z1{constructor(U,I,X=!1,Y=!1,D=1e4){const k=new a0;super(k,I);const e=this,T=new Float32Array(36),E=new Float32Array(36),R=new Float32Array(36);this.enableUvs=X,this.enableColors=Y,this.autoUpdate=!0,this.init=function(t){this.resolution=t,this.isolation=80,this.size=t,this.size2=this.size*this.size,this.size3=this.size2*this.size,this.halfsize=this.size/2,this.delta=2/this.size,this.yd=this.size,this.zd=this.size2,this.field=new Float32Array(this.size3),this.normal_cache=new Float32Array(this.size3*3),this.palette=new Float32Array(this.size3*3),this.count=0;const a=D*3;this.positionArray=new Float32Array(a*3);const r=new G1(this.positionArray,3);r.setUsage(I1),k.setAttribute("position",r),this.normalArray=new Float32Array(a*3);const s=new G1(this.normalArray,3);if(s.setUsage(I1),k.setAttribute("normal",s),this.enableUvs){this.uvArray=new Float32Array(a*2);const n=new G1(this.uvArray,2);n.setUsage(I1),k.setAttribute("uv",n)}if(this.enableColors){this.colorArray=new Float32Array(a*3);const n=new G1(this.colorArray,3);n.setUsage(I1),k.setAttribute("color",n)}};function C(t,a,r){return t+(a-t)*r}function p(t,a,r,s,n,o,i,c,l,f){const x=(r-i)/(c-i),u=e.normal_cache;T[a+0]=s+x*e.delta,T[a+1]=n,T[a+2]=o,E[a+0]=C(u[t+0],u[t+3],x),E[a+1]=C(u[t+1],u[t+4],x),E[a+2]=C(u[t+2],u[t+5],x),R[a+0]=C(e.palette[l*3+0],e.palette[f*3+0],x),R[a+1]=C(e.palette[l*3+1],e.palette[f*3+1],x),R[a+2]=C(e.palette[l*3+2],e.palette[f*3+2],x)}function h(t,a,r,s,n,o,i,c,l,f){const x=(r-i)/(c-i),u=e.normal_cache;T[a+0]=s,T[a+1]=n+x*e.delta,T[a+2]=o;const m=t+e.yd*3;E[a+0]=C(u[t+0],u[m+0],x),E[a+1]=C(u[t+1],u[m+1],x),E[a+2]=C(u[t+2],u[m+2],x),R[a+0]=C(e.palette[l*3+0],e.palette[f*3+0],x),R[a+1]=C(e.palette[l*3+1],e.palette[f*3+1],x),R[a+2]=C(e.palette[l*3+2],e.palette[f*3+2],x)}function w(t,a,r,s,n,o,i,c,l,f){const x=(r-i)/(c-i),u=e.normal_cache;T[a+0]=s,T[a+1]=n,T[a+2]=o+x*e.delta;const m=t+e.zd*3;E[a+0]=C(u[t+0],u[m+0],x),E[a+1]=C(u[t+1],u[m+1],x),E[a+2]=C(u[t+2],u[m+2],x),R[a+0]=C(e.palette[l*3+0],e.palette[f*3+0],x),R[a+1]=C(e.palette[l*3+1],e.palette[f*3+1],x),R[a+2]=C(e.palette[l*3+2],e.palette[f*3+2],x)}function v(t){const a=t*3;e.normal_cache[a]===0&&(e.normal_cache[a+0]=e.field[t-1]-e.field[t+1],e.normal_cache[a+1]=e.field[t-e.yd]-e.field[t+e.yd],e.normal_cache[a+2]=e.field[t-e.zd]-e.field[t+e.zd])}function d(t,a,r,s,n){const o=s+1,i=s+e.yd,c=s+e.zd,l=o+e.yd,f=o+e.zd,x=s+e.yd+e.zd,u=o+e.yd+e.zd;let m=0;const z=e.field[s],A=e.field[o],M=e.field[i],b=e.field[l],S=e.field[c],g=e.field[f],P=e.field[x],B=e.field[u];z<n&&(m|=1),A<n&&(m|=2),M<n&&(m|=8),b<n&&(m|=4),S<n&&(m|=16),g<n&&(m|=32),P<n&&(m|=128),B<n&&(m|=64);const F=k0[m];if(F===0)return 0;const W=e.delta,V=t+W,H=a+W,_=r+W;F&1&&(v(s),v(o),p(s*3,0,n,t,a,r,z,A,s,o)),F&2&&(v(o),v(l),h(o*3,3,n,V,a,r,A,b,o,l)),F&4&&(v(i),v(l),p(i*3,6,n,t,H,r,M,b,i,l)),F&8&&(v(s),v(i),h(s*3,9,n,t,a,r,z,M,s,i)),F&16&&(v(c),v(f),p(c*3,12,n,t,a,_,S,g,c,f)),F&32&&(v(f),v(u),h(f*3,15,n,V,a,_,g,B,f,u)),F&64&&(v(x),v(u),p(x*3,18,n,t,H,_,P,B,x,u)),F&128&&(v(c),v(x),h(c*3,21,n,t,a,_,S,P,c,x)),F&256&&(v(s),v(c),w(s*3,24,n,t,a,r,z,S,s,c)),F&512&&(v(o),v(f),w(o*3,27,n,V,a,r,A,g,o,f)),F&1024&&(v(l),v(u),w(l*3,30,n,V,H,r,b,B,l,u)),F&2048&&(v(i),v(x),w(i*3,33,n,t,H,r,M,P,i,x)),m<<=4;let L,J,K,Z=0,G=0;for(;R1[m+G]!=-1;)L=m+G,J=L+1,K=L+2,y(T,E,R,3*R1[L],3*R1[J],3*R1[K]),G+=3,Z++;return Z}function y(t,a,r,s,n,o){const i=e.count*3;if(e.positionArray[i+0]=t[s],e.positionArray[i+1]=t[s+1],e.positionArray[i+2]=t[s+2],e.positionArray[i+3]=t[n],e.positionArray[i+4]=t[n+1],e.positionArray[i+5]=t[n+2],e.positionArray[i+6]=t[o],e.positionArray[i+7]=t[o+1],e.positionArray[i+8]=t[o+2],e.material.flatShading===!0){const c=(a[s+0]+a[n+0]+a[o+0])/3,l=(a[s+1]+a[n+1]+a[o+1])/3,f=(a[s+2]+a[n+2]+a[o+2])/3;e.normalArray[i+0]=c,e.normalArray[i+1]=l,e.normalArray[i+2]=f,e.normalArray[i+3]=c,e.normalArray[i+4]=l,e.normalArray[i+5]=f,e.normalArray[i+6]=c,e.normalArray[i+7]=l,e.normalArray[i+8]=f}else e.normalArray[i+0]=a[s+0],e.normalArray[i+1]=a[s+1],e.normalArray[i+2]=a[s+2],e.normalArray[i+3]=a[n+0],e.normalArray[i+4]=a[n+1],e.normalArray[i+5]=a[n+2],e.normalArray[i+6]=a[o+0],e.normalArray[i+7]=a[o+1],e.normalArray[i+8]=a[o+2];if(e.enableUvs){const c=e.count*2;e.uvArray[c+0]=t[s+0],e.uvArray[c+1]=t[s+2],e.uvArray[c+2]=t[n+0],e.uvArray[c+3]=t[n+2],e.uvArray[c+4]=t[o+0],e.uvArray[c+5]=t[o+2]}e.enableColors&&(e.colorArray[i+0]=r[s+0],e.colorArray[i+1]=r[s+1],e.colorArray[i+2]=r[s+2],e.colorArray[i+3]=r[n+0],e.colorArray[i+4]=r[n+1],e.colorArray[i+5]=r[n+2],e.colorArray[i+6]=r[o+0],e.colorArray[i+7]=r[o+1],e.colorArray[i+8]=r[o+2]),e.count+=3}this.addBall=function(t,a,r,s,n,o){const i=Math.sign(s);s=Math.abs(s);const c=o!=null;let l=new D1(t,a,r);if(c)try{l=o instanceof D1?o:Array.isArray(o)?new D1(Math.min(Math.abs(o[0]),1),Math.min(Math.abs(o[1]),1),Math.min(Math.abs(o[2]),1)):new D1(o)}catch{l=new D1(t,a,r)}const f=this.size*Math.sqrt(s/n),x=r*this.size,u=a*this.size,m=t*this.size;let z=Math.floor(x-f);z<1&&(z=1);let A=Math.floor(x+f);A>this.size-1&&(A=this.size-1);let M=Math.floor(u-f);M<1&&(M=1);let b=Math.floor(u+f);b>this.size-1&&(b=this.size-1);let S=Math.floor(m-f);S<1&&(S=1);let g=Math.floor(m+f);g>this.size-1&&(g=this.size-1);let P,B,F,W,V,H,_,L,J,K,Z;for(F=z;F<A;F++)for(V=this.size2*F,L=F/this.size-r,J=L*L,B=M;B<b;B++)for(W=V+this.size*B,_=B/this.size-a,K=_*_,P=S;P<g;P++)if(H=P/this.size-t,Z=s/(1e-6+H*H+K+J)-n,Z>0){this.field[W+P]+=Z*i;const G=Math.sqrt((P-m)*(P-m)+(B-u)*(B-u)+(F-x)*(F-x))/f,q=1-G*G*G*(G*(G*6-15)+10);this.palette[(W+P)*3+0]+=l.r*q,this.palette[(W+P)*3+1]+=l.g*q,this.palette[(W+P)*3+2]+=l.b*q}},this.addPlaneX=function(t,a){const r=this.size,s=this.yd,n=this.zd,o=this.field;let i,c,l,f,x,u,m,z=r*Math.sqrt(t/a);for(z>r&&(z=r),i=0;i<z;i++)if(u=i/r,f=u*u,x=t/(1e-4+f)-a,x>0)for(c=0;c<r;c++)for(m=i+c*s,l=0;l<r;l++)o[n*l+m]+=x},this.addPlaneY=function(t,a){const r=this.size,s=this.yd,n=this.zd,o=this.field;let i,c,l,f,x,u,m,z,A=r*Math.sqrt(t/a);for(A>r&&(A=r),c=0;c<A;c++)if(u=c/r,f=u*u,x=t/(1e-4+f)-a,x>0)for(m=c*s,i=0;i<r;i++)for(z=m+i,l=0;l<r;l++)o[n*l+z]+=x},this.addPlaneZ=function(t,a){const r=this.size,s=this.yd,n=this.zd,o=this.field;let i,c,l,f,x,u,m,z,A=r*Math.sqrt(t/a);for(A>r&&(A=r),l=0;l<A;l++)if(u=l/r,f=u*u,x=t/(1e-4+f)-a,x>0)for(m=n*l,c=0;c<r;c++)for(z=m+c*s,i=0;i<r;i++)o[z+i]+=x},this.setCell=function(t,a,r,s){const n=this.size2*r+this.size*a+t;this.field[n]=s},this.getCell=function(t,a,r){const s=this.size2*r+this.size*a+t;return this.field[s]},this.blur=function(t=1){const a=this.field,r=a.slice(),s=this.size,n=this.size2;for(let o=0;o<s;o++)for(let i=0;i<s;i++)for(let c=0;c<s;c++){const l=n*c+s*i+o;let f=r[l],x=1;for(let u=-1;u<=1;u+=2){const m=u+o;if(!(m<0||m>=s))for(let z=-1;z<=1;z+=2){const A=z+i;if(!(A<0||A>=s))for(let M=-1;M<=1;M+=2){const b=M+c;if(b<0||b>=s)continue;const S=n*b+s*A+m,g=r[S];x++,f+=t*(g-f)/x}}}a[l]=f}},this.reset=function(){for(let t=0;t<this.size3;t++)this.normal_cache[t*3]=0,this.field[t]=0,this.palette[t*3]=this.palette[t*3+1]=this.palette[t*3+2]=0},this.update=function(){this.count=0;const t=this.size-2;for(let a=1;a<t;a++){const r=this.size2*a,s=(a-this.halfsize)/this.halfsize;for(let n=1;n<t;n++){const o=r+this.size*n,i=(n-this.halfsize)/this.halfsize;for(let c=1;c<t;c++){const l=(c-this.halfsize)/this.halfsize,f=o+c;d(l,i,s,f,this.isolation)}}}this.geometry.setDrawRange(0,this.count),k.getAttribute("position").needsUpdate=!0,k.getAttribute("normal").needsUpdate=!0,this.enableUvs&&(k.getAttribute("uv").needsUpdate=!0),this.enableColors&&(k.getAttribute("color").needsUpdate=!0),this.count/3>D&&console.warn("THREE.MarchingCubes: Geometry buffers too small for rendering. Please create an instance with a higher poly count.")},this.onBeforeRender=function(){this.autoUpdate&&this.update()},this.init(U)}}l0.prototype.isMarchingCubes=!0;const k0=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]),R1=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);var V1={exports:{}},s0;function E0(){return s0||(s0=1,(function($,U){(function(){var I=.5*(Math.sqrt(3)-1),X=(3-Math.sqrt(3))/6,Y=1/3,D=1/6,k=(Math.sqrt(5)-1)/4,e=(5-Math.sqrt(5))/20;function T(p){var h;typeof p=="function"?h=p:p?h=R(p):h=Math.random,this.p=E(h),this.perm=new Uint8Array(512),this.permMod12=new Uint8Array(512);for(var w=0;w<512;w++)this.perm[w]=this.p[w&255],this.permMod12[w]=this.perm[w]%12}T.prototype={grad3:new Float32Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1]),grad4:new Float32Array([0,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,1,0,1,1,1,0,1,-1,1,0,-1,1,1,0,-1,-1,-1,0,1,1,-1,0,1,-1,-1,0,-1,1,-1,0,-1,-1,1,1,0,1,1,1,0,-1,1,-1,0,1,1,-1,0,-1,-1,1,0,1,-1,1,0,-1,-1,-1,0,1,-1,-1,0,-1,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,0]),noise2D:function(p,h){var w=this.permMod12,v=this.perm,d=this.grad3,y=0,t=0,a=0,r=(p+h)*I,s=Math.floor(p+r),n=Math.floor(h+r),o=(s+n)*X,i=s-o,c=n-o,l=p-i,f=h-c,x,u;l>f?(x=1,u=0):(x=0,u=1);var m=l-x+X,z=f-u+X,A=l-1+2*X,M=f-1+2*X,b=s&255,S=n&255,g=.5-l*l-f*f;if(g>=0){var P=w[b+v[S]]*3;g*=g,y=g*g*(d[P]*l+d[P+1]*f)}var B=.5-m*m-z*z;if(B>=0){var F=w[b+x+v[S+u]]*3;B*=B,t=B*B*(d[F]*m+d[F+1]*z)}var W=.5-A*A-M*M;if(W>=0){var V=w[b+1+v[S+1]]*3;W*=W,a=W*W*(d[V]*A+d[V+1]*M)}return 70*(y+t+a)},noise3D:function(p,h,w){var v=this.permMod12,d=this.perm,y=this.grad3,t,a,r,s,n=(p+h+w)*Y,o=Math.floor(p+n),i=Math.floor(h+n),c=Math.floor(w+n),l=(o+i+c)*D,f=o-l,x=i-l,u=c-l,m=p-f,z=h-x,A=w-u,M,b,S,g,P,B;m>=z?z>=A?(M=1,b=0,S=0,g=1,P=1,B=0):m>=A?(M=1,b=0,S=0,g=1,P=0,B=1):(M=0,b=0,S=1,g=1,P=0,B=1):z<A?(M=0,b=0,S=1,g=0,P=1,B=1):m<A?(M=0,b=1,S=0,g=0,P=1,B=1):(M=0,b=1,S=0,g=1,P=1,B=0);var F=m-M+D,W=z-b+D,V=A-S+D,H=m-g+2*D,_=z-P+2*D,L=A-B+2*D,J=m-1+3*D,K=z-1+3*D,Z=A-1+3*D,G=o&255,q=i&255,c1=c&255,n1=.6-m*m-z*z-A*A;if(n1<0)t=0;else{var u1=v[G+d[q+d[c1]]]*3;n1*=n1,t=n1*n1*(y[u1]*m+y[u1+1]*z+y[u1+2]*A)}var s1=.6-F*F-W*W-V*V;if(s1<0)a=0;else{var v1=v[G+M+d[q+b+d[c1+S]]]*3;s1*=s1,a=s1*s1*(y[v1]*F+y[v1+1]*W+y[v1+2]*V)}var o1=.6-H*H-_*_-L*L;if(o1<0)r=0;else{var p1=v[G+g+d[q+P+d[c1+B]]]*3;o1*=o1,r=o1*o1*(y[p1]*H+y[p1+1]*_+y[p1+2]*L)}var l1=.6-J*J-K*K-Z*Z;if(l1<0)s=0;else{var m1=v[G+1+d[q+1+d[c1+1]]]*3;l1*=l1,s=l1*l1*(y[m1]*J+y[m1+1]*K+y[m1+2]*Z)}return 32*(t+a+r+s)},noise4D:function(p,h,w,v){var d=this.perm,y=this.grad4,t,a,r,s,n,o=(p+h+w+v)*k,i=Math.floor(p+o),c=Math.floor(h+o),l=Math.floor(w+o),f=Math.floor(v+o),x=(i+c+l+f)*e,u=i-x,m=c-x,z=l-x,A=f-x,M=p-u,b=h-m,S=w-z,g=v-A,P=0,B=0,F=0,W=0;M>b?P++:B++,M>S?P++:F++,M>g?P++:W++,b>S?B++:F++,b>g?B++:W++,S>g?F++:W++;var V,H,_,L,J,K,Z,G,q,c1,n1,u1;V=P>=3?1:0,H=B>=3?1:0,_=F>=3?1:0,L=W>=3?1:0,J=P>=2?1:0,K=B>=2?1:0,Z=F>=2?1:0,G=W>=2?1:0,q=P>=1?1:0,c1=B>=1?1:0,n1=F>=1?1:0,u1=W>=1?1:0;var s1=M-V+e,v1=b-H+e,o1=S-_+e,p1=g-L+e,l1=M-J+2*e,m1=b-K+2*e,_1=S-Z+2*e,L1=g-G+2*e,O1=M-q+3*e,X1=b-c1+3*e,Y1=S-n1+3*e,Z1=g-u1+3*e,$1=M-1+4*e,J1=b-1+4*e,K1=S-1+4*e,Q1=g-1+4*e,A1=i&255,M1=c&255,b1=l&255,g1=f&255,C1=.6-M*M-b*b-S*S-g*g;if(C1<0)t=0;else{var W1=d[A1+d[M1+d[b1+d[g1]]]]%32*4;C1*=C1,t=C1*C1*(y[W1]*M+y[W1+1]*b+y[W1+2]*S+y[W1+3]*g)}var F1=.6-s1*s1-v1*v1-o1*o1-p1*p1;if(F1<0)a=0;else{var k1=d[A1+V+d[M1+H+d[b1+_+d[g1+L]]]]%32*4;F1*=F1,a=F1*F1*(y[k1]*s1+y[k1+1]*v1+y[k1+2]*o1+y[k1+3]*p1)}var S1=.6-l1*l1-m1*m1-_1*_1-L1*L1;if(S1<0)r=0;else{var E1=d[A1+J+d[M1+K+d[b1+Z+d[g1+G]]]]%32*4;S1*=S1,r=S1*S1*(y[E1]*l1+y[E1+1]*m1+y[E1+2]*_1+y[E1+3]*L1)}var P1=.6-O1*O1-X1*X1-Y1*Y1-Z1*Z1;if(P1<0)s=0;else{var j1=d[A1+q+d[M1+c1+d[b1+n1+d[g1+u1]]]]%32*4;P1*=P1,s=P1*P1*(y[j1]*O1+y[j1+1]*X1+y[j1+2]*Y1+y[j1+3]*Z1)}var B1=.6-$1*$1-J1*J1-K1*K1-Q1*Q1;if(B1<0)n=0;else{var U1=d[A1+1+d[M1+1+d[b1+1+d[g1+1]]]]%32*4;B1*=B1,n=B1*B1*(y[U1]*$1+y[U1+1]*J1+y[U1+2]*K1+y[U1+3]*Q1)}return 27*(t+a+r+s+n)}};function E(p){var h,w=new Uint8Array(256);for(h=0;h<256;h++)w[h]=h;for(h=0;h<255;h++){var v=h+~~(p()*(256-h)),d=w[h];w[h]=w[v],w[v]=d}return w}T._buildPermutationTable=E;function R(){var p=0,h=0,w=0,v=1,d=C();p=d(" "),h=d(" "),w=d(" ");for(var y=0;y<arguments.length;y++)p-=d(arguments[y]),p<0&&(p+=1),h-=d(arguments[y]),h<0&&(h+=1),w-=d(arguments[y]),w<0&&(w+=1);return d=null,function(){var t=2091639*p+v*23283064365386963e-26;return p=h,h=w,w=t-(v=t|0)}}function C(){var p=4022871197;return function(h){h=h.toString();for(var w=0;w<h.length;w++){p+=h.charCodeAt(w);var v=.02519603282416938*p;p=v>>>0,v-=p,v*=p,p=v>>>0,v-=p,p+=v*4294967296}return(p>>>0)*23283064365386963e-26}}U.SimplexNoise=T,$.exports=T})()})(V1,V1.exports)),V1.exports}var j0=E0();const U0=P0(j0);z1.prototype.raycast=D0;a0.prototype.computeBoundsTree=T0;a0.prototype.disposeBoundsTree=W0;const j={visualizeBounds:!1,visualBoundsDepth:10,volume:{display:1,hideWhileGenerating:!1,alwaysShowDistance:!0,surfaceOnly:!1,distance:1,resolution:100,radius:4},displayClosestPoint:!0};let N1,O,d1,t1,o0,i1,e1,Q,a1,x1,N,h1,r1,f1,w1,H1=!1;function G0(){t1=new c0({antialias:!0}),t1.setPixelRatio(window.devicePixelRatio),t1.setSize(window.innerWidth,window.innerHeight),t1.setClearColor(1251612,1),t1.shadowMap.enabled=!0,t1.shadowMap.type=x0,document.body.appendChild(t1.domElement),O=new f0,O.fog=new h0(2503224/2,10,45);const U=new u0(16777215,1.5);U.position.set(20,20,20),U.castShadow=!0,U.shadow.mapSize.set(2048,2048);const I=U.shadow.camera;I.left=I.bottom=-15,I.right=I.top=15,I.updateProjectionMatrix(),O.add(U),O.add(new v0(14743546,1.5));const X=50,Y=250,D=new p0(X,X,Y-1,Y-1),k=D.attributes.position,e=Math.floor(Math.random()*100),T=new U0(e);for(let d=0;d<Y*Y;d++){const y=k.getX(d)/15,t=k.getY(d)/15;k.setZ(d,T.noise2D(y,t)*3)}D.computeVertexNormals(),D.computeBoundsTree(),e1=new z1(D,new q1({color:16777215,metalness:.1,roughness:.9,side:r0})),e1.rotation.x=-Math.PI/2,e1.position.y=-3,e1.receiveShadow=!0,O.add(e1),d1=new m0(75,window.innerWidth/window.innerHeight,.1,50),d1.position.z=5,d1.far=100,d1.updateProjectionMatrix(),N1=new g0,document.body.appendChild(N1.dom);const E=new q1({roughness:.75,metalness:.1});Q=new n0,O.add(Q),a1=new z1(new y0(.5,.25,1,20,1),E),a1.castShadow=!0,a1.receiveShadow=!0,a1.geometry.computeBoundsTree(),a1.geometry.computeBoundingSphere(),Q.add(a1),o0=new F0(d1,t1.domElement),x1=new S0(d1,t1.domElement),x1.attach(Q),x1.addEventListener("dragging-changed",d=>{o0.enabled=!d.value,d.value||(H1=!0)}),x1.addEventListener("objectChange",d=>{H1=!0}),O.add(x1.getHelper());const R=new q1({flatShading:!0,color:15277667,metalness:0,roughness:.35,transparent:!0,depthWrite:!1,opacity:.15,premultipliedAlpha:!0,side:r0});N=new l0(100,R,!1,!1,1e6),N.isolation=0,N.autoUpdate=!1,h1=new n0,h1.scale.multiplyScalar(5),h1.add(N),O.add(h1),r1=new z1(new w0(.025,20,20),new z0({color:15277667})),r1.castShadow=!0,O.add(r1),f1=r1.clone(),f1.castShadow=!0,O.add(f1);const C=new z1(new A0,r1.material);C.castShadow=!0,C.position.z=.5,w1=new M0,w1.add(C),O.add(w1),O.updateMatrixWorld(!0);const p=new C0({width:300});p.add(j,"visualizeBounds").onChange(()=>t0()),p.add(j,"visualBoundsDepth").min(1).max(40).step(1).onChange(()=>t0());const h=p.addFolder("distanceVisualization");h.add(j.volume,"display",{hide:0,"distance to terrain":1,"distance to mesh":2}).onChange(()=>{y1=!0}),h.add(j.volume,"hideWhileGenerating"),h.add(j.volume,"alwaysShowDistance"),h.add(j.volume,"surfaceOnly").onChange(()=>y1=!0),h.add(j.volume,"distance").min(0).max(2).step(.01).onChange(()=>y1=!0),h.add(j.volume,"radius").min(1).max(20).onChange(()=>y1=!0),h.add(j.volume,"resolution",5,200,1).onChange(()=>y1=!0),h.open(),p.add(x1,"mode",["translate","rotate"]);const w=p.addFolder("position");w.add(Q.position,"x").min(-5).max(5).step(.001).listen(),w.add(Q.position,"y").min(-5).max(5).step(.001).listen(),w.add(Q.position,"z").min(-5).max(5).step(.001).listen();const v=p.addFolder("rotation");v.add(Q.rotation,"x").min(-Math.PI).max(Math.PI).step(.001).listen(),v.add(Q.rotation,"y").min(-Math.PI).max(Math.PI).step(.001).listen(),v.add(Q.rotation,"z").min(-Math.PI).max(Math.PI).step(.001).listen(),p.open(),i0(),window.addEventListener("resize",function(){d1.aspect=window.innerWidth/window.innerHeight,d1.updateProjectionMatrix(),t1.setSize(window.innerWidth,window.innerHeight)},!1),window.addEventListener("keydown",function(d){switch(d.key){case"w":x1.mode="translate";break;case"e":x1.mode="rotate";break}p.controllersRecursive().forEach(y=>y.updateDisplay())})}function t0(){i1&&!j.visualizeBounds&&(O.remove(i1),i1=null),!i1&&j.visualizeBounds&&(i1=new B0(e1),O.add(i1)),i1&&(i1.depth=j.visualBoundsDepth)}function i0($){Q.updateMatrixWorld();const U=new e0().copy(e1.matrixWorld).invert().multiply(Q.matrixWorld),I=j.volume.distance,X=I,Y=$?I:0,D={},k={},T=!!e1.geometry.boundsTree.closestPointToGeometry(a1.geometry,U,D,k,Y,X)&&D.distance<I;T&&(r1.position.copy(D.point),f1.position.copy(k.point).applyMatrix4(U),r1.position.applyMatrix4(e1.matrixWorld),f1.position.applyMatrix4(e1.matrixWorld),w1.position.copy(r1.position),w1.lookAt(f1.position),w1.scale.set(.01,.01,r1.position.distanceTo(f1.position))),a1.material.color.set(T?15277667:6710886),a1.material.emissive.set(15277667).multiplyScalar(T?.25:0);const E=T&&!$;w1.visible=E,r1.visible=E,f1.visible=E}function*I0(){if(j.volume.display==0)return;i0();const $=j.volume.display==2,U=new b0,I=j.volume.surfaceOnly,X=j.volume.resolution,Y=j.volume.distance,D=j.volume.radius;let k,e,T;$?(Q.add(h1),e=new e0().identity(),k=(a1.geometry.boundingSphere.radius+Y)*2,T=a1):(O.add(h1),k=(D+4*D/X)*2,e=new e0().copy(e1.matrixWorld).invert(),T=e1),h1.scale.set(k/2,k/2,k/2),h1.updateMatrixWorld(),N.init(X),N.updateMatrixWorld();const E=N.matrixWorld.getMaxScaleOnAxis(),R=-E,C=N.size,p=2*E/C,h=p/2;N.isolation=.5,N.position.x=1/C,N.position.y=1/C,N.position.z=1/C,N.reset();const w={};let v=0;for(let d=0;d<C;d++)for(let y=0;y<C;y++)for(let t=0;t<C;t++){if(U.x=R+h+y*p,U.y=R+h+d*p,U.z=R+h+t*p,$||I||U.length()<D&&!$){U.applyMatrix4(e);const a=!!T.geometry.boundsTree.closestPointToPoint(U,w,Y,Y),r=w.distance<Y;N.setCell(y,d,t,a&&r?0:1)}v++,yield v/(C*C*C)}N.blur(1)}let T1=null,y1=!0;function d0(){N1.begin(),H1&&(i0(!j.volume.alwaysShowDistance),H1=!1),i1&&i1.update(),y1&&(T1=I0(),y1=!1);let $=0;if(T1){let U=window.performance.now();for(;window.performance.now()-U<15;){const I=T1.next();if($=I.value,I.done){T1=null;break}}N.update(),N.visible=!j.volume.hideWhileGenerating&&j.volume.display!=0}T1||(N.visible=!0),document.getElementById("loader").setAttribute("style",`width: ${$*100}%`),t1.render(O,d1),N1.end(),requestAnimationFrame(d0)}G0();t0();d0();
