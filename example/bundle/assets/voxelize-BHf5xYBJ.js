import{W as U,c as V,D as L,A as I,P as q,f as K,M as T,T as Q,X,aP as Y,C as j,aQ as J,g as N,V as k,n as R,b as Z,Y as _,aq as $}from"./ExtendedTriangle-DttJMGjs.js";import{G as O}from"./GLTFLoader-DLQrcS9x.js";import{M as z}from"./meshopt_decoder.module-j6OW_3Rk.js";import{S as ee}from"./stats.min-DbzWzcqd.js";import{g as te}from"./lil-gui.module.min-BH_YJbPT.js";import{O as oe}from"./OrbitControls--aO4oMeG.js";import{R as ne}from"./RoundedBoxGeometry-DDmOh0UI.js";import{M as ae}from"./MeshBVH-DAC57waP.js";import{G as D}from"./GenerateMeshBVHWorker-C6KQ26fW.js";import"./BufferGeometryUtils-BVewXkEy.js";import"./_commonjsHelpers-CqkleIqs.js";let m,w,a,C,H,t,u,r=!1,v=null;const o={model:"Torus Knot",scale:.75,resolution:30,solid:!0,displayMesh:!0,displayBounds:!1,insideOnly:!1,rebuild:()=>r=!0},s={};re();E();function re(){document.getElementById("output"),m=new U({antialias:!0}),m.setPixelRatio(window.devicePixelRatio),m.setSize(window.innerWidth,window.innerHeight),m.setClearColor(1449501,1),m.outputEncoding=void 0,document.body.appendChild(m.domElement),a=new V;const d=new L(16777215,3);d.position.set(3,6,9),a.add(d);const l=new L(16777215,.3);l.position.set(-3,-6,-9),a.add(l);const c=new I(16777215,.75);a.add(c),w=new q(75,window.innerWidth/window.innerHeight,.1,50),w.position.set(1,.5,1),w.far=100,w.updateProjectionMatrix(),new oe(w,m.domElement),H=new ee,document.body.appendChild(H.dom);const h=new K({transparent:!0,wireframe:!0,depthWrite:!1,opacity:.02});new O().setMeshoptDecoder(z).load("https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/happy-buddha/buddha.glb",n=>{const e=n.scene.children[0];e.geometry.center(),e.material=h,e.scale.setScalar(1.5),e.rotation.y=-Math.PI/2,new D().generate(e.geometry).then(y=>{a.add(e),s.Buddha={model:e,bvh:y},o.model==="Buddha"&&(r=!0)})}),new O().setMeshoptDecoder(z).load("https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/stanford-bunny/bunny.glb",n=>{const e=n.scene.children[0];e.geometry.center(),e.material=h,e.rotation.y=Math.PI/2,e.scale.setScalar(.65),new D().generate(e.geometry).then(y=>{a.add(e),s.Bunny={model:e,bvh:y},o.model==="Bunny"&&(r=!0)})});{const n=new T(new Q(.3,.1,400,60),h),e=new ae(n.geometry);a.add(n),s["Torus Knot"]={bvh:e,model:n},r=!0}s.Buddha={model:null,bvh:null},s.Bunny={model:null,bvh:null};const B=new T(new X);u=new Y(B,16777215),u.material.opacity=.35,u.material.transparent=!0,a.add(u),C=new te,C.add(o,"model",Object.keys(s)).onChange(()=>{r=!0});const f=C.addFolder("voxelize");f.add(o,"resolution",5,75,1).onChange(()=>{r=!0}),f.add(o,"scale",.1,4).onChange(()=>{r=!0}),f.add(o,"solid").onChange(()=>{r=!0}),f.add(o,"insideOnly").onChange(()=>{r=!0}),f.add(o,"rebuild");const g=C.addFolder("helpers");g.add(o,"displayMesh"),g.add(o,"displayBounds"),window.addEventListener("resize",function(){w.aspect=window.innerWidth/window.innerHeight,w.updateProjectionMatrix(),m.setSize(window.innerWidth,window.innerHeight)},!1)}function*se(){const i=o.resolution,d=i**3,l=o.scale,c=l/i,h=new j(16777215),B=new j(16761095).convertSRGBToLinear();t&&t.instanceMatrix.count!==d&&(t.material.dispose(),t.dispose(),t.parent.remove(t),t=null);const{model:f,bvh:g}=s[o.model];if(!f)return;t||(t=new J(new ne(1,1,1,4,.1),new N,d),t.setColorAt(0,h),a.add(t));const n=-l/2+c*.5,e=new k,x=new $,y=new k().setScalar(c),b=new R,S=new Z,P=new R().copy(f.matrixWorld).invert(),M=new _;M.direction.set(0,0,1);let p=0;for(let W=0;W<i;W++)for(let F=0;F<i;F++)for(let G=0;G<i;G++){if(e.set(n+F*c,n+W*c,n+G*c),S.min.setScalar(-.5*c).add(e),S.max.setScalar(.5*c).add(e),g.intersectsBox(S,P))o.insideOnly||(b.compose(e,x,y),t.setMatrixAt(p,b),t.setColorAt(p,h),t.instanceMatrix.needsUpdate=!0,t.instanceColor.needsUpdate=!0,p++);else if(o.solid){M.origin.copy(e).applyMatrix4(P);const A=g.raycastFirst(M,2);A&&A.face.normal.dot(M.direction)>0&&(b.compose(e,x,y),t.setMatrixAt(p,b),t.setColorAt(p,B),t.instanceMatrix.needsUpdate=!0,t.instanceColor.needsUpdate=!0,p++)}t.count=p,yield}t.count=p}function E(){if(H.update(),requestAnimationFrame(E),a.updateMatrixWorld(!0),r&&(v=se(),r=!1),v){let d=window.performance.now();for(;window.performance.now()-d<16;)if(v.next().done){v=null;break}}u&&(u.object.scale.setScalar(o.scale),u.object.updateMatrixWorld(!0),u.update());for(const d in s){const l=s[d];l.model&&(l.model.visible=!1)}const{model:i}=s[o.model];i&&(i.visible=o.displayMesh,u.visible=o.displayBounds),m.render(a,w)}
