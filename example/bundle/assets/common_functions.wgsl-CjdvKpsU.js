import{B as si,be as br,bn as Xa,C as kt,f as Ps,L as ot,H as Ke,ah as Jl,bo as yn,aT as fe,bp as Vg,c as ja,bi as Ee,J as $e,bq as xs,a0 as At,n as Ue,br as Gg,bs as Og,y as Ze,x as xn,t as Os,bt as ur,bu as ls,ac as kg,D as zg,bv as $g,aW as Ka,A as Wg,q as Hg,bw as qg,bx as Xg,by as jg,bz as Kg,a4 as Yg,bA as Qg,bB as Zg,aS as Nr,a9 as ed,V as Y,u as dn,bC as ni,aX as Tn,b3 as vc,bD as ks,bE as Jg,bF as ey,bG as ty,M as gs,b7 as td,bH as Ya,P as mi,bI as sy,s as ny,bJ as wt,av as it,bK as ds,as as Ce,bL as hs,bM as ps,a7 as Jn,bN as Xt,bO as rs,l as ry,aq as iy,bP as oy,a5 as Qa,bQ as Za,bR as ra,e as ay,bS as uy,r as sd,bT as Mn,bU as cy,aN as nd,au as qe,b2 as Ui,aR as Ii,b1 as Vi,a6 as zs,a$ as ia,a_ as cr,b0 as rd,at as Rt,bV as id,bW as od,bX as ad,bY as ud,bZ as cd,b_ as Ja,b$ as ld,c0 as dd,c1 as Rc,c2 as j,c3 as vn,F as dt,c4 as hd,c5 as pd,c6 as fd,c7 as md,c8 as gd,c9 as yd,ca as xd,cb as Td,cc as _d,cd as bd,ce as Nd,ab as Sd,cf as ly,cg as dy,ch as hy,ci as lr,cj as gi,ck as yi,cl as xi,cm as vd,a8 as Rd,cn as Ad,E as wd,co as Ed,cp as Cd,cq as Md,cr as Bd,cs as py,ct as fy,cu as Fd,ax as er,ay as tr,aw as hn,cv as my,cw as eu,R as tu,aB as su,aC as Us,aA as nu,az as ru,cx as To,cy as ri,cz as ii,cA as oi,cB as Ac,cC as wc,cD as Ec,cE as Cc,cF as Mc,cG as oa,cH as aa,cI as ua,cJ as ca,cK as la,cL as da,cM as ha,cN as pa,cO as fa,cP as ma,cQ as ga,cR as ya,cS as xa,cT as Ta,cU as _a,cV as ba,cW as _o,cX as gy,cY as Bc,cZ as Fc,c_ as Pc,$ as yy,m as xy,g as Ty,aV as _y,c$ as by,d0 as Ny,aM as Sy,an as vy,w as Ry,d1 as Ay,ai as wy,d2 as Ey,aF as Cy,d3 as Pd,d4 as Ld,Q as Dd,d5 as Ti,d6 as _i,d7 as My,K as By,d8 as Lc,d9 as Fy,da as Py,aZ as Ly,bd as Dy,db as Uy,dc as Iy,i as Ud,ag as Dc,dd as Vy,de as Gy,df as Oy,dg as ky,N as zy,dh as $y,di as Wy,dj as Hy,dk as qy,dl as Xy,dm as jy,dn as Ky,z as Yy,I as Qy,dp as Zy,dq as Jy,dr as ex,ds as tx,Z as sx,dt as nx,du as rx,dv as ix,dw as Id,dx as ox,O as ax,dy as ux,X as Vd,dz as cx,dA as lx,dB as dx,a3 as Gd}from"./ExtendedTriangle-DttJMGjs.js";/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const hx=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","aoMapIntensity","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveIntensity","emissiveMap","envMap","envMapIntensity","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","lightMapIntensity","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"],bo=new WeakMap;class px{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=hx,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}needsVelocity(e){const t=e.getMRT();return t!==null&&t.has("velocity")}getRenderObjectData(e){let t=this.renderObjects.get(e);if(t===void 0){const{geometry:s,material:n,object:r}=e;if(t={material:this.getMaterialData(n),geometry:{id:s.id,attributes:this.getAttributesData(s.attributes),indexVersion:s.index?s.index.version:null,drawRange:{start:s.drawRange.start,count:s.drawRange.count}},worldMatrix:r.matrixWorld.clone()},r.center&&(t.center=r.center.clone()),r.morphTargetInfluences&&(t.morphTargetInfluences=r.morphTargetInfluences.slice()),e.bundle!==null&&(t.version=e.bundle.version),t.material.transmission>0){const{width:i,height:a}=e.context;t.bufferWidth=i,t.bufferHeight=a}t.lights=this.getLightsData(e.lightsNode.getLights()),this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const s in e){const n=e[s];t[s]={version:n.version}}return t}containsNode(e){const t=e.material;for(const s in t)if(t[s]&&t[s].isNode)return!0;return e.renderer.overrideNodes.modelViewMatrix!==null||e.renderer.overrideNodes.modelNormalViewMatrix!==null}getMaterialData(e){const t={};for(const s of this.refreshUniforms){const n=e[s];n!=null&&(typeof n=="object"&&n.clone!==void 0?n.isTexture===!0?t[s]={id:n.id,version:n.version}:t[s]=n.clone():t[s]=n)}return t}equals(e,t){const{object:s,material:n,geometry:r}=e,i=this.getRenderObjectData(e);if(i.worldMatrix.equals(s.matrixWorld)!==!0)return i.worldMatrix.copy(s.matrixWorld),!1;const a=i.material;for(const T in a){const S=a[T],R=n[T];if(S.equals!==void 0){if(S.equals(R)===!1)return S.copy(R),!1}else if(R.isTexture===!0){if(S.id!==R.id||S.version!==R.version)return S.id=R.id,S.version=R.version,!1}else if(S!==R)return a[T]=R,!1}if(a.transmission>0){const{width:T,height:S}=e.context;if(i.bufferWidth!==T||i.bufferHeight!==S)return i.bufferWidth=T,i.bufferHeight=S,!1}const u=i.geometry,c=r.attributes,l=u.attributes,d=Object.keys(l),p=Object.keys(c);if(u.id!==r.id)return u.id=r.id,!1;if(d.length!==p.length)return i.geometry.attributes=this.getAttributesData(c),!1;for(const T of d){const S=l[T],R=c[T];if(R===void 0)return delete l[T],!1;if(S.version!==R.version)return S.version=R.version,!1}const f=r.index,m=u.indexVersion,y=f?f.version:null;if(m!==y)return u.indexVersion=y,!1;if(u.drawRange.start!==r.drawRange.start||u.drawRange.count!==r.drawRange.count)return u.drawRange.start=r.drawRange.start,u.drawRange.count=r.drawRange.count,!1;if(i.morphTargetInfluences){let T=!1;for(let S=0;S<i.morphTargetInfluences.length;S++)i.morphTargetInfluences[S]!==s.morphTargetInfluences[S]&&(T=!0);if(T)return!0}if(i.lights){for(let T=0;T<t.length;T++)if(i.lights[T].map!==t[T].map)return!1}return i.center&&i.center.equals(s.center)===!1?(i.center.copy(s.center),!0):(e.bundle!==null&&(i.version=e.bundle.version),!0)}getLightsData(e){const t=[];for(const s of e)s.isSpotLight===!0&&s.map!==null&&t.push({map:s.map.version});return t}getLights(e,t){if(bo.has(e)){const n=bo.get(e);if(n.renderId===t)return n.lightsData}const s=this.getLightsData(e.getLights());return bo.set(e,{renderId:t,lightsData:s}),s}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e)||this.needsVelocity(t.renderer))return!0;const{renderId:s}=t;if(this.renderId!==s)return this.renderId=s,!0;const n=e.object.static===!0,r=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;if(n||r)return!1;const i=this.getLights(e.lightsNode,s);return this.equals(e,i)!==!0}}function dr(o,e=0){let t=3735928559^e,s=1103547991^e;if(o instanceof Array)for(let n=0,r;n<o.length;n++)r=o[n],t=Math.imul(t^r,2654435761),s=Math.imul(s^r,1597334677);else for(let n=0,r;n<o.length;n++)r=o.charCodeAt(n),t=Math.imul(t^r,2654435761),s=Math.imul(s^r,1597334677);return t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(s^s>>>13,3266489909),s=Math.imul(s^s>>>16,2246822507),s^=Math.imul(t^t>>>13,3266489909),4294967296*(2097151&s)+(t>>>0)}const Od=o=>dr(o),Gi=o=>dr(o),bi=(...o)=>dr(o);function kd(o,e=!1){const t=[];o.isNode===!0&&(t.push(o.id),o=o.getSelf());for(const{property:s,childNode:n}of Ni(o))t.push(dr(s.slice(0,-4)),n.getCacheKey(e));return dr(t)}function*Ni(o,e=!1){for(const t in o){if(t.startsWith("_")===!0)continue;const s=o[t];if(Array.isArray(s)===!0)for(let n=0;n<s.length;n++){const r=s[n];r&&(r.isNode===!0||e&&typeof r.toJSON=="function")&&(yield{property:t,index:n,childNode:r})}else if(s&&s.isNode===!0)yield{property:t,childNode:s};else if(s&&Object.getPrototypeOf(s)===Object.prototype)for(const n in s){if(n.startsWith("_")===!0)continue;const r=s[n];r&&(r.isNode===!0||e&&typeof r.toJSON=="function")&&(yield{property:t,index:n,childNode:r})}}}const fx=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),Uc=new WeakMap;function zd(o){return fx.get(o)}function Si(o){if(/[iu]?vec\d/.test(o))return o.startsWith("ivec")?Int32Array:o.startsWith("uvec")?Uint32Array:Float32Array;if(/mat\d/.test(o)||/float/.test(o))return Float32Array;if(/uint/.test(o))return Uint32Array;if(/int/.test(o))return Int32Array;throw new Error(`THREE.NodeUtils: Unsupported type: ${o}`)}function $d(o){if(/float|int|uint/.test(o))return 1;if(/vec2/.test(o))return 2;if(/vec3/.test(o))return 3;if(/vec4/.test(o)||/mat2/.test(o))return 4;if(/mat3/.test(o))return 9;if(/mat4/.test(o))return 16;console.error("THREE.TSL: Unsupported type:",o)}function mx(o){if(/float|int|uint/.test(o))return 1;if(/vec2/.test(o))return 2;if(/vec3/.test(o))return 3;if(/vec4/.test(o)||/mat2/.test(o))return 4;if(/mat3/.test(o))return 12;if(/mat4/.test(o))return 16;console.error("THREE.TSL: Unsupported type:",o)}function gx(o){if(/float|int|uint/.test(o))return 4;if(/vec2/.test(o))return 8;if(/vec3/.test(o)||/vec4/.test(o))return 16;if(/mat2/.test(o))return 8;if(/mat3/.test(o))return 48;if(/mat4/.test(o))return 64;console.error("THREE.TSL: Unsupported type:",o)}function cs(o){if(o==null)return null;const e=typeof o;return o.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":o.isVector2===!0?"vec2":o.isVector3===!0?"vec3":o.isVector4===!0?"vec4":o.isMatrix2===!0?"mat2":o.isMatrix3===!0?"mat3":o.isMatrix4===!0?"mat4":o.isColor===!0?"color":o instanceof ArrayBuffer?"ArrayBuffer":null}function Wd(o,...e){const t=o?o.slice(-4):void 0;return e.length===1&&(t==="vec2"?e=[e[0],e[0]]:t==="vec3"?e=[e[0],e[0],e[0]]:t==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),o==="color"?new kt(...e):t==="vec2"?new $e(...e):t==="vec3"?new Y(...e):t==="vec4"?new fe(...e):t==="mat2"?new Ld(...e):t==="mat3"?new Nr(...e):t==="mat4"?new Ue(...e):o==="bool"?e[0]||!1:o==="float"||o==="int"||o==="uint"?e[0]||0:o==="string"?e[0]||"":o==="ArrayBuffer"?Xd(e[0]):null}function Hd(o){let e=Uc.get(o);return e===void 0&&(e={},Uc.set(o,e)),e}function qd(o){let e="";const t=new Uint8Array(o);for(let s=0;s<t.length;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function Xd(o){return Uint8Array.from(atob(o),e=>e.charCodeAt(0)).buffer}const Kn={VERTEX:"vertex",FRAGMENT:"fragment"},q={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},yx={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},Oe={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},jd=["fragment","vertex"],Na=["setup","analyze","generate"],Sa=[...jd,"compute"],Ks=["x","y","z","w"],xx={analyze:"setup",generate:"analyze"};let Tx=0;class z extends Ya{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=q.NONE,this.updateBeforeType=q.NONE,this.updateAfterType=q.NONE,this.uuid=Dd.generateUUID(),this.version=0,this.global=!1,this.parents=!1,this.isNode=!0,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:Tx++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,q.FRAME)}onRenderUpdate(e){return this.onUpdate(e,q.RENDER)}onObjectUpdate(e){return this.onUpdate(e,q.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of Ni(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=bi(kd(this,e),this.customCacheKey()),this._cacheKeyVersion=this.version),this._cacheKey}customCacheKey(){return 0}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getMemberType(){return"void"}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}getArrayCount(){return null}setup(e){const t=e.getNodeProperties(this);let s=0;for(const n of this.getChildren())t["node"+s++]=n;return t.outputNode||null}analyze(e,t=null){const s=e.increaseUsage(this);if(this.parents===!0){const n=e.getDataFromNode(this,"any");n.stages=n.stages||{},n.stages[e.shaderStage]=n.stages[e.shaderStage]||[],n.stages[e.shaderStage].push(t)}if(s===1){const n=e.getNodeProperties(this);for(const r of Object.values(n))r&&r.isNode===!0&&r.build(e,this)}}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);if(s&&s.isNode===!0)return s.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const s=this.getShared(e);if(this!==s)return s.build(e,t);const n=e.getDataFromNode(this);n.buildStages=n.buildStages||{},n.buildStages[e.buildStage]=!0;const r=xx[e.buildStage];if(r&&n.buildStages[r]!==!0){const u=e.getBuildStage();e.setBuildStage(r),this.build(e),e.setBuildStage(u)}e.addNode(this),e.addChain(this);let i=null;const a=e.getBuildStage();if(a==="setup"){this.updateReference(e);const u=e.getNodeProperties(this);if(u.initialized!==!0){u.initialized=!0,u.outputNode=this.setup(e)||u.outputNode||null;for(const c of Object.values(u))if(c&&c.isNode===!0){if(c.parents===!0){const l=e.getNodeProperties(c);l.parents=l.parents||[],l.parents.push(this)}c.build(e)}}i=u.outputNode}else if(a==="analyze")this.analyze(e,t);else if(a==="generate")if(this.generate.length===1){const c=this.getNodeType(e),l=e.getDataFromNode(this);i=l.snippet,i===void 0?l.generated===void 0?(l.generated=!0,i=this.generate(e)||"",l.snippet=i):(console.warn("THREE.Node: Recursion detected.",this),i="/* Recursion detected. */"):l.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),i=e.format(i,c,t)}else i=this.generate(e,t)||"";return e.removeChain(this),e.addSequentialNode(this),i}getSerializeChildren(){return Ni(this)}serialize(e){const t=this.getSerializeChildren(),s={};for(const{property:n,index:r,childNode:i}of t)r!==void 0?(s[n]===void 0&&(s[n]=Number.isInteger(r)?[]:{}),s[n][r]=i.toJSON(e.meta).uuid):s[n]=i.toJSON(e.meta).uuid;Object.keys(s).length>0&&(e.inputNodes=s)}deserialize(e){if(e.inputNodes!==void 0){const t=e.meta.nodes;for(const s in e.inputNodes)if(Array.isArray(e.inputNodes[s])){const n=[];for(const r of e.inputNodes[s])n.push(t[r]);this[s]=n}else if(typeof e.inputNodes[s]=="object"){const n={};for(const r in e.inputNodes[s]){const i=e.inputNodes[s][r];n[r]=t[i]}this[s]=n}else{const n=e.inputNodes[s];this[s]=t[n]}}}toJSON(e){const{uuid:t,type:s}=this,n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{},nodes:{}});let r=e.nodes[t];r===void 0&&(r={uuid:t,type:s,meta:e,metadata:{version:4.7,type:"Node",generator:"Node.toJSON"}},n!==!0&&(e.nodes[r.uuid]=r),this.serialize(r),delete r.meta);function i(a){const u=[];for(const c in a){const l=a[c];delete l.metadata,u.push(l)}return u}if(n){const a=i(e.textures),u=i(e.images),c=i(e.nodes);a.length>0&&(r.textures=a),u.length>0&&(r.images=u),c.length>0&&(r.nodes=c)}return r}}class Ys extends z{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.indexNode.getNodeType(e),s=this.node.build(e),n=this.indexNode.build(e,!e.isVector(t)&&e.isInteger(t)?t:"uint");return`${s}[ ${n} ]`}}class Kd extends z{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let s=null;for(const n of this.convertTo.split("|"))(s===null||e.getTypeLength(t)===e.getTypeLength(n))&&(s=n);return s}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const s=this.node,n=this.getNodeType(e),r=s.build(e,n);return e.format(r,n,t)}}class Be extends z{static get type(){return"TempNode"}constructor(e=null){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if(e.getBuildStage()==="generate"){const n=e.getVectorType(this.getNodeType(e,t)),r=e.getDataFromNode(this);if(r.propertyName!==void 0)return e.format(r.propertyName,n,t);if(n!=="void"&&t!=="void"&&this.hasDependencies(e)){const i=super.build(e,n),a=e.getVarFromNode(this,null,n),u=e.getPropertyName(a);return e.addLineFlowCode(`${u} = ${i}`,this),r.snippet=i,r.propertyName=u,e.format(r.propertyName,n,t)}}return super.build(e,t)}}class _x extends Be{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,s)=>t+e.getTypeLength(s.getNodeType(e)),0))}generate(e,t){const s=this.getNodeType(e),n=e.getTypeLength(s),r=this.nodes,i=e.getComponentType(s),a=[];let u=0;for(const l of r){if(u>=n){console.error(`THREE.TSL: Length of parameters exceeds maximum length of function '${s}()' type.`);break}let d=l.getNodeType(e),p=e.getTypeLength(d),f;u+p>n&&(console.error(`THREE.TSL: Length of '${s}()' data exceeds maximum length of output type.`),p=n-u,d=e.getTypeFromLength(p)),u+=p,f=l.build(e,d);const m=e.getComponentType(d);m!==i&&(f=e.format(f,m,i)),a.push(f)}const c=`${e.getType(s)}( ${a.join(", ")} )`;return e.format(c,s,t)}}const bx=Ks.join("");class va extends z{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(Ks.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const s=this.node,n=e.getTypeLength(s.getNodeType(e));let r=null;if(n>1){let i=null;this.getVectorLength()>=n&&(i=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const u=s.build(e,i);this.components.length===n&&this.components===bx.slice(0,this.components.length)?r=e.format(u,i,t):r=e.format(`${u}.${this.components}`,this.getNodeType(e),t)}else r=s.build(e,t);return r}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class Nx extends Be{static get type(){return"SetNode"}constructor(e,t,s){super(),this.sourceNode=e,this.components=t,this.targetNode=s}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:s,targetNode:n}=this,r=this.getNodeType(e),i=e.getComponentType(n.getNodeType(e)),a=e.getTypeFromLength(s.length,i),u=n.build(e,a),c=t.build(e,r),l=e.getTypeLength(r),d=[];for(let p=0;p<l;p++){const f=Ks[p];f===s[0]?(d.push(u),p+=s.length-1):d.push(c+"."+f)}return`${e.getType(r)}( ${d.join(", ")} )`}}class Sx extends Be{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:s}=this,n=this.getNodeType(e),r=s.build(e),i=e.getVarFromNode(this),a=e.getPropertyName(i);e.addLineFlowCode(a+" = "+r,this);const u=e.getTypeLength(n),c=[];let l=0;for(let d=0;d<u;d++){const p=Ks[d];p===t[l]?(c.push("1.0 - "+(a+"."+p)),l++):c.push(a+"."+p)}return`${e.getType(n)}( ${c.join(", ")} )`}}class iu extends z{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?cs(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=cs(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=qd(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?Wd(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}const Ic=/float|u?int/;class Ct extends iu{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const s=this.getNodeType(e);return Ic.test(s)&&Ic.test(t)?e.generateConst(t,this.value):e.format(this.generateConst(e),s,t)}}class vx extends z{static get type(){return"MemberNode"}constructor(e,t){super(),this.node=e,this.property=t,this.isMemberNode=!0}getNodeType(e){return this.node.getMemberType(e,this.property)}generate(e){return this.node.build(e)+"."+this.property}}let Xs=null;const pn=new Map;function A(o,e){if(pn.has(o)){console.warn(`THREE.TSL: Redefinition of method chaining '${o}'.`);return}if(typeof e!="function")throw new Error(`THREE.TSL: Node element ${o} is not a function`);pn.set(o,e)}const Yd=o=>o.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Vc=o=>Yd(o).split("").sort().join(""),Qd={setup(o,e){const t=e.shift();return o(Sr(t),...e)},get(o,e,t){if(typeof e=="string"&&o[e]===void 0){if(o.isStackNode!==!0&&e==="assign")return(...s)=>(Xs.assign(t,...s),t);if(pn.has(e)){const s=pn.get(e);return o.isStackNode?(...n)=>t.add(s(...n)):(...n)=>s(t,...n)}else{if(e==="toVarIntent")return()=>t;if(e==="self")return o;if(e.endsWith("Assign")&&pn.has(e.slice(0,e.length-6))){const s=pn.get(e.slice(0,e.length-6));return o.isStackNode?(...n)=>t.assign(n[0],s(...n)):(...n)=>t.assign(s(t,...n))}else{if(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0)return e=Yd(e),C(new va(t,e));if(/^set[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=Vc(e.slice(3).toLowerCase()),s=>C(new Nx(o,e,C(s)));if(/^flip[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=Vc(e.slice(4).toLowerCase()),()=>C(new Sx(C(o),e));if(e==="width"||e==="height"||e==="depth")return e==="width"?e="x":e==="height"?e="y":e==="depth"&&(e="z"),C(new va(o,e));if(/^\d+$/.test(e)===!0)return C(new Ys(t,new Ct(Number(e),"uint")));if(/^get$/.test(e)===!0)return s=>C(new vx(t,s))}}}return Reflect.get(o,e,t)},set(o,e,t,s){return typeof e=="string"&&o[e]===void 0&&(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0||e==="width"||e==="height"||e==="depth"||/^\d+$/.test(e)===!0)?(s[e].assign(t),!0):Reflect.set(o,e,t,s)}},No=new WeakMap,Gc=new WeakMap,Rx=function(o,e=null){const t=cs(o);if(t==="node"){let s=No.get(o);return s===void 0&&(s=new Proxy(o,Qd),No.set(o,s),No.set(s,s)),s}else{if(e===null&&(t==="float"||t==="boolean")||t&&t!=="shader"&&t!=="string")return C(Ra(o,e));if(t==="shader")return o.isFn?o:N(o)}return o},Ax=function(o,e=null){for(const t in o)o[t]=C(o[t],e);return o},wx=function(o,e=null){const t=o.length;for(let s=0;s<t;s++)o[s]=C(o[s],e);return o},Zd=function(o,e=null,t=null,s=null){function n(l){return s!==null?(l=C(Object.assign(l,s)),s.intent===!0&&(l=l.toVarIntent())):l=C(l),l}let r,i=e,a,u;function c(l){let d;return i?d=/[a-z]/i.test(i)?i+"()":i:d=o.type,a!==void 0&&l.length<a?(console.error(`THREE.TSL: "${d}" parameter length is less than minimum required.`),l.concat(new Array(a-l.length).fill(0))):u!==void 0&&l.length>u?(console.error(`THREE.TSL: "${d}" parameter length exceeds limit.`),l.slice(0,u)):l}return e===null?r=(...l)=>n(new o(...$s(c(l)))):t!==null?(t=C(t),r=(...l)=>n(new o(e,...$s(c(l)),t))):r=(...l)=>n(new o(e,...$s(c(l)))),r.setParameterLength=(...l)=>(l.length===1?a=u=l[0]:l.length===2&&([a,u]=l),r),r.setName=l=>(i=l,r),r},Ex=function(o,...e){return C(new o(...$s(e)))};class Cx extends z{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t,this.isShaderCallNodeInternal=!0}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}getMemberType(e,t){return this.getOutputNode(e).getMemberType(e,t)}call(e){const{shaderNode:t,inputNodes:s}=this,n=e.getNodeProperties(t),r=e.getClosestSubBuild(t.subBuilds)||"",i=r||"default";if(n[i])return n[i];const a=e.subBuildFn;e.subBuildFn=r;let u=null;if(t.layout){let c=Gc.get(e.constructor);c===void 0&&(c=new WeakMap,Gc.set(e.constructor,c));let l=c.get(t);l===void 0&&(l=C(e.buildFunctionNode(t)),c.set(t,l)),e.addInclude(l),u=C(l.call(s))}else{let c=s;if(Array.isArray(c)){let p=0;c=new Proxy(c,{get:(f,m,y)=>f[m]===void 0?f[p++]:Reflect.get(f,m,y)})}const l=t.jsFunc,d=c!==null||l.length>1?l(c||[],e):l(e);u=C(d)}return e.subBuildFn=a,t.once&&(n[i]=u),u}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}getOutputNode(e){const t=e.getNodeProperties(this),s=e.getSubBuildOutput(this);return t[s]=t[s]||this.setupOutput(e),t[s].subBuild=e.getClosestSubBuild(this),t[s]}build(e,t=null){let s=null;const n=e.getBuildStage(),r=e.getNodeProperties(this),i=e.getSubBuildOutput(this),a=this.getOutputNode(e);if(n==="setup"){const u=e.getSubBuildProperty("initialized",this);if(r[u]!==!0&&(r[u]=!0,r[i]=this.getOutputNode(e),r[i].build(e),this.shaderNode.subBuilds))for(const c of e.chaining){const l=e.getDataFromNode(c,"any");l.subBuilds=l.subBuilds||new Set;for(const d of this.shaderNode.subBuilds)l.subBuilds.add(d)}s=r[i]}else n==="analyze"?a.build(e,t):n==="generate"&&(s=a.build(e,t)||"");return s}}class Mx extends z{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return Sr(e),C(new Cx(this,e))}setup(){return this.call()}}const Bx=[!1,!0],Fx=[0,1,2,3],Px=[-1,-2],Jd=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],ou=new Map;for(const o of Bx)ou.set(o,new Ct(o));const au=new Map;for(const o of Fx)au.set(o,new Ct(o,"uint"));const uu=new Map([...au].map(o=>new Ct(o.value,"int")));for(const o of Px)uu.set(o,new Ct(o,"int"));const Oi=new Map([...uu].map(o=>new Ct(o.value)));for(const o of Jd)Oi.set(o,new Ct(o));for(const o of Jd)Oi.set(-o,new Ct(-o));const ki={bool:ou,uint:au,ints:uu,float:Oi},Oc=new Map([...ou,...Oi]),Ra=(o,e)=>Oc.has(o)?Oc.get(o):o.isNode===!0?o:new Ct(o,e),Fe=function(o,e=null){return(...t)=>{if((t.length===0||!["bool","float","int","uint"].includes(o)&&t.every(n=>typeof n!="object"))&&(t=[Wd(o,...t)]),t.length===1&&e!==null&&e.has(t[0]))return Yn(e.get(t[0]));if(t.length===1){const n=Ra(t[0],o);return n.nodeType===o?Yn(n):Yn(new Kd(n,o))}const s=t.map(n=>Ra(n));return Yn(new _x(s,o))}},hr=o=>typeof o=="object"&&o!==null?o.value:o,eh=o=>o!=null?o.nodeType||o.convertTo||(typeof o=="string"?o:null):null;function fn(o,e){return new Proxy(new Mx(o,e),Qd)}const C=(o,e=null)=>Rx(o,e),Yn=(o,e=null)=>C(o,e).toVarIntent(),Sr=(o,e=null)=>new Ax(o,e),$s=(o,e=null)=>new wx(o,e),H=(o,e=null,t=null,s=null)=>new Zd(o,e,t,s),D=(o,...e)=>new Ex(o,...e),G=(o,e=null,t=null,s={})=>new Zd(o,e,t,{intent:!0,...s});let Lx=0;const N=(o,e=null)=>{let t=null;e!==null&&(typeof e=="object"?t=e.return:(typeof e=="string"?t=e:console.error("THREE.TSL: Invalid layout type."),e=null));const s=new fn(o,t),n=(...r)=>{let i;Sr(r),r[0]&&(r[0].isNode||Object.getPrototypeOf(r[0])!==Object.prototype)?i=[...r]:i=r[0];const u=s.call(i);return t==="void"&&u.toStack(),u.toVarIntent()};if(n.shaderNode=s,n.id=s.id,n.isFn=!0,n.getNodeType=(...r)=>s.getNodeType(...r),n.getCacheKey=(...r)=>s.getCacheKey(...r),n.setLayout=r=>(s.setLayout(r),n),n.once=(r=null)=>(s.once=!0,s.subBuilds=r,n),e!==null){if(typeof e.inputs!="object"){const r={name:"fn"+Lx++,type:t,inputs:[]};for(const i in e)i!=="return"&&r.inputs.push({name:i,type:e[i]});e=r}n.setLayout(e)}return n},pr=o=>{Xs=o},zi=()=>Xs,W=(...o)=>Xs.If(...o),Dx=(...o)=>Xs.Switch(...o);function $i(o){return Xs&&Xs.add(o),o}A("toStack",$i);const th=new Fe("color"),g=new Fe("float",ki.float),x=new Fe("int",ki.ints),I=new Fe("uint",ki.uint),yt=new Fe("bool",ki.bool),M=new Fe("vec2"),Pe=new Fe("ivec2"),sh=new Fe("uvec2"),nh=new Fe("bvec2"),b=new Fe("vec3"),rh=new Fe("ivec3"),Bn=new Fe("uvec3"),cu=new Fe("bvec3"),O=new Fe("vec4"),ih=new Fe("ivec4"),oh=new Fe("uvec4"),ah=new Fe("bvec4"),Wi=new Fe("mat2"),We=new Fe("mat3"),Ws=new Fe("mat4"),Ux=(o="")=>C(new Ct(o,"string")),Ix=o=>C(new Ct(o,"ArrayBuffer"));A("toColor",th);A("toFloat",g);A("toInt",x);A("toUint",I);A("toBool",yt);A("toVec2",M);A("toIVec2",Pe);A("toUVec2",sh);A("toBVec2",nh);A("toVec3",b);A("toIVec3",rh);A("toUVec3",Bn);A("toBVec3",cu);A("toVec4",O);A("toIVec4",ih);A("toUVec4",oh);A("toBVec4",ah);A("toMat2",Wi);A("toMat3",We);A("toMat4",Ws);const uh=H(Ys).setParameterLength(2),ch=(o,e)=>C(new Kd(C(o),e)),Vx=(o,e)=>C(new va(C(o),e));A("element",uh);A("convert",ch);const Gx=o=>(console.warn("THREE.TSL: append() has been renamed to Stack()."),$i(o));A("append",o=>(console.warn("THREE.TSL: .append() has been renamed to .toStack()."),$i(o)));class ie extends z{static get type(){return"PropertyNode"}constructor(e,t=null,s=!1){super(e),this.name=t,this.varying=s,this.isPropertyNode=!0,this.global=!0}getHash(e){return this.name||super.getHash(e)}generate(e){let t;return this.varying===!0?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const Kt=(o,e)=>C(new ie(o,e)),fr=(o,e)=>C(new ie(o,e,!0)),ne=D(ie,"vec4","DiffuseColor"),Aa=D(ie,"vec3","EmissiveColor"),Ft=D(ie,"float","Roughness"),mr=D(ie,"float","Metalness"),vi=D(ie,"float","Clearcoat"),gr=D(ie,"float","ClearcoatRoughness"),Is=D(ie,"vec3","Sheen"),Hi=D(ie,"float","SheenRoughness"),qi=D(ie,"float","Iridescence"),lu=D(ie,"float","IridescenceIOR"),du=D(ie,"float","IridescenceThickness"),Ri=D(ie,"float","AlphaT"),is=D(ie,"float","Anisotropy"),sr=D(ie,"vec3","AnisotropyT"),Hs=D(ie,"vec3","AnisotropyB"),je=D(ie,"color","SpecularColor"),yr=D(ie,"float","SpecularF90"),Ai=D(ie,"float","Shininess"),_n=D(ie,"vec4","Output"),ai=D(ie,"float","dashSize"),wa=D(ie,"float","gapSize"),Ox=D(ie,"float","pointWidth"),nr=D(ie,"float","IOR"),wi=D(ie,"float","Transmission"),hu=D(ie,"float","Thickness"),pu=D(ie,"float","AttenuationDistance"),fu=D(ie,"color","AttenuationColor"),mu=D(ie,"float","Dispersion");class lh extends z{static get type(){return"UniformGroupNode"}constructor(e,t=!1,s=1){super("string"),this.name=e,this.shared=t,this.order=s,this.isUniformGroup=!0}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const dh=o=>new lh(o),Xi=(o,e=0)=>new lh(o,!0,e),hh=Xi("frame"),$=Xi("render"),gu=dh("object");class vr extends iu{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=gu}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const s=this.getSelf();return e=e.bind(s),super.onUpdate(n=>{const r=e(n,s);r!==void 0&&(this.value=r)},t)}getInputType(e){let t=super.getInputType(e);return t==="bool"&&(t="uint"),t}generate(e,t){const s=this.getNodeType(e),n=this.getUniformHash(e);let r=e.getNodeFromHash(n);r===void 0&&(e.setHashNode(this,n),r=this);const i=r.getInputType(e),a=e.getUniformFromNode(r,i,e.shaderStage,this.name||e.context.nodeName),u=e.getPropertyName(a);e.context.nodeName!==void 0&&delete e.context.nodeName;let c=u;if(s==="bool"){const l=e.getDataFromNode(this);let d=l.propertyName;if(d===void 0){const p=e.getVarFromNode(this,null,"bool");d=e.getPropertyName(p),l.propertyName=d,c=e.format(u,i,s),e.addLineFlowCode(`${d} = ${c}`,this)}c=d}return e.format(c,s,t)}}const k=(o,e)=>{const t=eh(e||o),s=o&&o.isNode===!0?o.node&&o.node.value||o.value:o;return C(new vr(s,t))};class kc extends Be{static get type(){return"ArrayNode"}constructor(e,t,s=null){super(e),this.count=t,this.values=s,this.isArrayNode=!0}getArrayCount(){return this.count}getNodeType(e){return this.nodeType===null&&(this.nodeType=this.values[0].getNodeType(e)),this.nodeType}getElementType(e){return this.getNodeType(e)}generate(e){const t=this.getNodeType(e);return e.generateArray(t,this.count,this.values)}}const ph=(...o)=>{let e;if(o.length===1){const t=o[0];e=new kc(null,t.length,t)}else{const t=o[0],s=o[1];e=new kc(t,s)}return C(e)};A("toArray",(o,e)=>ph(Array(e).fill(o)));class kx extends Be{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t,this.isAssignNode=!0}hasDependencies(){return!1}getNodeType(e,t){return t!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(e.isAvailable("swizzleAssign")===!1&&t.isSplitNode&&t.components.length>1){const s=e.getTypeLength(t.node.getNodeType(e));return Ks.join("").slice(0,s)!==t.components}return!1}setup(e){const{targetNode:t,sourceNode:s}=this,n=e.getNodeProperties(t);n.assign=!0;const r=e.getNodeProperties(this);r.sourceNode=s,r.targetNode=t.context({assign:!0})}generate(e,t){const{targetNode:s,sourceNode:n}=e.getNodeProperties(this),r=this.needsSplitAssign(e),i=s.getNodeType(e),a=s.build(e),u=n.build(e,i),c=n.getNodeType(e),l=e.getDataFromNode(this);let d;if(l.initialized===!0)t!=="void"&&(d=a);else if(r){const p=e.getVarFromNode(this,null,i),f=e.getPropertyName(p);e.addLineFlowCode(`${f} = ${u}`,this);const m=s.node,T=m.node.context({assign:!0}).build(e);for(let S=0;S<m.components.length;S++){const R=m.components[S];e.addLineFlowCode(`${T}.${R} = ${f}[ ${S} ]`,this)}t!=="void"&&(d=a)}else d=`${a} = ${u}`,(t==="void"||c==="void")&&(e.addLineFlowCode(d,this),t!=="void"&&(d=a));return l.initialized=!0,e.format(d,i,t)}}const fh=H(kx).setParameterLength(2);A("assign",fh);class zx extends Be{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],s=this.functionNode,n=s.getInputs(e),r=this.parameters,i=(u,c)=>{const l=c.type,d=l==="pointer";let p;return d?p="&"+u.build(e):p=u.build(e,l),p};if(Array.isArray(r)){if(r.length>n.length)console.error("THREE.TSL: The number of provided parameters exceeds the expected number of inputs in 'Fn()'."),r.length=n.length;else if(r.length<n.length)for(console.error("THREE.TSL: The number of provided parameters is less than the expected number of inputs in 'Fn()'.");r.length<n.length;)r.push(g(0));for(let u=0;u<r.length;u++)t.push(i(r[u],n[u]))}else for(const u of n){const c=r[u.name];c!==void 0?t.push(i(c,u)):(console.error(`THREE.TSL: Input '${u.name}' not found in 'Fn()'.`),t.push(i(g(0),u)))}return`${s.build(e,"property")}( ${t.join(", ")} )`}}const mh=(o,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?$s(e):Sr(e[0]),C(new zx(C(o),e)));A("call",mh);const $x={"==":"equal","!=":"notEqual","<":"lessThan",">":"greaterThan","<=":"lessThanEqual",">=":"greaterThanEqual","%":"mod"};class xe extends Be{static get type(){return"OperatorNode"}constructor(e,t,s,...n){if(super(),n.length>0){let r=new xe(e,t,s);for(let i=0;i<n.length-1;i++)r=new xe(e,r,n[i]);t=r,s=n[n.length-1]}this.op=e,this.aNode=t,this.bNode=s,this.isOperatorNode=!0}getOperatorMethod(e,t){return e.getMethod($x[this.op],t)}getNodeType(e){const t=this.op,s=this.aNode,n=this.bNode,r=s.getNodeType(e),i=n?n.getNodeType(e):null;if(r==="void"||i==="void")return"void";if(t==="%")return r;if(t==="~"||t==="&"||t==="|"||t==="^"||t===">>"||t==="<<")return e.getIntegerType(r);if(t==="!"||t==="&&"||t==="||"||t==="^^")return"bool";if(t==="=="||t==="!="||t==="<"||t===">"||t==="<="||t===">="){const a=Math.max(e.getTypeLength(r),e.getTypeLength(i));return a>1?`bvec${a}`:"bool"}else{if(e.isMatrix(r)){if(i==="float")return r;if(e.isVector(i))return e.getVectorFromMatrix(r);if(e.isMatrix(i))return r}else if(e.isMatrix(i)){if(r==="float")return i;if(e.isVector(r))return e.getVectorFromMatrix(i)}return e.getTypeLength(i)>e.getTypeLength(r)?i:r}}generate(e,t){const s=this.op,{aNode:n,bNode:r}=this,i=this.getNodeType(e);let a=null,u=null;i!=="void"?(a=n.getNodeType(e),u=r?r.getNodeType(e):null,s==="<"||s===">"||s==="<="||s===">="||s==="=="||s==="!="?e.isVector(a)?u=a:e.isVector(u)?a=u:a!==u&&(a=u="float"):s===">>"||s==="<<"?(a=i,u=e.changeComponentType(u,"uint")):s==="%"?(a=i,u=e.isInteger(a)&&e.isInteger(u)?u:a):e.isMatrix(a)?u==="float"?u="float":e.isVector(u)?u=e.getVectorFromMatrix(a):e.isMatrix(u)||(a=u=i):e.isMatrix(u)?a==="float"?a="float":e.isVector(a)?a=e.getVectorFromMatrix(u):a=u=i:a=u=i):a=u=i;const c=n.build(e,a),l=r?r.build(e,u):null,d=e.getFunctionOperator(s);if(t!=="void"){const p=e.renderer.coordinateSystem===ur;if(s==="=="||s==="!="||s==="<"||s===">"||s==="<="||s===">=")return p?e.isVector(a)?e.format(`${this.getOperatorMethod(e,t)}( ${c}, ${l} )`,i,t):e.format(`( ${c} ${s} ${l} )`,i,t):e.format(`( ${c} ${s} ${l} )`,i,t);if(s==="%")return e.isInteger(u)?e.format(`( ${c} % ${l} )`,i,t):e.format(`${this.getOperatorMethod(e,i)}( ${c}, ${l} )`,i,t);if(s==="!"||s==="~")return e.format(`(${s}${c})`,a,t);if(d)return e.format(`${d}( ${c}, ${l} )`,i,t);if(e.isMatrix(a)&&u==="float")return e.format(`( ${l} ${s} ${c} )`,i,t);if(a==="float"&&e.isMatrix(u))return e.format(`${c} ${s} ${l}`,i,t);{let f=`( ${c} ${s} ${l} )`;return!p&&i==="bool"&&e.isVector(a)&&e.isVector(u)&&(f=`all${f}`),e.format(f,i,t)}}else if(a!=="void")return d?e.format(`${d}( ${c}, ${l} )`,i,t):e.isMatrix(a)&&u==="float"?e.format(`${l} ${s} ${c}`,i,t):e.format(`${c} ${s} ${l}`,i,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const Re=G(xe,"+").setParameterLength(2,1/0).setName("add"),Q=G(xe,"-").setParameterLength(2,1/0).setName("sub"),X=G(xe,"*").setParameterLength(2,1/0).setName("mul"),at=G(xe,"/").setParameterLength(2,1/0).setName("div"),Rr=G(xe,"%").setParameterLength(2).setName("mod"),yu=G(xe,"==").setParameterLength(2).setName("equal"),gh=G(xe,"!=").setParameterLength(2).setName("notEqual"),yh=G(xe,"<").setParameterLength(2).setName("lessThan"),xu=G(xe,">").setParameterLength(2).setName("greaterThan"),xh=G(xe,"<=").setParameterLength(2).setName("lessThanEqual"),Th=G(xe,">=").setParameterLength(2).setName("greaterThanEqual"),_h=G(xe,"&&").setParameterLength(2,1/0).setName("and"),bh=G(xe,"||").setParameterLength(2,1/0).setName("or"),Nh=G(xe,"!").setParameterLength(1).setName("not"),Sh=G(xe,"^^").setParameterLength(2).setName("xor"),vh=G(xe,"&").setParameterLength(2).setName("bitAnd"),Rh=G(xe,"~").setParameterLength(2).setName("bitNot"),Ah=G(xe,"|").setParameterLength(2).setName("bitOr"),wh=G(xe,"^").setParameterLength(2).setName("bitXor"),Eh=G(xe,"<<").setParameterLength(2).setName("shiftLeft"),Ch=G(xe,">>").setParameterLength(2).setName("shiftRight"),Mh=N(([o])=>(o.addAssign(1),o)),Bh=N(([o])=>(o.subAssign(1),o)),Fh=N(([o])=>{const e=x(o).toConst();return o.addAssign(1),e}),Ph=N(([o])=>{const e=x(o).toConst();return o.subAssign(1),e});A("add",Re);A("sub",Q);A("mul",X);A("div",at);A("mod",Rr);A("equal",yu);A("notEqual",gh);A("lessThan",yh);A("greaterThan",xu);A("lessThanEqual",xh);A("greaterThanEqual",Th);A("and",_h);A("or",bh);A("not",Nh);A("xor",Sh);A("bitAnd",vh);A("bitNot",Rh);A("bitOr",Ah);A("bitXor",wh);A("shiftLeft",Eh);A("shiftRight",Ch);A("incrementBefore",Mh);A("decrementBefore",Bh);A("increment",Fh);A("decrement",Ph);const Lh=(o,e)=>(console.warn('THREE.TSL: "modInt()" is deprecated. Use "mod( int( ... ) )" instead.'),Rr(x(o),x(e)));A("modInt",Lh);class v extends Be{static get type(){return"MathNode"}constructor(e,t,s=null,n=null){if(super(),(e===v.MAX||e===v.MIN)&&arguments.length>3){let r=new v(e,t,s);for(let i=2;i<arguments.length-1;i++)r=new v(e,r,arguments[i]);t=r,s=arguments[arguments.length-1],n=null}this.method=e,this.aNode=t,this.bNode=s,this.cNode=n,this.isMathNode=!0}getInputType(e){const t=this.aNode.getNodeType(e),s=this.bNode?this.bNode.getNodeType(e):null,n=this.cNode?this.cNode.getNodeType(e):null,r=e.isMatrix(t)?0:e.getTypeLength(t),i=e.isMatrix(s)?0:e.getTypeLength(s),a=e.isMatrix(n)?0:e.getTypeLength(n);return r>i&&r>a?t:i>a?s:a>r?n:t}getNodeType(e){const t=this.method;return t===v.LENGTH||t===v.DISTANCE||t===v.DOT?"float":t===v.CROSS?"vec3":t===v.ALL||t===v.ANY?"bool":t===v.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):this.getInputType(e)}setup(e){const{aNode:t,bNode:s,method:n}=this;let r=null;if(n===v.ONE_MINUS)r=Q(1,t);else if(n===v.RECIPROCAL)r=at(1,t);else if(n===v.DIFFERENCE)r=de(Q(t,s));else if(n===v.TRANSFORM_DIRECTION){let i=t,a=s;e.isMatrix(i.getNodeType(e))?a=O(b(a),0):i=O(b(i),0);const u=X(i,a).xyz;r=Qt(u)}return r!==null?r:super.setup(e)}generate(e,t){if(e.getNodeProperties(this).outputNode)return super.generate(e,t);let n=this.method;const r=this.getNodeType(e),i=this.getInputType(e),a=this.aNode,u=this.bNode,c=this.cNode,l=e.renderer.coordinateSystem;if(n===v.NEGATE)return e.format("( - "+a.build(e,i)+" )",r,t);{const d=[];return n===v.CROSS?d.push(a.build(e,r),u.build(e,r)):l===ur&&n===v.STEP?d.push(a.build(e,e.getTypeLength(a.getNodeType(e))===1?"float":i),u.build(e,i)):l===ur&&(n===v.MIN||n===v.MAX)?d.push(a.build(e,i),u.build(e,e.getTypeLength(u.getNodeType(e))===1?"float":i)):n===v.REFRACT?d.push(a.build(e,i),u.build(e,i),c.build(e,"float")):n===v.MIX?d.push(a.build(e,i),u.build(e,i),c.build(e,e.getTypeLength(c.getNodeType(e))===1?"float":i)):(l===Mn&&n===v.ATAN&&u!==null&&(n="atan2"),e.shaderStage!=="fragment"&&(n===v.DFDX||n===v.DFDY)&&(console.warn(`THREE.TSL: '${n}' is not supported in the ${e.shaderStage} stage.`),n="/*"+n+"*/"),d.push(a.build(e,i)),u!==null&&d.push(u.build(e,i)),c!==null&&d.push(c.build(e,i))),e.format(`${e.getMethod(n,r)}( ${d.join(", ")} )`,r,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}v.ALL="all";v.ANY="any";v.RADIANS="radians";v.DEGREES="degrees";v.EXP="exp";v.EXP2="exp2";v.LOG="log";v.LOG2="log2";v.SQRT="sqrt";v.INVERSE_SQRT="inversesqrt";v.FLOOR="floor";v.CEIL="ceil";v.NORMALIZE="normalize";v.FRACT="fract";v.SIN="sin";v.COS="cos";v.TAN="tan";v.ASIN="asin";v.ACOS="acos";v.ATAN="atan";v.ABS="abs";v.SIGN="sign";v.LENGTH="length";v.NEGATE="negate";v.ONE_MINUS="oneMinus";v.DFDX="dFdx";v.DFDY="dFdy";v.ROUND="round";v.RECIPROCAL="reciprocal";v.TRUNC="trunc";v.FWIDTH="fwidth";v.TRANSPOSE="transpose";v.DETERMINANT="determinant";v.INVERSE="inverse";v.BITCAST="bitcast";v.EQUALS="equals";v.MIN="min";v.MAX="max";v.STEP="step";v.REFLECT="reflect";v.DISTANCE="distance";v.DIFFERENCE="difference";v.DOT="dot";v.CROSS="cross";v.POW="pow";v.TRANSFORM_DIRECTION="transformDirection";v.MIX="mix";v.CLAMP="clamp";v.REFRACT="refract";v.SMOOTHSTEP="smoothstep";v.FACEFORWARD="faceforward";const Dh=g(1e-6),Wx=g(1e6),Ei=g(Math.PI),Hx=g(Math.PI*2),Uh=G(v,v.ALL).setParameterLength(1),Ih=G(v,v.ANY).setParameterLength(1),Vh=G(v,v.RADIANS).setParameterLength(1),Gh=G(v,v.DEGREES).setParameterLength(1),Tu=G(v,v.EXP).setParameterLength(1),Rn=G(v,v.EXP2).setParameterLength(1),ji=G(v,v.LOG).setParameterLength(1),Pt=G(v,v.LOG2).setParameterLength(1),zt=G(v,v.SQRT).setParameterLength(1),_u=G(v,v.INVERSE_SQRT).setParameterLength(1),Lt=G(v,v.FLOOR).setParameterLength(1),Ki=G(v,v.CEIL).setParameterLength(1),Qt=G(v,v.NORMALIZE).setParameterLength(1),es=G(v,v.FRACT).setParameterLength(1),rt=G(v,v.SIN).setParameterLength(1),Ht=G(v,v.COS).setParameterLength(1),Oh=G(v,v.TAN).setParameterLength(1),kh=G(v,v.ASIN).setParameterLength(1),bu=G(v,v.ACOS).setParameterLength(1),Yi=G(v,v.ATAN).setParameterLength(1,2),de=G(v,v.ABS).setParameterLength(1),xr=G(v,v.SIGN).setParameterLength(1),Dt=G(v,v.LENGTH).setParameterLength(1),zh=G(v,v.NEGATE).setParameterLength(1),$h=G(v,v.ONE_MINUS).setParameterLength(1),Nu=G(v,v.DFDX).setParameterLength(1),Su=G(v,v.DFDY).setParameterLength(1),Wh=G(v,v.ROUND).setParameterLength(1),Hh=G(v,v.RECIPROCAL).setParameterLength(1),vu=G(v,v.TRUNC).setParameterLength(1),qh=G(v,v.FWIDTH).setParameterLength(1),Xh=G(v,v.TRANSPOSE).setParameterLength(1),jh=G(v,v.DETERMINANT).setParameterLength(1),Kh=G(v,v.INVERSE).setParameterLength(1),qx=G(v,v.BITCAST).setParameterLength(2),Yh=(o,e)=>(console.warn('THREE.TSL: "equals" is deprecated. Use "equal" inside a vector instead, like: "bvec*( equal( ... ) )"'),yu(o,e)),Je=G(v,v.MIN).setParameterLength(2,1/0),Te=G(v,v.MAX).setParameterLength(2,1/0),Qi=G(v,v.STEP).setParameterLength(2),Qh=G(v,v.REFLECT).setParameterLength(2),Zh=G(v,v.DISTANCE).setParameterLength(2),Jh=G(v,v.DIFFERENCE).setParameterLength(2),Ts=G(v,v.DOT).setParameterLength(2),Zi=G(v,v.CROSS).setParameterLength(2),pt=G(v,v.POW).setParameterLength(2),Ru=G(v,v.POW,2).setParameterLength(1),ep=G(v,v.POW,3).setParameterLength(1),tp=G(v,v.POW,4).setParameterLength(1),sp=G(v,v.TRANSFORM_DIRECTION).setParameterLength(2),np=o=>X(xr(o),pt(de(o),1/3)),Au=o=>Ts(o,o),te=G(v,v.MIX).setParameterLength(3),xt=(o,e=0,t=1)=>C(new v(v.CLAMP,C(o),C(e),C(t))),wu=o=>xt(o),Eu=G(v,v.REFRACT).setParameterLength(3),Vt=G(v,v.SMOOTHSTEP).setParameterLength(3),Cu=G(v,v.FACEFORWARD).setParameterLength(3),rp=N(([o])=>{const s=43758.5453,n=Ts(o.xy,M(12.9898,78.233)),r=Rr(n,Ei);return es(rt(r).mul(s))}),ip=(o,e,t)=>te(e,t,o),op=(o,e,t)=>Vt(e,t,o),ap=(o,e)=>Qi(e,o),up=(o,e)=>(console.warn('THREE.TSL: "atan2" is overloaded. Use "atan" instead.'),Yi(o,e)),Xx=Cu,jx=_u;A("all",Uh);A("any",Ih);A("equals",Yh);A("radians",Vh);A("degrees",Gh);A("exp",Tu);A("exp2",Rn);A("log",ji);A("log2",Pt);A("sqrt",zt);A("inverseSqrt",_u);A("floor",Lt);A("ceil",Ki);A("normalize",Qt);A("fract",es);A("sin",rt);A("cos",Ht);A("tan",Oh);A("asin",kh);A("acos",bu);A("atan",Yi);A("abs",de);A("sign",xr);A("length",Dt);A("lengthSq",Au);A("negate",zh);A("oneMinus",$h);A("dFdx",Nu);A("dFdy",Su);A("round",Wh);A("reciprocal",Hh);A("trunc",vu);A("fwidth",qh);A("atan2",up);A("min",Je);A("max",Te);A("step",ap);A("reflect",Qh);A("distance",Zh);A("dot",Ts);A("cross",Zi);A("pow",pt);A("pow2",Ru);A("pow3",ep);A("pow4",tp);A("transformDirection",sp);A("mix",ip);A("clamp",xt);A("refract",Eu);A("smoothstep",op);A("faceForward",Cu);A("difference",Jh);A("saturate",wu);A("cbrt",np);A("transpose",Xh);A("determinant",jh);A("inverse",Kh);A("rand",rp);class Kx extends z{static get type(){return"ConditionalNode"}constructor(e,t,s=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=s}getNodeType(e){const{ifNode:t,elseNode:s}=e.getNodeProperties(this);if(t===void 0)return e.flowBuildStage(this,"setup"),this.getNodeType(e);const n=t.getNodeType(e);if(s!==null){const r=s.getNodeType(e);if(e.getTypeLength(r)>e.getTypeLength(n))return r}return n}setup(e){const t=this.condNode.cache(),s=this.ifNode.cache(),n=this.elseNode?this.elseNode.cache():null,r=e.context.nodeBlock;e.getDataFromNode(s).parentNodeBlock=r,n!==null&&(e.getDataFromNode(n).parentNodeBlock=r);const i=e.getNodeProperties(this);i.condNode=t,i.ifNode=s.context({nodeBlock:s}),i.elseNode=n?n.context({nodeBlock:n}):null}generate(e,t){const s=this.getNodeType(e),n=e.getDataFromNode(this);if(n.nodeProperty!==void 0)return n.nodeProperty;const{condNode:r,ifNode:i,elseNode:a}=e.getNodeProperties(this),u=e.currentFunctionNode,c=t!=="void",l=c?Kt(s).build(e):"";n.nodeProperty=l;const d=r.build(e,"bool");e.addFlowCode(`
${e.tab}if ( ${d} ) {

`).addFlowTab();let p=i.build(e,s);if(p&&(c?p=l+" = "+p+";":(p="return "+p+";",u===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),p="// "+p))),e.removeFlowTab().addFlowCode(e.tab+"	"+p+`

`+e.tab+"}"),a!==null){e.addFlowCode(` else {

`).addFlowTab();let f=a.build(e,s);f&&(c?f=l+" = "+f+";":(f="return "+f+";",u===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),f="// "+f))),e.removeFlowTab().addFlowCode(e.tab+"	"+f+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(l,s,t)}}const Ie=H(Kx).setParameterLength(2,3);A("select",Ie);class cp extends z{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){const t=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(t)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(t)}generate(e,t){const s=e.getContext();e.setContext({...e.context,...this.value});const n=this.node.build(e,t);return e.setContext(s),n}}const Ji=H(cp).setParameterLength(1,2),Mu=(o,e)=>Ji(o,{nodeName:e});function lp(o,e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),Mu(o,e)}A("context",Ji);A("label",lp);A("setName",Mu);class ui extends z{static get type(){return"VarNode"}constructor(e,t=null,s=!1){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0,this.readOnly=s,this.parents=!0,this.intent=!1}setIntent(e){return this.intent=e,this}getIntent(){return this.intent}getMemberType(e,t){return this.node.getMemberType(e,t)}getElementType(e){return this.node.getElementType(e)}getNodeType(e){return this.node.getNodeType(e)}getArrayCount(e){return this.node.getArrayCount(e)}build(...e){return this.intent===!0&&e[0].getNodeProperties(this).assign!==!0?this.node.build(...e):super.build(...e)}generate(e){const{node:t,name:s,readOnly:n}=this,{renderer:r}=e,i=r.backend.isWebGPUBackend===!0;let a=!1,u=!1;n&&(a=e.isDeterministic(t),u=i?n:a);const c=e.getVectorType(this.getNodeType(e)),l=t.build(e,c),d=e.getVarFromNode(this,s,c,void 0,u),p=e.getPropertyName(d);let f=p;if(u)if(i)f=a?`const ${p}`:`let ${p}`;else{const m=t.getArrayCount(e);f=`const ${e.getVar(d.type,p,m)}`}return e.addLineFlowCode(`${f} = ${l}`,this),p}}const eo=H(ui),dp=(o,e=null)=>eo(o,e).toStack(),hp=(o,e=null)=>eo(o,e,!0).toStack(),pp=o=>zi()===null?o:eo(o).setIntent(!0).toStack();A("toVar",dp);A("toConst",hp);A("toVarIntent",pp);const fp=o=>(console.warn('TSL: "temp( node )" is deprecated. Use "Var( node )" or "node.toVar()" instead.'),eo(o));A("temp",fp);class Yx extends z{static get type(){return"SubBuild"}constructor(e,t,s=null){super(s),this.node=e,this.name=t,this.isSubBuildNode=!0}getNodeType(e){if(this.nodeType!==null)return this.nodeType;e.addSubBuild(this.name);const t=this.node.getNodeType(e);return e.removeSubBuild(),t}build(e,...t){e.addSubBuild(this.name);const s=this.node.build(e,...t);return e.removeSubBuild(),s}}const bn=(o,e,t=null)=>C(new Yx(C(o),e,t));class Qx extends z{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0,this.interpolationType=null,this.interpolationSampling=null,this.global=!0}setInterpolation(e,t=null){return this.interpolationType=e,this.interpolationSampling=t,this}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let s=t.varying;if(s===void 0){const n=this.name,r=this.getNodeType(e),i=this.interpolationType,a=this.interpolationSampling;t.varying=s=e.getVaryingFromNode(this,n,r,i,a),t.node=bn(this.node,"VERTEX")}return s.needsInterpolation||(s.needsInterpolation=e.shaderStage==="fragment"),s}setup(e){this.setupVarying(e),e.flowNodeFromShaderStage(Kn.VERTEX,this.node)}analyze(e){this.setupVarying(e),e.flowNodeFromShaderStage(Kn.VERTEX,this.node)}generate(e){const t=e.getSubBuildProperty("property",e.currentStack),s=e.getNodeProperties(this),n=this.setupVarying(e);if(s[t]===void 0){const r=this.getNodeType(e),i=e.getPropertyName(n,Kn.VERTEX);e.flowNodeFromShaderStage(Kn.VERTEX,s.node,r,i),s[t]=i}return e.getPropertyName(n)}}const $t=H(Qx).setParameterLength(1,2),mp=o=>$t(o);A("toVarying",$t);A("toVertexStage",mp);A("varying",(...o)=>(console.warn("THREE.TSL: .varying() has been renamed to .toVarying()."),$t(...o)));A("vertexStage",(...o)=>(console.warn("THREE.TSL: .vertexStage() has been renamed to .toVertexStage()."),$t(...o)));const gp=N(([o])=>{const e=o.mul(.9478672986).add(.0521327014).pow(2.4),t=o.mul(.0773993808),s=o.lessThanEqual(.04045);return te(e,t,s)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),yp=N(([o])=>{const e=o.pow(.41666).mul(1.055).sub(.055),t=o.mul(12.92),s=o.lessThanEqual(.0031308);return te(e,t,s)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Bu="WorkingColorSpace",Zx="OutputColorSpace";class Fu extends Be{static get type(){return"ColorSpaceNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.source=t,this.target=s}resolveColorSpace(e,t){return t===Bu?Ee.workingColorSpace:t===Zx?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,s=this.resolveColorSpace(e,this.source),n=this.resolveColorSpace(e,this.target);let r=t;return Ee.enabled===!1||s===n||!s||!n||(Ee.getTransfer(s)===j&&(r=O(gp(r.rgb),r.a)),Ee.getPrimaries(s)!==Ee.getPrimaries(n)&&(r=O(We(Ee._getMatrix(new Nr,s,n)).mul(r.rgb),r.a)),Ee.getTransfer(n)===j&&(r=O(yp(r.rgb),r.a))),r}}const xp=(o,e)=>C(new Fu(C(o),Bu,e)),to=(o,e)=>C(new Fu(C(o),e,Bu)),Jx=(o,e,t)=>C(new Fu(C(o),e,t));A("workingToColorSpace",xp);A("colorSpaceToWorking",to);let eT=class extends Ys{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,s,n)}};class Tp extends z{static get type(){return"ReferenceBaseNode"}constructor(e,t,s=null,n=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=n,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.updateType=q.OBJECT}setGroup(e){return this.group=e,this}element(e){return C(new eT(this,C(e)))}setNodeType(e){const t=k(null,e).getSelf();this.group!==null&&t.setGroup(this.group),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let n=1;n<t.length;n++)s=s[t[n]];return s}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const tT=(o,e,t)=>C(new Tp(o,e,t));class sT extends Tp{static get type(){return"RendererReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.renderer=s,this.setGroup($)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const _p=(o,e,t=null)=>C(new sT(o,e,t));class nT extends Be{static get type(){return"ToneMappingNode"}constructor(e,t=Np,s=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=s}customCacheKey(){return bi(this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,s=this.toneMapping;if(s===yn)return t;let n=null;const r=e.renderer.library.getToneMappingFunction(s);return r!==null?n=O(r(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",s),n=t),n}}const bp=(o,e,t)=>C(new nT(o,C(e),C(t))),Np=_p("toneMappingExposure","float");A("toneMapping",(o,e,t)=>bp(e,t,o));class rT extends iu{static get type(){return"BufferAttributeNode"}constructor(e,t=null,s=0,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=s,this.bufferOffset=n,this.usage=Py,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const t=this.getNodeType(e),s=this.value,n=e.getTypeLength(t),r=this.bufferStride||n,i=this.bufferOffset,a=s.isInterleavedBuffer===!0?s:new Ly(s,r),u=new Dy(a,n,i);a.setUsage(this.usage),this.attribute=u,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),s=e.getBufferAttributeFromNode(this,t),n=e.getPropertyName(s);let r=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=n,r=n):r=$t(this).build(e,t),r}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const Ar=(o,e=null,t=0,s=0)=>C(new rT(o,e,t,s)),Sp=(o,e=null,t=0,s=0)=>Ar(o,e,t,s).setUsage(dn),Ci=(o,e=null,t=0,s=0)=>Ar(o,e,t,s).setInstanced(!0),Ea=(o,e=null,t=0,s=0)=>Sp(o,e,t,s).setInstanced(!0);A("toAttribute",o=>Ar(o.value));class iT extends z{static get type(){return"ComputeNode"}constructor(e,t){super("void"),this.isComputeNode=!0,this.computeNode=e,this.workgroupSize=t,this.count=null,this.version=1,this.name="",this.updateBeforeType=q.OBJECT,this.onInitFunction=null}setCount(e){return this.count=e,this}getCount(){return this.count}dispose(){this.dispatchEvent({type:"dispose"})}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}setup(e){const t=this.computeNode.build(e);if(t){const s=e.getNodeProperties(this);s.outputComputeNode=t.outputNode,t.outputNode=null}return t}generate(e,t){const{shaderStage:s}=e;if(s==="compute"){const n=this.computeNode.build(e,"void");n!==""&&e.addLineFlowCode(n,this)}else{const r=e.getNodeProperties(this).outputComputeNode;if(r)return r.build(e,t)}}}const Pu=(o,e=[64])=>{(e.length===0||e.length>3)&&console.error("THREE.TSL: compute() workgroupSize must have 1, 2, or 3 elements");for(let t=0;t<e.length;t++){const s=e[t];(typeof s!="number"||s<=0||!Number.isInteger(s))&&console.error(`THREE.TSL: compute() workgroupSize element at index [ ${t} ] must be a positive integer`)}for(;e.length<3;)e.push(1);return C(new iT(C(o),e))},vp=(o,e,t)=>Pu(o,t).setCount(e);A("compute",vp);A("computeKernel",Pu);class oT extends z{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){const t=e.getCache(),s=e.getCacheFromNode(this,this.parent);e.setCache(s);const n=this.node.getNodeType(e);return e.setCache(t),n}build(e,...t){const s=e.getCache(),n=e.getCacheFromNode(this,this.parent);e.setCache(n);const r=this.node.build(e,...t);return e.setCache(s),r}}const rr=(o,e)=>C(new oT(C(o),e));A("cache",rr);class aT extends z{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return t!==""&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const Rp=H(aT).setParameterLength(2);A("bypass",Rp);class Ap extends z{static get type(){return"RemapNode"}constructor(e,t,s,n=g(0),r=g(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=s,this.outLowNode=n,this.outHighNode=r,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:s,outLowNode:n,outHighNode:r,doClamp:i}=this;let a=e.sub(t).div(s.sub(t));return i===!0&&(a=a.clamp()),a.mul(r.sub(n)).add(n)}}const wp=H(Ap,null,null,{doClamp:!1}).setParameterLength(3,5),Ep=H(Ap).setParameterLength(3,5);A("remap",wp);A("remapClamp",Ep);class ci extends z{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const s=this.getNodeType(e),n=this.snippet;if(s==="void")e.addLineFlowCode(n,this);else return e.format(n,s,t)}}const Zt=H(ci).setParameterLength(1,2),Cp=o=>(o?Ie(o,Zt("discard")):Zt("discard")).toStack(),uT=()=>Zt("return").toStack();A("discard",Cp);class cT extends Be{static get type(){return"RenderOutputNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=s,this.isRenderOutputNode=!0}setup({context:e}){let t=this.colorNode||e.color;const s=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||yn,n=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||vn;return s!==yn&&(t=t.toneMapping(s)),n!==vn&&n!==Ee.workingColorSpace&&(t=t.workingToColorSpace(n)),t}}const Mp=(o,e=null,t=null)=>C(new cT(C(o),e,t));A("renderOutput",Mp);class lT extends Be{static get type(){return"DebugNode"}constructor(e,t=null){super(),this.node=e,this.callback=t}getNodeType(e){return this.node.getNodeType(e)}setup(e){return this.node.build(e)}analyze(e){return this.node.build(e)}generate(e){const t=this.callback,s=this.node.build(e),n="--- TSL debug - "+e.shaderStage+" shader ---",r="-".repeat(n.length);let i="";return i+="// #"+n+`#
`,i+=e.flow.code.replace(/^\t/mg,"")+`
`,i+="/* ... */ "+s+` /* ... */
`,i+="// #"+r+`#
`,t!==null?t(e,i):console.log(i),s}}const Bp=(o,e=null)=>C(new lT(C(o),e)).toStack();A("debug",Bp);function dT(o){console.warn("THREE.TSL: AddNodeElement has been removed in favor of tree-shaking. Trying add",o)}class Fp extends z{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(t===null){const s=this.getAttributeName(e);if(e.hasGeometryAttribute(s)){const n=e.geometry.getAttribute(s);t=e.getTypeFromAttribute(n)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),s=this.getNodeType(e);if(e.hasGeometryAttribute(t)===!0){const r=e.geometry.getAttribute(t),i=e.getTypeFromAttribute(r),a=e.getAttribute(t,i);return e.shaderStage==="vertex"?e.format(a.name,i,s):$t(this).build(e,s)}else return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(s)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const Jt=(o,e=null)=>C(new Fp(o,e)),ce=(o=0)=>Jt("uv"+(o>0?o:""),"vec2");class hT extends z{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const s=this.textureNode.build(e,"property"),n=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${s}, ${n} )`,this.getNodeType(e),t)}}const fs=H(hT).setParameterLength(1,2);class pT extends vr{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=q.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,s=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(s&&s.width!==void 0){const{width:n,height:r}=s;this.value=Math.log2(Math.max(n,r))}}}const Lu=H(pT).setParameterLength(1),Du=new br;class Gt extends vr{static get type(){return"TextureNode"}constructor(e=Du,t=null,s=null,n=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=s,this.biasNode=n,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=q.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(t===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===Ce?"uvec4":this.value.type===qe?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return ce(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=k(this.value.matrix)),this._matrixUniform.mul(b(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?q.OBJECT:q.NONE,this}setupUV(e,t){const s=this.value;return e.isFlipY()&&(s.image instanceof ImageBitmap&&s.flipY===!0||s.isRenderTargetTexture===!0||s.isFramebufferTexture===!0||s.isDepthTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(x(fs(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;const s=this.value;if(!s||s.isTexture!==!0)throw new Error("THREE.TSL: `texture( value )` function expects a valid instance of THREE.Texture().");let n=this.uvNode;(n===null||e.context.forceUVContext===!0)&&e.context.getUV&&(n=e.context.getUV(this,e)),n||(n=this.getDefaultUV()),this.updateMatrix===!0&&(n=this.getTransformedUV(n)),n=this.setupUV(e,n);let r=this.levelNode;r===null&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),t.uvNode=n,t.levelNode=r,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,this.sampler===!0?"vec2":"ivec2")}generateSnippet(e,t,s,n,r,i,a,u){const c=this.value;let l;return n?l=e.generateTextureLevel(c,t,s,n,i):r?l=e.generateTextureBias(c,t,s,r,i):u?l=e.generateTextureGrad(c,t,s,u,i):a?l=e.generateTextureCompare(c,t,s,a,i):this.sampler===!1?l=e.generateTextureLoad(c,t,s,i):l=e.generateTexture(c,t,s,i),l}generate(e,t){const s=this.value,n=e.getNodeProperties(this),r=super.generate(e,"property");if(/^sampler/.test(t))return r+"_sampler";if(e.isReference(t))return r;{const i=e.getDataFromNode(this);let a=i.propertyName;if(a===void 0){const{uvNode:l,levelNode:d,biasNode:p,compareNode:f,depthNode:m,gradNode:y}=n,T=this.generateUV(e,l),S=d?d.build(e,"float"):null,R=p?p.build(e,"float"):null,w=m?m.build(e,"int"):null,L=f?f.build(e,"float"):null,F=y?[y[0].build(e,"vec2"),y[1].build(e,"vec2")]:null,P=e.getVarFromNode(this);a=e.getPropertyName(P);const B=this.generateSnippet(e,r,T,S,R,w,L,F);e.addLineFlowCode(`${a} = ${B}`,this),i.snippet=B,i.propertyName=a}let u=a;const c=this.getNodeType(e);return e.needsToWorkingColorSpace(s)&&(u=to(Zt(u,c),s.colorSpace).setup(e).build(e,c)),e.format(u,c,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){return console.warn("THREE.TextureNode: .uv() has been renamed. Use .sample() instead."),this.sample(e)}sample(e){const t=this.clone();return t.uvNode=C(e),t.referenceNode=this.getSelf(),C(t)}load(e){return this.sample(e).setSampler(!1)}blur(e){const t=this.clone();t.biasNode=C(e).mul(Lu(t)),t.referenceNode=this.getSelf();const s=t.value;return t.generateMipmaps===!1&&(s&&s.generateMipmaps===!1||s.minFilter===Rt||s.magFilter===Rt)&&(console.warn("THREE.TSL: texture().blur() requires mipmaps and sampling. Use .generateMipmaps=true and .minFilter/.magFilter=THREE.LinearFilter in the Texture."),t.biasNode=null),C(t)}level(e){const t=this.clone();return t.levelNode=C(e),t.referenceNode=this.getSelf(),C(t)}size(e){return fs(this,e)}bias(e){const t=this.clone();return t.biasNode=C(e),t.referenceNode=this.getSelf(),C(t)}compare(e){const t=this.clone();return t.compareNode=C(e),t.referenceNode=this.getSelf(),C(t)}grad(e,t){const s=this.clone();return s.gradNode=[C(e),C(t)],s.referenceNode=this.getSelf(),C(s)}depth(e){const t=this.clone();return t.depthNode=C(e),t.referenceNode=this.getSelf(),C(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;t!==null&&(t.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e}}const fT=H(Gt).setParameterLength(1,4).setName("texture"),K=(o=Du,e=null,t=null,s=null)=>{let n;return o&&o.isTextureNode===!0?(n=C(o.clone()),n.referenceNode=o.getSelf(),e!==null&&(n.uvNode=C(e)),t!==null&&(n.levelNode=C(t)),s!==null&&(n.biasNode=C(s))):n=fT(o,e,t,s),n},mT=(o=Du)=>K(o),_e=(...o)=>K(...o).setSampler(!1),gT=o=>(o.isNode===!0?o:K(o)).convert("sampler"),yT=o=>(o.isNode===!0?o:K(o)).convert("samplerComparison");class Uu extends vr{static get type(){return"BufferNode"}constructor(e,t,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=s}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const wr=(o,e,t)=>C(new Uu(o,e,t));class xT extends Ys{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),s=this.getNodeType(),n=this.node.getPaddedType();return e.format(t,n,s)}}class TT extends Uu{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null),this.array=e,this.elementType=t===null?cs(e[0]):t,this.paddedType=this.getPaddedType(),this.updateType=q.RENDER,this.isArrayBufferNode=!0}getNodeType(){return this.paddedType}getElementType(){return this.elementType}getPaddedType(){const e=this.elementType;let t="vec4";return e==="mat2"?t="mat2":/mat/.test(e)===!0?t="mat4":e.charAt(0)==="i"?t="ivec4":e.charAt(0)==="u"&&(t="uvec4"),t}update(){const{array:e,value:t}=this,s=this.elementType;if(s==="float"||s==="int"||s==="uint")for(let n=0;n<e.length;n++){const r=n*4;t[r]=e[n]}else if(s==="color")for(let n=0;n<e.length;n++){const r=n*4,i=e[n];t[r]=i.r,t[r+1]=i.g,t[r+2]=i.b||0}else if(s==="mat2")for(let n=0;n<e.length;n++){const r=n*4,i=e[n];t[r]=i.elements[0],t[r+1]=i.elements[1],t[r+2]=i.elements[2],t[r+3]=i.elements[3]}else if(s==="mat3")for(let n=0;n<e.length;n++){const r=n*16,i=e[n];t[r]=i.elements[0],t[r+1]=i.elements[1],t[r+2]=i.elements[2],t[r+4]=i.elements[3],t[r+5]=i.elements[4],t[r+6]=i.elements[5],t[r+8]=i.elements[6],t[r+9]=i.elements[7],t[r+10]=i.elements[8],t[r+15]=1}else if(s==="mat4")for(let n=0;n<e.length;n++){const r=n*16,i=e[n];for(let a=0;a<i.elements.length;a++)t[r+a]=i.elements[a]}else for(let n=0;n<e.length;n++){const r=n*4,i=e[n];t[r]=i.x,t[r+1]=i.y,t[r+2]=i.z||0,t[r+3]=i.w||0}}setup(e){const t=this.array.length,s=this.elementType;let n=Float32Array;const r=this.paddedType,i=e.getTypeLength(r);return s.charAt(0)==="i"&&(n=Int32Array),s.charAt(0)==="u"&&(n=Uint32Array),this.value=new n(t*i),this.bufferCount=t,this.bufferType=r,super.setup(e)}element(e){return C(new xT(this,C(e)))}}const ht=(o,e)=>C(new TT(o,e));class _T extends z{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}const Er=H(_T).setParameterLength(1),so=k(0,"uint").setName("u_cameraIndex").setGroup(Xi("cameraIndex")).toVarying("v_cameraIndex"),os=k("float").setName("cameraNear").setGroup($).onRenderUpdate(({camera:o})=>o.near),as=k("float").setName("cameraFar").setGroup($).onRenderUpdate(({camera:o})=>o.far),Qs=N(({camera:o})=>{let e;if(o.isArrayCamera&&o.cameras.length>0){const t=[];for(const n of o.cameras)t.push(n.projectionMatrix);e=ht(t).setGroup($).setName("cameraProjectionMatrices").element(o.isMultiViewCamera?Er("gl_ViewID_OVR"):so).toVar("cameraProjectionMatrix")}else e=k("mat4").setName("cameraProjectionMatrix").setGroup($).onRenderUpdate(({camera:t})=>t.projectionMatrix);return e}).once()(),bT=N(({camera:o})=>{let e;if(o.isArrayCamera&&o.cameras.length>0){const t=[];for(const n of o.cameras)t.push(n.projectionMatrixInverse);e=ht(t).setGroup($).setName("cameraProjectionMatricesInverse").element(o.isMultiViewCamera?Er("gl_ViewID_OVR"):so).toVar("cameraProjectionMatrixInverse")}else e=k("mat4").setName("cameraProjectionMatrixInverse").setGroup($).onRenderUpdate(({camera:t})=>t.projectionMatrixInverse);return e}).once()(),_t=N(({camera:o})=>{let e;if(o.isArrayCamera&&o.cameras.length>0){const t=[];for(const n of o.cameras)t.push(n.matrixWorldInverse);e=ht(t).setGroup($).setName("cameraViewMatrices").element(o.isMultiViewCamera?Er("gl_ViewID_OVR"):so).toVar("cameraViewMatrix")}else e=k("mat4").setName("cameraViewMatrix").setGroup($).onRenderUpdate(({camera:t})=>t.matrixWorldInverse);return e}).once()(),NT=k("mat4").setName("cameraWorldMatrix").setGroup($).onRenderUpdate(({camera:o})=>o.matrixWorld),ST=k("mat3").setName("cameraNormalMatrix").setGroup($).onRenderUpdate(({camera:o})=>o.normalMatrix),Pp=k(new Y).setName("cameraPosition").setGroup($).onRenderUpdate(({camera:o},e)=>e.value.setFromMatrixPosition(o.matrixWorld)),zc=new By;class Z extends z{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=q.OBJECT,this.uniformNode=new vr(null)}getNodeType(){const e=this.scope;if(e===Z.WORLD_MATRIX)return"mat4";if(e===Z.POSITION||e===Z.VIEW_POSITION||e===Z.DIRECTION||e===Z.SCALE)return"vec3";if(e===Z.RADIUS)return"float"}update(e){const t=this.object3d,s=this.uniformNode,n=this.scope;if(n===Z.WORLD_MATRIX)s.value=t.matrixWorld;else if(n===Z.POSITION)s.value=s.value||new Y,s.value.setFromMatrixPosition(t.matrixWorld);else if(n===Z.SCALE)s.value=s.value||new Y,s.value.setFromMatrixScale(t.matrixWorld);else if(n===Z.DIRECTION)s.value=s.value||new Y,t.getWorldDirection(s.value);else if(n===Z.VIEW_POSITION){const r=e.camera;s.value=s.value||new Y,s.value.setFromMatrixPosition(t.matrixWorld),s.value.applyMatrix4(r.matrixWorldInverse)}else if(n===Z.RADIUS){const r=e.object.geometry;r.boundingSphere===null&&r.computeBoundingSphere(),zc.copy(r.boundingSphere).applyMatrix4(t.matrixWorld),s.value=zc.radius}}generate(e){const t=this.scope;return t===Z.WORLD_MATRIX?this.uniformNode.nodeType="mat4":t===Z.POSITION||t===Z.VIEW_POSITION||t===Z.DIRECTION||t===Z.SCALE?this.uniformNode.nodeType="vec3":t===Z.RADIUS&&(this.uniformNode.nodeType="float"),this.uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Z.WORLD_MATRIX="worldMatrix";Z.POSITION="position";Z.SCALE="scale";Z.VIEW_POSITION="viewPosition";Z.DIRECTION="direction";Z.RADIUS="radius";const vT=H(Z,Z.DIRECTION).setParameterLength(1),RT=H(Z,Z.WORLD_MATRIX).setParameterLength(1),Lp=H(Z,Z.POSITION).setParameterLength(1),AT=H(Z,Z.SCALE).setParameterLength(1),wT=H(Z,Z.VIEW_POSITION).setParameterLength(1),ET=H(Z,Z.RADIUS).setParameterLength(1);class Tt extends Z{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const CT=D(Tt,Tt.DIRECTION),ft=D(Tt,Tt.WORLD_MATRIX),MT=D(Tt,Tt.POSITION),BT=D(Tt,Tt.SCALE),FT=D(Tt,Tt.VIEW_POSITION),PT=D(Tt,Tt.RADIUS),Dp=k(new Nr).onObjectUpdate(({object:o},e)=>e.value.getNormalMatrix(o.matrixWorld)),LT=k(new Ue).onObjectUpdate(({object:o},e)=>e.value.copy(o.matrixWorld).invert()),Zs=N(o=>o.renderer.overrideNodes.modelViewMatrix||Up).once()().toVar("modelViewMatrix"),Up=_t.mul(ft),Ca=N(o=>(o.context.isHighPrecisionModelViewMatrix=!0,k("mat4").onObjectUpdate(({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))).once()().toVar("highpModelViewMatrix"),Ma=N(o=>{const e=o.context.isHighPrecisionModelViewMatrix;return k("mat3").onObjectUpdate(({object:t,camera:s})=>(e!==!0&&t.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix)))}).once()().toVar("highpModelNormalViewMatrix"),Cr=Jt("position","vec3"),be=Cr.toVarying("positionLocal"),Mi=Cr.toVarying("positionPrevious"),Ut=N(o=>ft.mul(be).xyz.toVarying(o.getSubBuildProperty("v_positionWorld")),"vec3").once(["POSITION"])(),Iu=N(()=>be.transformDirection(ft).toVarying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),"vec3").once(["POSITION"])(),Ne=N(o=>o.context.setupPositionView().toVarying("v_positionView"),"vec3").once(["POSITION"])(),me=Ne.negate().toVarying("v_positionViewDirection").normalize().toVar("positionViewDirection");class DT extends z{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){if(e.shaderStage!=="fragment")return"true";const{renderer:t,material:s}=e;return t.coordinateSystem===ur&&s.side===Ze?"false":e.getFrontFacing()}}const Ip=D(DT),Vu=g(Ip).mul(2).sub(1),Fn=N(([o],{material:e})=>{const t=e.side;return t===Ze?o=o.mul(-1):t===Os&&(o=o.mul(Vu)),o}),no=Jt("normal","vec3"),et=N(o=>o.geometry.hasAttribute("normal")===!1?(console.warn('THREE.TSL: Vertex attribute "normal" not found on geometry.'),b(0,1,0)):no,"vec3").once()().toVar("normalLocal"),Vp=Ne.dFdx().cross(Ne.dFdy()).normalize().toVar("normalFlat"),An=N(o=>{let e;return o.material.flatShading===!0?e=Vp:e=Gu(et).toVarying("v_normalViewGeometry").normalize(),e},"vec3").once()().toVar("normalViewGeometry"),Gp=N(o=>{let e=An.transformDirection(_t);return o.material.flatShading!==!0&&(e=e.toVarying("v_normalWorldGeometry")),e.normalize().toVar("normalWorldGeometry")},"vec3").once()(),ae=N(({subBuildFn:o,material:e,context:t})=>{let s;return o==="NORMAL"||o==="VERTEX"?(s=An,e.flatShading!==!0&&(s=Fn(s))):s=t.setupNormal().context({getUV:null}),s},"vec3").once(["NORMAL","VERTEX"])().toVar("normalView"),_s=ae.transformDirection(_t).toVar("normalWorld"),Vs=N(({subBuildFn:o,context:e})=>{let t;return o==="NORMAL"||o==="VERTEX"?t=ae:t=e.setupClearcoatNormal().context({getUV:null}),t},"vec3").once(["NORMAL","VERTEX"])().toVar("clearcoatNormalView"),Op=N(([o,e=ft])=>{const t=We(e),s=o.div(b(t[0].dot(t[0]),t[1].dot(t[1]),t[2].dot(t[2])));return t.mul(s).xyz}),Gu=N(([o],e)=>{const t=e.renderer.overrideNodes.modelNormalViewMatrix;if(t!==null)return t.transformDirection(o);const s=Dp.mul(o);return _t.transformDirection(s)}),UT=N(()=>(console.warn('THREE.TSL: "transformedNormalView" is deprecated. Use "normalView" instead.'),ae)).once(["NORMAL","VERTEX"])(),IT=N(()=>(console.warn('THREE.TSL: "transformedNormalWorld" is deprecated. Use "normalWorld" instead.'),_s)).once(["NORMAL","VERTEX"])(),VT=N(()=>(console.warn('THREE.TSL: "transformedClearcoatNormalView" is deprecated. Use "clearcoatNormalView" instead.'),Vs)).once(["NORMAL","VERTEX"])(),$c=new ed,So=new Ue,kp=k(0).onReference(({material:o})=>o).onObjectUpdate(({material:o})=>o.refractionRatio),li=k(1).onReference(({material:o})=>o).onObjectUpdate(function({material:o,scene:e}){return o.envMap?o.envMapIntensity:e.environmentIntensity}),Ou=k(new Ue).onReference(function(o){return o.material}).onObjectUpdate(function({material:o,scene:e}){const t=e.environment!==null&&o.envMap===null?e.environmentRotation:o.envMapRotation;return t?($c.copy(t),So.makeRotationFromEuler($c)):So.identity(),So}),zp=me.negate().reflect(ae),$p=me.negate().refract(ae,kp),Wp=zp.transformDirection(_t).toVar("reflectVector"),Hp=$p.transformDirection(_t).toVar("reflectVector"),qp=new Xa;class GT extends Gt{static get type(){return"CubeTextureNode"}constructor(e,t=null,s=null,n=null){super(e,t,s,n),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===Ti?Wp:e.mapping===_i?Hp:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),b(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const s=this.value;return(e.renderer.coordinateSystem===Mn||!s.isRenderTargetTexture)&&(t=b(t.x.negate(),t.yz)),Ou.mul(t)}generateUV(e,t){return t.build(e,"vec3")}}const ku=H(GT).setParameterLength(1,4).setName("cubeTexture"),wn=(o=qp,e=null,t=null,s=null)=>{let n;return o&&o.isCubeTextureNode===!0?(n=C(o.clone()),n.referenceNode=o.getSelf(),e!==null&&(n.uvNode=C(e)),t!==null&&(n.levelNode=C(t)),s!==null&&(n.biasNode=C(s))):n=ku(o,e,t,s),n},OT=(o=qp)=>ku(o);class kT extends Ys{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,s,n)}}class ro extends z{static get type(){return"ReferenceNode"}constructor(e,t,s=null,n=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=n,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.name=null,this.updateType=q.OBJECT}element(e){return C(new kT(this,C(e)))}setGroup(e){return this.group=e,this}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setNodeType(e){let t=null;this.count!==null?t=wr(null,e,this.count):Array.isArray(this.getValueFromReference())?t=ht(null,e):e==="texture"?t=K(null):e==="cubeTexture"?t=wn(null):t=k(null,e),this.group!==null&&t.setGroup(this.group),this.name!==null&&t.setName(this.name),this.node=t.getSelf()}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let n=1;n<t.length;n++)s=s[t[n]];return s}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const le=(o,e,t)=>C(new ro(o,e,t)),Ba=(o,e,t,s)=>C(new ro(o,e,s,t));class zT extends ro{static get type(){return"MaterialReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.material=s,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const jt=(o,e,t=null)=>C(new zT(o,e,t)),Xp=ce(),$T=Ne.dFdx(),WT=Ne.dFdy(),jp=Xp.dFdx(),Kp=Xp.dFdy(),Yp=ae,Qp=WT.cross(Yp),Zp=Yp.cross($T),Fa=Qp.mul(jp.x).add(Zp.mul(Kp.x)),Pa=Qp.mul(jp.y).add(Zp.mul(Kp.y)),Wc=Fa.dot(Fa).max(Pa.dot(Pa)),Jp=Wc.equal(0).select(0,Wc.inverseSqrt()),HT=Fa.mul(Jp).toVar("tangentViewFrame"),qT=Pa.mul(Jp).toVar("bitangentViewFrame"),io=N(o=>(o.geometry.hasAttribute("tangent")===!1&&o.geometry.computeTangents(),Jt("tangent","vec4")))(),Mr=io.xyz.toVar("tangentLocal"),oo=N(({subBuildFn:o,geometry:e,material:t})=>{let s;return o==="VERTEX"||e.hasAttribute("tangent")?s=Zs.mul(O(Mr,0)).xyz.toVarying("v_tangentView").normalize():s=HT,t.flatShading!==!0&&(s=Fn(s)),s},"vec3").once(["NORMAL","VERTEX"])().toVar("tangentView"),ef=oo.transformDirection(_t).toVarying("v_tangentWorld").normalize().toVar("tangentWorld"),ao=N(([o,e],{subBuildFn:t,material:s})=>{let n=o.mul(io.w).xyz;return t==="NORMAL"&&s.flatShading!==!0&&(n=n.toVarying(e)),n}).once(["NORMAL"]),XT=ao(no.cross(io),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),jT=ao(et.cross(Mr),"v_bitangentLocal").normalize().toVar("bitangentLocal"),tf=N(({subBuildFn:o,geometry:e,material:t})=>{let s;return o==="VERTEX"||e.hasAttribute("tangent")?s=ao(ae.cross(oo),"v_bitangentView").normalize():s=qT,t.flatShading!==!0&&(s=Fn(s)),s},"vec3").once(["NORMAL","VERTEX"])().toVar("bitangentView"),KT=ao(_s.cross(ef),"v_bitangentWorld").normalize().toVar("bitangentWorld"),Gs=We(oo,tf,ae).toVar("TBNViewMatrix"),sf=me.mul(Gs),YT=(o,e)=>o.sub(sf.mul(e)),nf=N(()=>{let o=Hs.cross(me);return o=o.cross(Hs).normalize(),o=te(o,ae,is.mul(Ft.oneMinus()).oneMinus().pow2().pow2()).normalize(),o}).once()();class QT extends Be{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=Lc}setup({material:e}){const{normalMapType:t,scaleNode:s}=this;let n=this.node.mul(2).sub(1);if(s!==null){let i=s;e.flatShading===!0&&(i=Fn(i)),n=b(n.xy.mul(i),n.z)}let r=null;return t===Fy?r=Gu(n):t===Lc?r=Gs.mul(n).normalize():(console.error(`THREE.NodeMaterial: Unsupported normal map type: ${t}`),r=ae),r}}const La=H(QT).setParameterLength(1,2),ZT=N(({textureNode:o,bumpScale:e})=>{const t=n=>o.cache().context({getUV:r=>n(r.uvNode||ce()),forceUVContext:!0}),s=g(t(n=>n));return M(g(t(n=>n.add(n.dFdx()))).sub(s),g(t(n=>n.add(n.dFdy()))).sub(s)).mul(e)}),JT=N(o=>{const{surf_pos:e,surf_norm:t,dHdxy:s}=o,n=e.dFdx().normalize(),r=e.dFdy().normalize(),i=t,a=r.cross(i),u=i.cross(n),c=n.dot(a).mul(Vu),l=c.sign().mul(s.x.mul(a).add(s.y.mul(u)));return c.abs().mul(t).sub(l).normalize()});class e_ extends Be{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=this.scaleNode!==null?this.scaleNode:1,t=ZT({textureNode:this.textureNode,bumpScale:e});return JT({surf_pos:Ne,surf_norm:ae,dHdxy:t})}}const zu=H(e_).setParameterLength(1,2),Hc=new Map;class E extends z{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let s=Hc.get(e);return s===void 0&&(s=jt(e,t),Hc.set(e,s)),s}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const t=e.context.material,s=this.scope;let n=null;if(s===E.COLOR){const r=t.color!==void 0?this.getColor(s):b();t.map&&t.map.isTexture===!0?n=r.mul(this.getTexture("map")):n=r}else if(s===E.OPACITY){const r=this.getFloat(s);t.alphaMap&&t.alphaMap.isTexture===!0?n=r.mul(this.getTexture("alpha")):n=r}else if(s===E.SPECULAR_STRENGTH)t.specularMap&&t.specularMap.isTexture===!0?n=this.getTexture("specular").r:n=g(1);else if(s===E.SPECULAR_INTENSITY){const r=this.getFloat(s);t.specularIntensityMap&&t.specularIntensityMap.isTexture===!0?n=r.mul(this.getTexture(s).a):n=r}else if(s===E.SPECULAR_COLOR){const r=this.getColor(s);t.specularColorMap&&t.specularColorMap.isTexture===!0?n=r.mul(this.getTexture(s).rgb):n=r}else if(s===E.ROUGHNESS){const r=this.getFloat(s);t.roughnessMap&&t.roughnessMap.isTexture===!0?n=r.mul(this.getTexture(s).g):n=r}else if(s===E.METALNESS){const r=this.getFloat(s);t.metalnessMap&&t.metalnessMap.isTexture===!0?n=r.mul(this.getTexture(s).b):n=r}else if(s===E.EMISSIVE){const r=this.getFloat("emissiveIntensity"),i=this.getColor(s).mul(r);t.emissiveMap&&t.emissiveMap.isTexture===!0?n=i.mul(this.getTexture(s)):n=i}else if(s===E.NORMAL)t.normalMap?(n=La(this.getTexture("normal"),this.getCache("normalScale","vec2")),n.normalMapType=t.normalMapType):t.bumpMap?n=zu(this.getTexture("bump").r,this.getFloat("bumpScale")):n=ae;else if(s===E.CLEARCOAT){const r=this.getFloat(s);t.clearcoatMap&&t.clearcoatMap.isTexture===!0?n=r.mul(this.getTexture(s).r):n=r}else if(s===E.CLEARCOAT_ROUGHNESS){const r=this.getFloat(s);t.clearcoatRoughnessMap&&t.clearcoatRoughnessMap.isTexture===!0?n=r.mul(this.getTexture(s).r):n=r}else if(s===E.CLEARCOAT_NORMAL)t.clearcoatNormalMap?n=La(this.getTexture(s),this.getCache(s+"Scale","vec2")):n=ae;else if(s===E.SHEEN){const r=this.getColor("sheenColor").mul(this.getFloat("sheen"));t.sheenColorMap&&t.sheenColorMap.isTexture===!0?n=r.mul(this.getTexture("sheenColor").rgb):n=r}else if(s===E.SHEEN_ROUGHNESS){const r=this.getFloat(s);t.sheenRoughnessMap&&t.sheenRoughnessMap.isTexture===!0?n=r.mul(this.getTexture(s).a):n=r,n=n.clamp(.07,1)}else if(s===E.ANISOTROPY)if(t.anisotropyMap&&t.anisotropyMap.isTexture===!0){const r=this.getTexture(s);n=Wi(cn.x,cn.y,cn.y.negate(),cn.x).mul(r.rg.mul(2).sub(M(1)).normalize().mul(r.b))}else n=cn;else if(s===E.IRIDESCENCE_THICKNESS){const r=le("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const i=le("0","float",t.iridescenceThicknessRange);n=r.sub(i).mul(this.getTexture(s).g).add(i)}else n=r}else if(s===E.TRANSMISSION){const r=this.getFloat(s);t.transmissionMap?n=r.mul(this.getTexture(s).r):n=r}else if(s===E.THICKNESS){const r=this.getFloat(s);t.thicknessMap?n=r.mul(this.getTexture(s).g):n=r}else if(s===E.IOR)n=this.getFloat(s);else if(s===E.LIGHT_MAP)n=this.getTexture(s).rgb.mul(this.getFloat("lightMapIntensity"));else if(s===E.AO)n=this.getTexture(s).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else if(s===E.LINE_DASH_OFFSET)n=t.dashOffset?this.getFloat(s):g(0);else{const r=this.getNodeType(e);n=this.getCache(s,r)}return n}}E.ALPHA_TEST="alphaTest";E.COLOR="color";E.OPACITY="opacity";E.SHININESS="shininess";E.SPECULAR="specular";E.SPECULAR_STRENGTH="specularStrength";E.SPECULAR_INTENSITY="specularIntensity";E.SPECULAR_COLOR="specularColor";E.REFLECTIVITY="reflectivity";E.ROUGHNESS="roughness";E.METALNESS="metalness";E.NORMAL="normal";E.CLEARCOAT="clearcoat";E.CLEARCOAT_ROUGHNESS="clearcoatRoughness";E.CLEARCOAT_NORMAL="clearcoatNormal";E.EMISSIVE="emissive";E.ROTATION="rotation";E.SHEEN="sheen";E.SHEEN_ROUGHNESS="sheenRoughness";E.ANISOTROPY="anisotropy";E.IRIDESCENCE="iridescence";E.IRIDESCENCE_IOR="iridescenceIOR";E.IRIDESCENCE_THICKNESS="iridescenceThickness";E.IOR="ior";E.TRANSMISSION="transmission";E.THICKNESS="thickness";E.ATTENUATION_DISTANCE="attenuationDistance";E.ATTENUATION_COLOR="attenuationColor";E.LINE_SCALE="scale";E.LINE_DASH_SIZE="dashSize";E.LINE_GAP_SIZE="gapSize";E.LINE_WIDTH="linewidth";E.LINE_DASH_OFFSET="dashOffset";E.POINT_SIZE="size";E.DISPERSION="dispersion";E.LIGHT_MAP="light";E.AO="ao";const rf=D(E,E.ALPHA_TEST),of=D(E,E.COLOR),af=D(E,E.SHININESS),uf=D(E,E.EMISSIVE),$u=D(E,E.OPACITY),cf=D(E,E.SPECULAR),Da=D(E,E.SPECULAR_INTENSITY),lf=D(E,E.SPECULAR_COLOR),ir=D(E,E.SPECULAR_STRENGTH),di=D(E,E.REFLECTIVITY),df=D(E,E.ROUGHNESS),hf=D(E,E.METALNESS),pf=D(E,E.NORMAL),ff=D(E,E.CLEARCOAT),mf=D(E,E.CLEARCOAT_ROUGHNESS),gf=D(E,E.CLEARCOAT_NORMAL),yf=D(E,E.ROTATION),xf=D(E,E.SHEEN),Tf=D(E,E.SHEEN_ROUGHNESS),_f=D(E,E.ANISOTROPY),bf=D(E,E.IRIDESCENCE),Nf=D(E,E.IRIDESCENCE_IOR),Sf=D(E,E.IRIDESCENCE_THICKNESS),vf=D(E,E.TRANSMISSION),Rf=D(E,E.THICKNESS),Af=D(E,E.IOR),wf=D(E,E.ATTENUATION_DISTANCE),Ef=D(E,E.ATTENUATION_COLOR),Cf=D(E,E.LINE_SCALE),Mf=D(E,E.LINE_DASH_SIZE),Bf=D(E,E.LINE_GAP_SIZE),t_=D(E,E.LINE_WIDTH),Ff=D(E,E.LINE_DASH_OFFSET),Pf=D(E,E.POINT_SIZE),Lf=D(E,E.DISPERSION),Wu=D(E,E.LIGHT_MAP),Df=D(E,E.AO),cn=k(new $e).onReference(function(o){return o.material}).onRenderUpdate(function({material:o}){this.value.set(o.anisotropy*Math.cos(o.anisotropyRotation),o.anisotropy*Math.sin(o.anisotropyRotation))}),Hu=N(o=>o.context.setupModelViewProjection(),"vec4").once()().toVarying("v_modelViewProjection");class ge extends z{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isIndexNode=!0}generate(e){const t=this.getNodeType(e),s=this.scope;let n;if(s===ge.VERTEX)n=e.getVertexIndex();else if(s===ge.INSTANCE)n=e.getInstanceIndex();else if(s===ge.DRAW)n=e.getDrawIndex();else if(s===ge.INVOCATION_LOCAL)n=e.getInvocationLocalIndex();else if(s===ge.INVOCATION_SUBGROUP)n=e.getInvocationSubgroupIndex();else if(s===ge.SUBGROUP)n=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+s);let r;return e.shaderStage==="vertex"||e.shaderStage==="compute"?r=n:r=$t(this).build(e,t),r}}ge.VERTEX="vertex";ge.INSTANCE="instance";ge.SUBGROUP="subgroup";ge.INVOCATION_LOCAL="invocationLocal";ge.INVOCATION_SUBGROUP="invocationSubgroup";ge.DRAW="draw";const Uf=D(ge,ge.VERTEX),ms=D(ge,ge.INSTANCE),s_=D(ge,ge.SUBGROUP),n_=D(ge,ge.INVOCATION_SUBGROUP),r_=D(ge,ge.INVOCATION_LOCAL),If=D(ge,ge.DRAW);class Vf extends z{static get type(){return"InstanceNode"}constructor(e,t,s=null){super("void"),this.count=e,this.instanceMatrix=t,this.instanceColor=s,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=q.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{count:t,instanceMatrix:s,instanceColor:n}=this;let{instanceMatrixNode:r,instanceColorNode:i}=this;if(r===null){if(t<=1e3)r=wr(s.array,"mat4",Math.max(t,1)).element(ms);else{const u=new Uy(s.array,16,1);this.buffer=u;const c=s.usage===dn?Ea:Ci,l=[c(u,"vec4",16,0),c(u,"vec4",16,4),c(u,"vec4",16,8),c(u,"vec4",16,12)];r=Ws(...l)}this.instanceMatrixNode=r}if(n&&i===null){const u=new Tn(n.array,3),c=n.usage===dn?Ea:Ci;this.bufferColor=u,i=b(c(u,"vec3",3,0)),this.instanceColorNode=i}const a=r.mul(be).xyz;if(be.assign(a),e.hasGeometryAttribute("normal")){const u=Op(et,r);et.assign(u)}this.instanceColorNode!==null&&fr("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==dn&&this.buffer!==null&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==dn&&this.bufferColor!==null&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}}const i_=H(Vf).setParameterLength(2,3);class o_ extends Vf{static get type(){return"InstancedMeshNode"}constructor(e){const{count:t,instanceMatrix:s,instanceColor:n}=e;super(t,s,n),this.instancedMesh=e}}const Gf=H(o_).setParameterLength(1);class a_ extends z{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=ms:this.batchingIdNode=If);const s=N(([m])=>{const y=x(fs(_e(this.batchMesh._indirectTexture),0).x),T=x(m).mod(y),S=x(m).div(y);return _e(this.batchMesh._indirectTexture,Pe(T,S)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(x(this.batchingIdNode)),n=this.batchMesh._matricesTexture,r=x(fs(_e(n),0).x),i=g(s).mul(4).toInt().toVar(),a=i.mod(r),u=i.div(r),c=Ws(_e(n,Pe(a,u)),_e(n,Pe(a.add(1),u)),_e(n,Pe(a.add(2),u)),_e(n,Pe(a.add(3),u))),l=this.batchMesh._colorsTexture;if(l!==null){const y=N(([T])=>{const S=x(fs(_e(l),0).x),R=T,w=R.mod(S),L=R.div(S);return _e(l,Pe(w,L)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(s);fr("vec3","vBatchColor").assign(y)}const d=We(c);be.assign(c.mul(be));const p=et.div(b(d[0].dot(d[0]),d[1].dot(d[1]),d[2].dot(d[2]))),f=d.mul(p).xyz;et.assign(f),e.hasGeometryAttribute("tangent")&&Mr.mulAssign(d)}}const Of=H(a_).setParameterLength(1);class u_ extends Ys{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}getMemberType(e,t){const s=this.storageBufferNode.structTypeNode;return s?s.getMemberType(e,t):"void"}setup(e){return e.isAvailable("storageBuffer")===!1&&this.node.isPBO===!0&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let s;const n=e.context.assign;if(e.isAvailable("storageBuffer")===!1?this.node.isPBO===!0&&n!==!0&&(this.node.value.isInstancedBufferAttribute||e.shaderStage!=="compute")?s=e.generatePBO(this):s=this.node.build(e):s=super.generate(e),n!==!0){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}const c_=H(u_).setParameterLength(2);class l_ extends Uu{static get type(){return"StorageBufferNode"}constructor(e,t=null,s=0){let n,r=null;t&&t.isStruct?(n="struct",r=t.layout,(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(s=e.count)):t===null&&(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)?(n=zd(e.itemSize),s=e.count):n=t,super(e,n,s),this.isStorageBufferNode=!0,this.structTypeNode=r,this.access=Oe.READ_WRITE,this.isAtomic=!1,this.isPBO=!1,this._attribute=null,this._varying=null,this.global=!0,e.isStorageBufferAttribute!==!0&&e.isStorageInstancedBufferAttribute!==!0&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(this.bufferCount===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return this.value.isIndirectStorageBufferAttribute?"indirectStorageBuffer":"storageBuffer"}element(e){return c_(this,e)}setPBO(e){return this.isPBO=e,this}getPBO(){return this.isPBO}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess(Oe.READ_ONLY)}setAtomic(e){return this.isAtomic=e,this}toAtomic(){return this.setAtomic(!0)}getAttributeData(){return this._attribute===null&&(this._attribute=Ar(this.value),this._varying=$t(this._attribute)),{attribute:this._attribute,varying:this._varying}}getNodeType(e){if(this.structTypeNode!==null)return this.structTypeNode.getNodeType(e);if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.getNodeType(e);const{attribute:t}=this.getAttributeData();return t.getNodeType(e)}getMemberType(e,t){return this.structTypeNode!==null?this.structTypeNode.getMemberType(e,t):"void"}generate(e){if(this.structTypeNode!==null&&this.structTypeNode.build(e),e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.generate(e);const{attribute:t,varying:s}=this.getAttributeData(),n=s.build(e);return e.registerTransform(n,t),n}}const qs=(o,e=null,t=0)=>C(new l_(o,e,t)),d_=(o,e,t)=>(console.warn('THREE.TSL: "storageObject()" is deprecated. Use "storage().setPBO( true )" instead.'),qs(o,e,t).setPBO(!0)),qc=new WeakMap;class kf extends z{static get type(){return"SkinningNode"}constructor(e){super("void"),this.skinnedMesh=e,this.updateType=q.OBJECT,this.skinIndexNode=Jt("skinIndex","uvec4"),this.skinWeightNode=Jt("skinWeight","vec4"),this.bindMatrixNode=le("bindMatrix","mat4"),this.bindMatrixInverseNode=le("bindMatrixInverse","mat4"),this.boneMatricesNode=Ba("skeleton.boneMatrices","mat4",e.skeleton.bones.length),this.positionNode=be,this.toPositionNode=be,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=this.positionNode){const{skinIndexNode:s,skinWeightNode:n,bindMatrixNode:r,bindMatrixInverseNode:i}=this,a=e.element(s.x),u=e.element(s.y),c=e.element(s.z),l=e.element(s.w),d=r.mul(t),p=Re(a.mul(n.x).mul(d),u.mul(n.y).mul(d),c.mul(n.z).mul(d),l.mul(n.w).mul(d));return i.mul(p).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=et){const{skinIndexNode:s,skinWeightNode:n,bindMatrixNode:r,bindMatrixInverseNode:i}=this,a=e.element(s.x),u=e.element(s.y),c=e.element(s.z),l=e.element(s.w);let d=Re(n.x.mul(a),n.y.mul(u),n.z.mul(c),n.w.mul(l));return d=i.mul(d).mul(r),d.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return this.previousBoneMatricesNode===null&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=Ba("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Mi)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")||Hd(e.object).useVelocity===!0}setup(e){this.needsPreviousBoneMatrices(e)&&Mi.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(this.toPositionNode&&this.toPositionNode.assign(t),e.hasGeometryAttribute("normal")){const s=this.getSkinnedNormal();et.assign(s),e.hasGeometryAttribute("tangent")&&Mr.assign(s)}return t}generate(e,t){if(t!=="void")return super.generate(e,t)}update(e){const t=e.object&&e.object.skeleton?e.object.skeleton:this.skinnedMesh.skeleton;qc.get(t)!==e.frameId&&(qc.set(t,e.frameId),this.previousBoneMatricesNode!==null&&t.previousBoneMatrices.set(t.boneMatrices),t.update())}}const zf=o=>C(new kf(o)),h_=(o,e=null)=>{const t=new kf(o);return t.positionNode=qs(new Tn(o.geometry.getAttribute("position").array,3),"vec3").setPBO(!0).toReadOnly().element(ms).toVar(),t.skinIndexNode=qs(new Tn(new Uint32Array(o.geometry.getAttribute("skinIndex").array),4),"uvec4").setPBO(!0).toReadOnly().element(ms).toVar(),t.skinWeightNode=qs(new Tn(o.geometry.getAttribute("skinWeight").array,4),"vec4").setPBO(!0).toReadOnly().element(ms).toVar(),t.bindMatrixNode=k(o.bindMatrix,"mat4"),t.bindMatrixInverseNode=k(o.bindMatrixInverse,"mat4"),t.boneMatricesNode=wr(o.skeleton.boneMatrices,"mat4",o.skeleton.bones.length),t.toPositionNode=e,C(t)};class p_ extends z{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){const t=e.getNodeProperties(this);if(t.stackNode!==void 0)return t;const s={};for(let i=0,a=this.params.length-1;i<a;i++){const u=this.params[i],c=u.isNode!==!0&&u.name||this.getVarName(i),l=u.isNode!==!0&&u.type||"int";s[c]=Zt(c,l)}const n=e.addStack();t.returnsNode=this.params[this.params.length-1](s,e),t.stackNode=n;const r=this.params[0];return r.isNode!==!0&&typeof r.update=="function"&&(t.updateNode=N(this.params[0].update)(s)),e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),s=this.params,n=t.stackNode;for(let a=0,u=s.length-1;a<u;a++){const c=s[a];let l=!1,d=null,p=null,f=null,m=null,y=null,T=null;c.isNode?c.getNodeType(e)==="bool"?(l=!0,m="bool",p=c.build(e,m)):(m="int",f=this.getVarName(a),d="0",p=c.build(e,m),y="<"):(m=c.type||"int",f=c.name||this.getVarName(a),d=c.start,p=c.end,y=c.condition,T=c.update,typeof d=="number"?d=e.generateConst(m,d):d&&d.isNode&&(d=d.build(e,m)),typeof p=="number"?p=e.generateConst(m,p):p&&p.isNode&&(p=p.build(e,m)),d!==void 0&&p===void 0?(d=d+" - 1",p="0",y=">="):p!==void 0&&d===void 0&&(d="0",y="<"),y===void 0&&(Number(d)>Number(p)?y=">=":y="<"));let S;if(l)S=`while ( ${p} )`;else{const R={start:d,end:p},w=R.start,L=R.end;let F;const P=()=>y.includes("<")?"+=":"-=";if(T!=null)switch(typeof T){case"function":F=e.flowStagesNode(t.updateNode,"void").code.replace(/\t|;/g,"");break;case"number":F=f+" "+P()+" "+e.generateConst(m,T);break;case"string":F=f+" "+T;break;default:T.isNode?F=f+" "+P()+" "+T.build(e):(console.error("THREE.TSL: 'Loop( { update: ... } )' is not a function, string or number."),F="break /* invalid update */")}else m==="int"||m==="uint"?T=y.includes("<")?"++":"--":T=P()+" 1.",F=f+" "+T;const B=e.getVar(m,f)+" = "+w,U=f+" "+y+" "+L;S=`for ( ${B}; ${U}; ${F} )`}e.addFlowCode((a===0?`
`:"")+e.tab+S+` {

`).addFlowTab()}const r=n.build(e,"void"),i=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+r);for(let a=0,u=this.params.length-1;a<u;a++)e.addFlowCode((a===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),i}}const ue=(...o)=>C(new p_($s(o,"int"))).toStack(),f_=()=>Zt("continue").toStack(),$f=()=>Zt("break").toStack(),vo=new WeakMap,st=new fe,Xc=N(({bufferMap:o,influence:e,stride:t,width:s,depth:n,offset:r})=>{const i=x(Uf).mul(t).add(r),a=i.div(s),u=i.sub(a.mul(s));return _e(o,Pe(u,a)).depth(n).xyz.mul(e)});function m_(o){const e=o.morphAttributes.position!==void 0,t=o.morphAttributes.normal!==void 0,s=o.morphAttributes.color!==void 0,n=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,r=n!==void 0?n.length:0;let i=vo.get(o);if(i===void 0||i.count!==r){let S=function(){y.dispose(),vo.delete(o),o.removeEventListener("dispose",S)};i!==void 0&&i.texture.dispose();const a=o.morphAttributes.position||[],u=o.morphAttributes.normal||[],c=o.morphAttributes.color||[];let l=0;e===!0&&(l=1),t===!0&&(l=2),s===!0&&(l=3);let d=o.attributes.position.count*l,p=1;const f=4096;d>f&&(p=Math.ceil(d/f),d=f);const m=new Float32Array(d*p*4*r),y=new cx(m,d,p,r);y.type=dt,y.needsUpdate=!0;const T=l*4;for(let R=0;R<r;R++){const w=a[R],L=u[R],F=c[R],P=d*p*4*R;for(let B=0;B<w.count;B++){const U=B*T;e===!0&&(st.fromBufferAttribute(w,B),m[P+U+0]=st.x,m[P+U+1]=st.y,m[P+U+2]=st.z,m[P+U+3]=0),t===!0&&(st.fromBufferAttribute(L,B),m[P+U+4]=st.x,m[P+U+5]=st.y,m[P+U+6]=st.z,m[P+U+7]=0),s===!0&&(st.fromBufferAttribute(F,B),m[P+U+8]=st.x,m[P+U+9]=st.y,m[P+U+10]=st.z,m[P+U+11]=F.itemSize===4?st.w:1)}}i={count:r,texture:y,stride:l,size:new $e(d,p)},vo.set(o,i),o.addEventListener("dispose",S)}return i}class g_ extends z{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=k(1),this.updateType=q.OBJECT}setup(e){const{geometry:t}=e,s=t.morphAttributes.position!==void 0,n=t.hasAttribute("normal")&&t.morphAttributes.normal!==void 0,r=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,i=r!==void 0?r.length:0,{texture:a,stride:u,size:c}=m_(t);s===!0&&be.mulAssign(this.morphBaseInfluence),n===!0&&et.mulAssign(this.morphBaseInfluence);const l=x(c.width);ue(i,({i:d})=>{const p=g(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?p.assign(_e(this.mesh.morphTexture,Pe(x(d).add(1),x(ms))).r):p.assign(le("morphTargetInfluences","float").element(d).toVar()),W(p.notEqual(0),()=>{s===!0&&be.addAssign(Xc({bufferMap:a,influence:p,stride:u,width:l,depth:d,offset:x(0)})),n===!0&&et.addAssign(Xc({bufferMap:a,influence:p,stride:u,width:l,depth:d,offset:x(1)}))})})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((t,s)=>t+s,0)}}const Wf=H(g_).setParameterLength(1);class Pn extends z{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}}class y_ extends Pn{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class x_ extends cp{static get type(){return"LightingContextNode"}constructor(e,t=null,s=null,n=null){super(e),this.lightingModel=t,this.backdropNode=s,this.backdropAlphaNode=n,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,s=b().toVar("directDiffuse"),n=b().toVar("directSpecular"),r=b().toVar("indirectDiffuse"),i=b().toVar("indirectSpecular"),a={directDiffuse:s,directSpecular:n,indirectDiffuse:r,indirectSpecular:i};return{radiance:b().toVar("radiance"),irradiance:b().toVar("irradiance"),iblIrradiance:b().toVar("iblIrradiance"),ambientOcclusion:g(1).toVar("ambientOcclusion"),reflectedLight:a,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const Hf=H(x_);class T_ extends Pn{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let Dn,Un;class Me extends z{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===Me.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=q.NONE;return(this.scope===Me.SIZE||this.scope===Me.VIEWPORT)&&(e=q.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===Me.VIEWPORT?t!==null?Un.copy(t.viewport):(e.getViewport(Un),Un.multiplyScalar(e.getPixelRatio())):t!==null?(Dn.width=t.width,Dn.height=t.height):e.getDrawingBufferSize(Dn)}setup(){const e=this.scope;let t=null;return e===Me.SIZE?t=k(Dn||(Dn=new $e)):e===Me.VIEWPORT?t=k(Un||(Un=new fe)):t=M(Br.div(Tr)),t}generate(e){if(this.scope===Me.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const s=e.getNodeProperties(Tr).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${s}.y - ${t}.y )`}return t}return super.generate(e)}}Me.COORDINATE="coordinate";Me.VIEWPORT="viewport";Me.SIZE="size";Me.UV="uv";const Yt=D(Me,Me.UV),Tr=D(Me,Me.SIZE),Br=D(Me,Me.COORDINATE),Nn=D(Me,Me.VIEWPORT),qf=Nn.zw,Xf=Br.sub(Nn.xy),__=Xf.div(qf),b_=N(()=>(console.warn('THREE.TSL: "viewportResolution" is deprecated. Use "screenSize" instead.'),Tr),"vec2").once()(),en=new $e;class uo extends Gt{static get type(){return"ViewportTextureNode"}constructor(e=Yt,t=null,s=null){let n=null;s===null?(n=new Pd,n.minFilter=zs,s=n):n=s,super(s,e,t),this.generateMipmaps=!1,this.defaultFramebuffer=n,this.isOutputTextureNode=!0,this.updateBeforeType=q.RENDER,this._textures=new WeakMap}getFrameBufferTexture(e=null){const t=this.referenceNode?this.referenceNode.defaultFramebuffer:this.defaultFramebuffer;if(e===null)return t;if(this._textures.has(e)===!1){const s=t.clone();this._textures.set(e,s)}return this._textures.get(e)}updateBefore(e){const t=e.renderer,s=t.getRenderTarget();s===null?t.getDrawingBufferSize(en):en.set(s.width,s.height);const n=this.getFrameBufferTexture(s);(n.image.width!==en.width||n.image.height!==en.height)&&(n.image.width=en.width,n.image.height=en.height,n.needsUpdate=!0);const r=n.generateMipmaps;n.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(n),n.generateMipmaps=r,this.value=n}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const N_=H(uo).setParameterLength(0,3),qu=H(uo,null,null,{generateMipmaps:!0}).setParameterLength(0,3);let Ro=null;class S_ extends uo{static get type(){return"ViewportDepthTextureNode"}constructor(e=Yt,t=null){Ro===null&&(Ro=new wt),super(e,t,Ro)}}const Xu=H(S_).setParameterLength(0,2);class Ye extends z{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===Ye.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,s=this.valueNode;let n=null;if(t===Ye.DEPTH_BASE)s!==null&&(n=Kf().assign(s));else if(t===Ye.DEPTH)e.isPerspectiveCamera?n=jf(Ne.z,os,as):n=Sn(Ne.z,os,as);else if(t===Ye.LINEAR_DEPTH)if(s!==null)if(e.isPerspectiveCamera){const r=ju(s,os,as);n=Sn(r,os,as)}else n=s;else n=Sn(Ne.z,os,as);return n}}Ye.DEPTH_BASE="depthBase";Ye.DEPTH="depth";Ye.LINEAR_DEPTH="linearDepth";const Sn=(o,e,t)=>o.add(e).div(e.sub(t)),v_=(o,e,t)=>e.sub(t).mul(o).sub(e),jf=(o,e,t)=>e.add(o).mul(t).div(t.sub(e).mul(o)),ju=(o,e,t)=>e.mul(t).div(t.sub(e).mul(o).sub(t)),Ku=(o,e,t)=>{e=e.max(1e-6).toVar();const s=Pt(o.negate().div(e)),n=Pt(t.div(e));return s.div(n)},R_=(o,e,t)=>{const s=o.mul(ji(t.div(e)));return g(Math.E).pow(s).mul(e).negate()},Kf=H(Ye,Ye.DEPTH_BASE),Yu=D(Ye,Ye.DEPTH),Bi=H(Ye,Ye.LINEAR_DEPTH).setParameterLength(0,1),A_=Bi(Xu());Yu.assign=o=>Kf(o);class gt extends z{static get type(){return"ClippingNode"}constructor(e=gt.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:s,unionPlanes:n}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===gt.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(s,n):this.scope===gt.HARDWARE?this.setupHardwareClipping(n,e):this.setupDefault(s,n)}setupAlphaToCoverage(e,t){return N(()=>{const s=g().toVar("distanceToPlane"),n=g().toVar("distanceToGradient"),r=g(1).toVar("clipOpacity"),i=t.length;if(this.hardwareClipping===!1&&i>0){const u=ht(t);ue(i,({i:c})=>{const l=u.element(c);s.assign(Ne.dot(l.xyz).negate().add(l.w)),n.assign(s.fwidth().div(2)),r.mulAssign(Vt(n.negate(),n,s))})}const a=e.length;if(a>0){const u=ht(e),c=g(1).toVar("intersectionClipOpacity");ue(a,({i:l})=>{const d=u.element(l);s.assign(Ne.dot(d.xyz).negate().add(d.w)),n.assign(s.fwidth().div(2)),c.mulAssign(Vt(n.negate(),n,s).oneMinus())}),r.mulAssign(c.oneMinus())}ne.a.mulAssign(r),ne.a.equal(0).discard()})()}setupDefault(e,t){return N(()=>{const s=t.length;if(this.hardwareClipping===!1&&s>0){const r=ht(t);ue(s,({i})=>{const a=r.element(i);Ne.dot(a.xyz).greaterThan(a.w).discard()})}const n=e.length;if(n>0){const r=ht(e),i=yt(!0).toVar("clipped");ue(n,({i:a})=>{const u=r.element(a);i.assign(Ne.dot(u.xyz).greaterThan(u.w).and(i))}),i.discard()}})()}setupHardwareClipping(e,t){const s=e.length;return t.enableHardwareClipping(s),N(()=>{const n=ht(e),r=Er(t.getClipDistance());ue(s,({i})=>{const a=n.element(i),u=Ne.dot(a.xyz).sub(a.w).negate();r.element(i).assign(u)})})()}}gt.ALPHA_TO_COVERAGE="alphaToCoverage";gt.DEFAULT="default";gt.HARDWARE="hardware";const w_=()=>C(new gt),E_=()=>C(new gt(gt.ALPHA_TO_COVERAGE)),C_=()=>C(new gt(gt.HARDWARE)),M_=.05,jc=N(([o])=>es(X(1e4,rt(X(17,o.x).add(X(.1,o.y)))).mul(Re(.1,de(rt(X(13,o.y).add(o.x))))))),Kc=N(([o])=>jc(M(jc(o.xy),o.z))),B_=N(([o])=>{const e=Te(Dt(Nu(o.xyz)),Dt(Su(o.xyz))),t=g(1).div(g(M_).mul(e)).toVar("pixScale"),s=M(Rn(Lt(Pt(t))),Rn(Ki(Pt(t)))),n=M(Kc(Lt(s.x.mul(o.xyz))),Kc(Lt(s.y.mul(o.xyz)))),r=es(Pt(t)),i=Re(X(r.oneMinus(),n.x),X(r,n.y)),a=Je(r,r.oneMinus()),u=b(i.mul(i).div(X(2,a).mul(Q(1,a))),i.sub(X(.5,a)).div(Q(1,a)),Q(1,Q(1,i).mul(Q(1,i)).div(X(2,a).mul(Q(1,a))))),c=i.lessThan(a.oneMinus()).select(i.lessThan(a).select(u.x,u.y),u.z);return xt(c,1e-6,1)}).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]});class F_ extends Fp{static get type(){return"VertexColorNode"}constructor(e){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e),s=e.hasGeometryAttribute(t);let n;return s===!0?n=super.generate(e):n=e.generateConst(this.nodeType,new fe(1,1,1,1)),n}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const Yf=(o=0)=>C(new F_(o)),Qf=N(([o,e])=>Je(1,o.oneMinus().div(e)).oneMinus()).setLayout({name:"blendBurn",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Zf=N(([o,e])=>Je(o.div(e.oneMinus()),1)).setLayout({name:"blendDodge",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Jf=N(([o,e])=>o.oneMinus().mul(e.oneMinus()).oneMinus()).setLayout({name:"blendScreen",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),em=N(([o,e])=>te(o.mul(2).mul(e),o.oneMinus().mul(2).mul(e.oneMinus()).oneMinus(),Qi(.5,o))).setLayout({name:"blendOverlay",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),P_=N(([o,e])=>{const t=e.a.add(o.a.mul(e.a.oneMinus()));return O(e.rgb.mul(e.a).add(o.rgb.mul(o.a).mul(e.a.oneMinus())).div(t),t)}).setLayout({name:"blendColor",type:"vec4",inputs:[{name:"base",type:"vec4"},{name:"blend",type:"vec4"}]}),tm=N(([o])=>O(o.rgb.mul(o.a),o.a),{color:"vec4",return:"vec4"}),L_=N(([o])=>(W(o.a.equal(0),()=>O(0)),O(o.rgb.div(o.a),o.a)),{color:"vec4",return:"vec4"}),D_=(...o)=>(console.warn('THREE.TSL: "burn" has been renamed. Use "blendBurn" instead.'),Qf(o)),U_=(...o)=>(console.warn('THREE.TSL: "dodge" has been renamed. Use "blendDodge" instead.'),Zf(o)),I_=(...o)=>(console.warn('THREE.TSL: "screen" has been renamed. Use "blendScreen" instead.'),Jf(o)),V_=(...o)=>(console.warn('THREE.TSL: "overlay" has been renamed. Use "blendOverlay" instead.'),em(o));class Se extends vc{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.maskNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.receivedShadowPositionNode=null,this.castShadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null,Object.defineProperty(this,"shadowPositionNode",{get:()=>this.receivedShadowPositionNode,set:e=>{console.warn('THREE.NodeMaterial: ".shadowPositionNode" was renamed to ".receivedShadowPositionNode".'),this.receivedShadowPositionNode=e}})}customProgramCacheKey(){return this.type+kd(this)}build(e){this.setup(e)}setupObserver(e){return new px(e)}setup(e){e.context.setupNormal=()=>bn(this.setupNormal(e),"NORMAL","vec3"),e.context.setupPositionView=()=>this.setupPositionView(e),e.context.setupModelViewProjection=()=>this.setupModelViewProjection(e);const t=e.renderer,s=t.getRenderTarget();e.addStack();const n=bn(this.setupVertex(e),"VERTEX"),r=this.vertexNode||n;e.stack.outputNode=r,this.setupHardwareClipping(e),this.geometryNode!==null&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();let i;const a=this.setupClipping(e);if((this.depthWrite===!0||this.depthTest===!0)&&(s!==null?s.depthBuffer===!0&&this.setupDepth(e):t.depth===!0&&this.setupDepth(e)),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);const u=this.setupLighting(e);a!==null&&e.stack.add(a);const c=O(u,ne.a).max(0);i=this.setupOutput(e,c),_n.assign(i);const l=this.outputNode!==null;if(l&&(i=this.outputNode),s!==null){const d=t.getMRT(),p=this.mrtNode;d!==null?(l&&_n.assign(i),i=d,p!==null&&(i=d.merge(p))):p!==null&&(i=p)}}else{let u=this.fragmentNode;u.isOutputStructNode!==!0&&(u=O(u)),i=this.setupOutput(e,u)}e.stack.outputNode=i,e.addFlow("fragment",e.removeStack()),e.observer=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;const{unionPlanes:t,intersectionPlanes:s}=e.clippingContext;let n=null;if(t.length>0||s.length>0){const r=e.renderer.samples;this.alphaToCoverage&&r>1?n=E_():e.stack.add(w_())}return n}setupHardwareClipping(e){if(this.hardwareClipping=!1,e.clippingContext===null)return;const t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.add(C_()),this.hardwareClipping=!0)}setupDepth(e){const{renderer:t,camera:s}=e;let n=this.depthNode;if(n===null){const r=t.getMRT();r&&r.has("depth")?n=r.get("depth"):t.logarithmicDepthBuffer===!0&&(s.isPerspectiveCamera?n=Ku(Ne.z,os,as):n=Sn(Ne.z,os,as))}n!==null&&Yu.assign(n).toStack()}setupPositionView(){return Zs.mul(be).xyz}setupModelViewProjection(){return Qs.mul(Ne)}setupVertex(e){return e.addStack(),this.setupPosition(e),e.context.vertex=e.removeStack(),Hu}setupPosition(e){const{object:t,geometry:s}=e;if((s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color)&&Wf(t).toStack(),t.isSkinnedMesh===!0&&zf(t).toStack(),this.displacementMap){const n=jt("displacementMap","texture"),r=jt("displacementScale","float"),i=jt("displacementBias","float");be.addAssign(et.normalize().mul(n.x.mul(r).add(i)))}return t.isBatchedMesh&&Of(t).toStack(),t.isInstancedMesh&&t.instanceMatrix&&t.instanceMatrix.isInstancedBufferAttribute===!0&&Gf(t).toStack(),this.positionNode!==null&&be.assign(bn(this.positionNode,"POSITION","vec3")),be}setupDiffuseColor({object:e,geometry:t}){this.maskNode!==null&&yt(this.maskNode).not().discard();let s=this.colorNode?O(this.colorNode):of;this.vertexColors===!0&&t.hasAttribute("color")&&(s=s.mul(Yf())),e.instanceColor&&(s=fr("vec3","vInstanceColor").mul(s)),e.isBatchedMesh&&e._colorsTexture&&(s=fr("vec3","vBatchColor").mul(s)),ne.assign(s);const n=this.opacityNode?g(this.opacityNode):$u;ne.a.assign(ne.a.mul(n));let r=null;(this.alphaTestNode!==null||this.alphaTest>0)&&(r=this.alphaTestNode!==null?g(this.alphaTestNode):rf,ne.a.lessThanEqual(r).discard()),this.alphaHash===!0&&ne.a.lessThan(B_(be)).discard(),this.transparent===!1&&this.blending===ks&&this.alphaToCoverage===!1?ne.a.assign(1):r===null&&ne.a.lessThanEqual(0).discard()}setupVariants(){}setupOutgoingLight(){return this.lights===!0?b(0):ne.rgb}setupNormal(){return this.normalNode?b(this.normalNode):pf}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?jt("envMap","cubeTexture"):jt("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new T_(Wu)),t}setupLights(e){const t=[],s=this.setupEnvironment(e);s&&s.isLightingNode&&t.push(s);const n=this.setupLightMap(e);if(n&&n.isLightingNode&&t.push(n),this.aoNode!==null||e.material.aoMap){const i=this.aoNode!==null?this.aoNode:Df;t.push(new y_(i))}let r=this.lightsNode||e.lightsNode;return t.length>0&&(r=e.renderer.lighting.createNode([...r.getLights(),...t])),r}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:s,backdropAlphaNode:n,emissiveNode:r}=this,a=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null;let u=this.setupOutgoingLight(e);if(a&&a.getScope().hasLights){const c=this.setupLightingModel(e)||null;u=Hf(a,c,s,n)}else s!==null&&(u=b(n!==null?te(u,s,n):s));return(r&&r.isNode===!0||t.emissive&&t.emissive.isColor===!0)&&(Aa.assign(b(r||uf)),u=u.add(Aa)),u}setupFog(e,t){const s=e.fogNode;return s&&(_n.assign(t),t=O(s.toVar())),t}setupPremultipliedAlpha(e,t){return tm(t)}setupOutput(e,t){return this.fog===!0&&(t=this.setupFog(e,t)),this.premultipliedAlpha===!0&&(t=this.setupPremultipliedAlpha(e,t)),t}setDefaultValues(e){for(const s in e){const n=e[s];this[s]===void 0&&(this[s]=n,n&&n.clone&&(this[s]=n.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const s in t)Object.getOwnPropertyDescriptor(this.constructor.prototype,s)===void 0&&t[s].get!==void 0&&Object.defineProperty(this.constructor.prototype,s,t[s])}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{},nodes:{}});const s=vc.prototype.toJSON.call(this,e),n=Ni(this);s.inputNodes={};for(const{property:i,childNode:a}of n)s.inputNodes[i]=a.toJSON(e).uuid;function r(i){const a=[];for(const u in i){const c=i[u];delete c.metadata,a.push(c)}return a}if(t){const i=r(e.textures),a=r(e.images),u=r(e.nodes);i.length>0&&(s.textures=i),a.length>0&&(s.images=a),u.length>0&&(s.nodes=u)}return s}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.maskNode=e.maskNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.receivedShadowPositionNode=e.receivedShadowPositionNode,this.castShadowPositionNode=e.castShadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const G_=new Ry;class O_ extends Se{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.setDefaultValues(G_),this.setValues(e)}}const k_=new Ay;class z_ extends Se{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.setDefaultValues(k_),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?g(this.offsetNode):Ff,t=this.dashScaleNode?g(this.dashScaleNode):Cf,s=this.dashSizeNode?g(this.dashSizeNode):Mf,n=this.gapSizeNode?g(this.gapSizeNode):Bf;ai.assign(s),wa.assign(n);const r=$t(Jt("lineDistance").mul(t));(e?r.add(e):r).mod(ai.add(wa)).greaterThan(ai).discard()}}let Ao=null;class $_ extends uo{static get type(){return"ViewportSharedTextureNode"}constructor(e=Yt,t=null){Ao===null&&(Ao=new Pd),super(e,t,Ao)}updateReference(){return this}}const W_=H($_).setParameterLength(0,2),sm=o=>C(o).mul(.5).add(.5),H_=o=>C(o).mul(2).sub(1),q_=new Sy;class X_ extends Se{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(q_),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?g(this.opacityNode):$u;ne.assign(to(O(sm(ae),e),Jl))}}const Qu=N(([o=Iu])=>{const e=o.z.atan(o.x).mul(1/(Math.PI*2)).add(.5),t=o.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return M(e,t)});class nm extends lx{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const s=t.minFilter,n=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r=new Vd(5,5,5),i=Qu(Iu),a=new Se;a.colorNode=K(t,i,0),a.side=Ze,a.blending=lr;const u=new gs(r,a),c=new ja;c.add(u),t.minFilter===zs&&(t.minFilter=ot);const l=new dx(1,10,this),d=e.getMRT();return e.setMRT(null),l.update(e,c),e.setMRT(d),t.minFilter=s,t.currentGenerateMipmaps=n,u.geometry.dispose(),u.material.dispose(),this}}const or=new WeakMap;class j_ extends Be{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=wn(null);const t=new Xa;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=q.RENDER}updateBefore(e){const{renderer:t,material:s}=e,n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const r=n.isTextureNode?n.value:s[n.property];if(r&&r.isTexture){const i=r.mapping;if(i===Qa||i===Za){if(or.has(r)){const a=or.get(r);Yc(a,r.mapping),this._cubeTexture=a}else{const a=r.image;if(K_(a)){const u=new nm(a.height);u.fromEquirectangularTexture(t,r),Yc(u.texture,r.mapping),this._cubeTexture=u.texture,or.set(r,u.texture),r.addEventListener("dispose",rm)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function K_(o){return o==null?!1:o.height>0}function rm(o){const e=o.target;e.removeEventListener("dispose",rm);const t=or.get(e);t!==void 0&&(or.delete(e),t.dispose())}function Yc(o,e){e===Qa?o.mapping=Ti:e===Za&&(o.mapping=_i)}const im=H(j_).setParameterLength(1);class Zu extends Pn{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=im(this.envNode)}}class Y_ extends Pn{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=g(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class co{start(e){e.lightsNode.setupLights(e,e.lightsNode.getLightNodes(e)),this.indirect(e)}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class om extends co{constructor(){super()}indirect({context:e}){const t=e.ambientOcclusion,s=e.reflectedLight,n=e.irradianceLightMap;s.indirectDiffuse.assign(O(0)),n?s.indirectDiffuse.addAssign(n):s.indirectDiffuse.addAssign(O(1,1,1,0)),s.indirectDiffuse.mulAssign(t),s.indirectDiffuse.mulAssign(ne.rgb)}finish(e){const{material:t,context:s}=e,n=s.outgoingLight,r=e.context.environment;if(r)switch(t.combine){case ty:n.rgb.assign(te(n.rgb,n.rgb.mul(r.rgb),ir.mul(di)));break;case ey:n.rgb.assign(te(n.rgb,r.rgb,ir.mul(di)));break;case Jg:n.rgb.addAssign(r.rgb.mul(ir.mul(di)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",t.combine);break}}}const Q_=new Ps;class Z_ extends Se{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Q_),this.setValues(e)}setupNormal(){return Fn(An)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Zu(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new Y_(Wu)),t}setupOutgoingLight(){return ne.rgb}setupLightingModel(){return new om}}const En=N(({f0:o,f90:e,dotVH:t})=>{const s=t.mul(-5.55473).sub(6.98316).mul(t).exp2();return o.mul(s.oneMinus()).add(e.mul(s))}),js=N(o=>o.diffuseColor.mul(1/Math.PI)),J_=()=>g(.25),eb=N(({dotNH:o})=>Ai.mul(g(.5)).add(1).mul(g(1/Math.PI)).mul(o.pow(Ai))),tb=N(({lightDirection:o})=>{const e=o.add(me).normalize(),t=ae.dot(e).clamp(),s=me.dot(e).clamp(),n=En({f0:je,f90:1,dotVH:s}),r=J_(),i=eb({dotNH:t});return n.mul(r).mul(i)});class am extends om{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=ae.dot(e).clamp().mul(t);s.directDiffuse.addAssign(r.mul(js({diffuseColor:ne.rgb}))),this.specular===!0&&s.directSpecular.addAssign(r.mul(tb({lightDirection:e})).mul(ir))}indirect(e){const{ambientOcclusion:t,irradiance:s,reflectedLight:n}=e.context;n.indirectDiffuse.addAssign(s.mul(js({diffuseColor:ne}))),n.indirectDiffuse.mulAssign(t)}}const sb=new Ny;class nb extends Se{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(sb),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Zu(t):null}setupLightingModel(){return new am(!1)}}const rb=new xy;class ib extends Se{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(rb),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Zu(t):null}setupLightingModel(){return new am}setupVariants(){const e=(this.shininessNode?g(this.shininessNode):af).max(1e-4);Ai.assign(e);const t=this.specularNode||cf;je.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const um=N(o=>{if(o.geometry.hasAttribute("normal")===!1)return g(0);const e=An.dFdx().abs().max(An.dFdy().abs());return e.x.max(e.y).max(e.z)}),Ju=N(o=>{const{roughness:e}=o,t=um();let s=e.max(.0525);return s=s.add(t),s=s.min(1),s}),cm=N(({alpha:o,dotNL:e,dotNV:t})=>{const s=o.pow2(),n=e.mul(s.add(s.oneMinus().mul(t.pow2())).sqrt()),r=t.mul(s.add(s.oneMinus().mul(e.pow2())).sqrt());return at(.5,n.add(r).max(Dh))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),ob=N(({alphaT:o,alphaB:e,dotTV:t,dotBV:s,dotTL:n,dotBL:r,dotNV:i,dotNL:a})=>{const u=a.mul(b(o.mul(t),e.mul(s),i).length()),c=i.mul(b(o.mul(n),e.mul(r),a).length());return at(.5,u.add(c)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),lm=N(({alpha:o,dotNH:e})=>{const t=o.pow2(),s=e.pow2().mul(t.oneMinus()).oneMinus();return t.div(s.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),ab=g(1/Math.PI),ub=N(({alphaT:o,alphaB:e,dotNH:t,dotTH:s,dotBH:n})=>{const r=o.mul(e),i=b(e.mul(s),o.mul(n),r.mul(t)),a=i.dot(i),u=r.div(a);return ab.mul(r.mul(u.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),Ua=N(({lightDirection:o,f0:e,f90:t,roughness:s,f:n,normalView:r=ae,USE_IRIDESCENCE:i,USE_ANISOTROPY:a})=>{const u=s.pow2(),c=o.add(me).normalize(),l=r.dot(o).clamp(),d=r.dot(me).clamp(),p=r.dot(c).clamp(),f=me.dot(c).clamp();let m=En({f0:e,f90:t,dotVH:f}),y,T;if(hr(i)&&(m=qi.mix(m,n)),hr(a)){const S=sr.dot(o),R=sr.dot(me),w=sr.dot(c),L=Hs.dot(o),F=Hs.dot(me),P=Hs.dot(c);y=ob({alphaT:Ri,alphaB:u,dotTV:R,dotBV:F,dotTL:S,dotBL:L,dotNV:d,dotNL:l}),T=ub({alphaT:Ri,alphaB:u,dotNH:p,dotTH:w,dotBH:P})}else y=cm({alpha:u,dotNL:l,dotNV:d}),T=lm({alpha:u,dotNH:p});return m.mul(y).mul(T)}),ec=N(({roughness:o,dotNV:e})=>{const t=O(-1,-.0275,-.572,.022),s=O(1,.0425,1.04,-.04),n=o.mul(t).add(s),r=n.x.mul(n.x).min(e.mul(-9.28).exp2()).mul(n.x).add(n.y);return M(-1.04,1.04).mul(r).add(n.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),dm=N(o=>{const{dotNV:e,specularColor:t,specularF90:s,roughness:n}=o,r=ec({dotNV:e,roughness:n});return t.mul(r.x).add(s.mul(r.y))}),hm=N(({f:o,f90:e,dotVH:t})=>{const s=t.oneMinus().saturate(),n=s.mul(s),r=s.mul(n,n).clamp(0,.9999);return o.sub(b(e).mul(r)).div(r.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),cb=N(({roughness:o,dotNH:e})=>{const t=o.pow2(),s=g(1).div(t),r=e.pow2().oneMinus().max(.0078125);return g(2).add(s).mul(r.pow(s.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),lb=N(({dotNV:o,dotNL:e})=>g(1).div(g(4).mul(e.add(o).sub(e.mul(o))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),db=N(({lightDirection:o})=>{const e=o.add(me).normalize(),t=ae.dot(o).clamp(),s=ae.dot(me).clamp(),n=ae.dot(e).clamp(),r=cb({roughness:Hi,dotNH:n}),i=lb({dotNV:s,dotNL:t});return Is.mul(r).mul(i)}),hb=N(({N:o,V:e,roughness:t})=>{const r=.0078125,i=o.dot(e).saturate(),a=M(t,i.oneMinus().sqrt());return a.assign(a.mul(.984375).add(r)),a}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),pb=N(({f:o})=>{const e=o.length();return Te(e.mul(e).add(o.z).div(e.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),Ir=N(({v1:o,v2:e})=>{const t=o.dot(e),s=t.abs().toVar(),n=s.mul(.0145206).add(.4965155).mul(s).add(.8543985).toVar(),r=s.add(4.1616724).mul(s).add(3.417594).toVar(),i=n.div(r),a=t.greaterThan(0).select(i,Te(t.mul(t).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(i));return o.cross(e).mul(a)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),Qc=N(({N:o,V:e,P:t,mInv:s,p0:n,p1:r,p2:i,p3:a})=>{const u=r.sub(n).toVar(),c=a.sub(n).toVar(),l=u.cross(c),d=b().toVar();return W(l.dot(t.sub(n)).greaterThanEqual(0),()=>{const p=e.sub(o.mul(e.dot(o))).normalize(),f=o.cross(p).negate(),m=s.mul(We(p,f,o).transpose()).toVar(),y=m.mul(n.sub(t)).normalize().toVar(),T=m.mul(r.sub(t)).normalize().toVar(),S=m.mul(i.sub(t)).normalize().toVar(),R=m.mul(a.sub(t)).normalize().toVar(),w=b(0).toVar();w.addAssign(Ir({v1:y,v2:T})),w.addAssign(Ir({v1:T,v2:S})),w.addAssign(Ir({v1:S,v2:R})),w.addAssign(Ir({v1:R,v2:y})),d.assign(b(pb({f:w})))}),d}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),lo=1/6,pm=o=>X(lo,X(o,X(o,o.negate().add(3)).sub(3)).add(1)),Ia=o=>X(lo,X(o,X(o,X(3,o).sub(6))).add(4)),fm=o=>X(lo,X(o,X(o,X(-3,o).add(3)).add(3)).add(1)),Va=o=>X(lo,pt(o,3)),Zc=o=>pm(o).add(Ia(o)),Jc=o=>fm(o).add(Va(o)),el=o=>Re(-1,Ia(o).div(pm(o).add(Ia(o)))),tl=o=>Re(1,Va(o).div(fm(o).add(Va(o)))),sl=(o,e,t)=>{const s=o.uvNode,n=X(s,e.zw).add(.5),r=Lt(n),i=es(n),a=Zc(i.x),u=Jc(i.x),c=el(i.x),l=tl(i.x),d=el(i.y),p=tl(i.y),f=M(r.x.add(c),r.y.add(d)).sub(.5).mul(e.xy),m=M(r.x.add(l),r.y.add(d)).sub(.5).mul(e.xy),y=M(r.x.add(c),r.y.add(p)).sub(.5).mul(e.xy),T=M(r.x.add(l),r.y.add(p)).sub(.5).mul(e.xy),S=Zc(i.y).mul(Re(a.mul(o.sample(f).level(t)),u.mul(o.sample(m).level(t)))),R=Jc(i.y).mul(Re(a.mul(o.sample(y).level(t)),u.mul(o.sample(T).level(t))));return S.add(R)},tc=N(([o,e])=>{const t=M(o.size(x(e))),s=M(o.size(x(e.add(1)))),n=at(1,t),r=at(1,s),i=sl(o,O(n,t),Lt(e)),a=sl(o,O(r,s),Ki(e));return es(e).mix(i,a)}),fb=N(([o,e])=>{const t=e.mul(Lu(o));return tc(o,t)}),nl=N(([o,e,t,s,n])=>{const r=b(Eu(e.negate(),Qt(o),at(1,s))),i=b(Dt(n[0].xyz),Dt(n[1].xyz),Dt(n[2].xyz));return Qt(r).mul(t.mul(i))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),mb=N(([o,e])=>o.mul(xt(e.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),gb=qu(),yb=qu(),rl=N(([o,e,t],{material:s})=>{const r=(s.side===Ze?gb:yb).sample(o),i=Pt(Tr.x).mul(mb(e,t));return tc(r,i)}),il=N(([o,e,t])=>(W(t.notEqual(0),()=>{const s=ji(e).negate().div(t);return Tu(s.negate().mul(o))}),b(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),xb=N(([o,e,t,s,n,r,i,a,u,c,l,d,p,f,m])=>{let y,T;if(m){y=O().toVar(),T=b().toVar();const F=l.sub(1).mul(m.mul(.025)),P=b(l.sub(F),l,l.add(F));ue({start:0,end:3},({i:B})=>{const U=P.element(B),V=nl(o,e,d,U,a),ee=i.add(V),se=c.mul(u.mul(O(ee,1))),he=M(se.xy.div(se.w)).toVar();he.addAssign(1),he.divAssign(2),he.assign(M(he.x,he.y.oneMinus()));const pe=rl(he,t,U);y.element(B).assign(pe.element(B)),y.a.addAssign(pe.a),T.element(B).assign(s.element(B).mul(il(Dt(V),p,f).element(B)))}),y.a.divAssign(3)}else{const F=nl(o,e,d,l,a),P=i.add(F),B=c.mul(u.mul(O(P,1))),U=M(B.xy.div(B.w)).toVar();U.addAssign(1),U.divAssign(2),U.assign(M(U.x,U.y.oneMinus())),y=rl(U,t,l),T=s.mul(il(Dt(F),p,f))}const S=T.rgb.mul(y.rgb),R=o.dot(e).clamp(),w=b(dm({dotNV:R,specularColor:n,specularF90:r,roughness:t})),L=T.r.add(T.g,T.b).div(3);return O(w.oneMinus().mul(S),y.a.oneMinus().mul(L).oneMinus())}),Tb=We(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),_b=o=>{const e=o.sqrt();return b(1).add(e).div(b(1).sub(e))},ol=(o,e)=>o.sub(e).div(o.add(e)).pow2(),bb=(o,e)=>{const t=o.mul(2*Math.PI*1e-9),s=b(54856e-17,44201e-17,52481e-17),n=b(1681e3,1795300,2208400),r=b(43278e5,93046e5,66121e5),i=g(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(t.mul(2239900).add(e.x).cos()).mul(t.pow2().mul(-45282e5).exp());let a=s.mul(r.mul(2*Math.PI).sqrt()).mul(n.mul(t).add(e).cos()).mul(t.pow2().negate().mul(r).exp());return a=b(a.x.add(i),a.y,a.z).div(10685e-11),Tb.mul(a)},Nb=N(({outsideIOR:o,eta2:e,cosTheta1:t,thinFilmThickness:s,baseF0:n})=>{const r=te(o,e,Vt(0,.03,s)),a=o.div(r).pow2().mul(t.pow2().oneMinus()).oneMinus();W(a.lessThan(0),()=>b(1));const u=a.sqrt(),c=ol(r,o),l=En({f0:c,f90:1,dotVH:t}),d=l.oneMinus(),p=r.lessThan(o).select(Math.PI,0),f=g(Math.PI).sub(p),m=_b(n.clamp(0,.9999)),y=ol(m,r.toVec3()),T=En({f0:y,f90:1,dotVH:u}),S=b(m.x.lessThan(r).select(Math.PI,0),m.y.lessThan(r).select(Math.PI,0),m.z.lessThan(r).select(Math.PI,0)),R=r.mul(s,u,2),w=b(f).add(S),L=l.mul(T).clamp(1e-5,.9999),F=L.sqrt(),P=d.pow2().mul(T).div(b(1).sub(L)),U=l.add(P).toVar(),V=P.sub(d).toVar();return ue({start:1,end:2,condition:"<=",name:"m"},({m:ee})=>{V.mulAssign(F);const se=bb(g(ee).mul(R),g(ee).mul(w)).mul(2);U.addAssign(V.mul(se))}),U.max(b(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),Sb=N(({normal:o,viewDir:e,roughness:t})=>{const s=o.dot(e).saturate(),n=t.pow2(),r=Ie(t.lessThan(.25),g(-339.2).mul(n).add(g(161.4).mul(t)).sub(25.9),g(-8.48).mul(n).add(g(14.3).mul(t)).sub(9.95)),i=Ie(t.lessThan(.25),g(44).mul(n).sub(g(23.7).mul(t)).add(3.26),g(1.97).mul(n).sub(g(3.27).mul(t)).add(.72));return Ie(t.lessThan(.25),0,g(.1).mul(t).sub(.025)).add(r.mul(s).add(i).exp()).mul(1/Math.PI).saturate()}),wo=b(.04),Eo=g(1);class mm extends co{constructor(e=!1,t=!1,s=!1,n=!1,r=!1,i=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=s,this.anisotropy=n,this.transmission=r,this.dispersion=i,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(this.clearcoat===!0&&(this.clearcoatRadiance=b().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=b().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=b().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=b().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=b().toVar("sheenSpecularIndirect")),this.iridescence===!0){const t=ae.dot(me).clamp();this.iridescenceFresnel=Nb({outsideIOR:g(1),eta2:lu,cosTheta1:t,thinFilmThickness:du,baseF0:je}),this.iridescenceF0=hm({f:this.iridescenceFresnel,f90:1,dotVH:t})}if(this.transmission===!0){const t=Ut,s=Pp.sub(Ut).normalize(),n=_s,r=e.context;r.backdrop=xb(n,s,Ft,ne,je,yr,t,ft,_t,Qs,nr,hu,fu,pu,this.dispersion?mu:null),r.backdropAlpha=wi,ne.a.mulAssign(te(1,r.backdrop.a,wi))}super.start(e)}computeMultiscattering(e,t,s){const n=ae.dot(me).clamp(),r=ec({roughness:Ft,dotNV:n}),a=(this.iridescenceF0?qi.mix(je,this.iridescenceF0):je).mul(r.x).add(s.mul(r.y)),c=r.x.add(r.y).oneMinus(),l=je.add(je.oneMinus().mul(.047619)),d=a.mul(l).div(c.mul(l).oneMinus());e.addAssign(a),t.addAssign(d.mul(c))}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=ae.dot(e).clamp().mul(t);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(r.mul(db({lightDirection:e}))),this.clearcoat===!0){const a=Vs.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(a.mul(Ua({lightDirection:e,f0:wo,f90:Eo,roughness:gr,normalView:Vs})))}s.directDiffuse.addAssign(r.mul(js({diffuseColor:ne.rgb}))),s.directSpecular.addAssign(r.mul(Ua({lightDirection:e,f0:je,f90:1,roughness:Ft,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:s,halfHeight:n,reflectedLight:r,ltc_1:i,ltc_2:a}){const u=t.add(s).sub(n),c=t.sub(s).sub(n),l=t.sub(s).add(n),d=t.add(s).add(n),p=ae,f=me,m=Ne.toVar(),y=hb({N:p,V:f,roughness:Ft}),T=i.sample(y).toVar(),S=a.sample(y).toVar(),R=We(b(T.x,0,T.y),b(0,1,0),b(T.z,0,T.w)).toVar(),w=je.mul(S.x).add(je.oneMinus().mul(S.y)).toVar();r.directSpecular.addAssign(e.mul(w).mul(Qc({N:p,V:f,P:m,mInv:R,p0:u,p1:c,p2:l,p3:d}))),r.directDiffuse.addAssign(e.mul(ne).mul(Qc({N:p,V:f,P:m,mInv:We(1,0,0,0,1,0,0,0,1),p0:u,p1:c,p2:l,p3:d})))}indirect(e){this.indirectDiffuse(e),this.indirectSpecular(e),this.ambientOcclusion(e)}indirectDiffuse(e){const{irradiance:t,reflectedLight:s}=e.context;s.indirectDiffuse.addAssign(t.mul(js({diffuseColor:ne})))}indirectSpecular(e){const{radiance:t,iblIrradiance:s,reflectedLight:n}=e.context;if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(s.mul(Is,Sb({normal:ae,viewDir:me,roughness:Hi}))),this.clearcoat===!0){const l=Vs.dot(me).clamp(),d=dm({dotNV:l,specularColor:wo,specularF90:Eo,roughness:gr});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(d))}const r=b().toVar("singleScattering"),i=b().toVar("multiScattering"),a=s.mul(1/Math.PI);this.computeMultiscattering(r,i,yr);const u=r.add(i),c=ne.mul(u.r.max(u.g).max(u.b).oneMinus());n.indirectSpecular.addAssign(t.mul(r)),n.indirectSpecular.addAssign(i.mul(a)),n.indirectDiffuse.addAssign(c.mul(a))}ambientOcclusion(e){const{ambientOcclusion:t,reflectedLight:s}=e.context,r=ae.dot(me).clamp().add(t),i=Ft.mul(-16).oneMinus().negate().exp2(),a=t.sub(r.pow(i).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(t),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(t),s.indirectDiffuse.mulAssign(t),s.indirectSpecular.mulAssign(a)}finish({context:e}){const{outgoingLight:t}=e;if(this.clearcoat===!0){const s=Vs.dot(me).clamp(),n=En({dotVH:s,f0:wo,f90:Eo}),r=t.mul(vi.mul(n).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(vi));t.assign(r)}if(this.sheen===!0){const s=Is.r.max(Is.g).max(Is.b).mul(.157).oneMinus(),n=t.mul(s).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(n)}}}const al=g(1),Ga=g(-2),Vr=g(.8),Co=g(-1),Gr=g(.4),Mo=g(2),Or=g(.305),Bo=g(3),ul=g(.21),vb=g(4),cl=g(4),Rb=g(16),Ab=N(([o])=>{const e=b(de(o)).toVar(),t=g(-1).toVar();return W(e.x.greaterThan(e.z),()=>{W(e.x.greaterThan(e.y),()=>{t.assign(Ie(o.x.greaterThan(0),0,3))}).Else(()=>{t.assign(Ie(o.y.greaterThan(0),1,4))})}).Else(()=>{W(e.z.greaterThan(e.y),()=>{t.assign(Ie(o.z.greaterThan(0),2,5))}).Else(()=>{t.assign(Ie(o.y.greaterThan(0),1,4))})}),t}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),wb=N(([o,e])=>{const t=M().toVar();return W(e.equal(0),()=>{t.assign(M(o.z,o.y).div(de(o.x)))}).ElseIf(e.equal(1),()=>{t.assign(M(o.x.negate(),o.z.negate()).div(de(o.y)))}).ElseIf(e.equal(2),()=>{t.assign(M(o.x.negate(),o.y).div(de(o.z)))}).ElseIf(e.equal(3),()=>{t.assign(M(o.z.negate(),o.y).div(de(o.x)))}).ElseIf(e.equal(4),()=>{t.assign(M(o.x.negate(),o.z).div(de(o.y)))}).Else(()=>{t.assign(M(o.x,o.y).div(de(o.z)))}),X(.5,t.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),Eb=N(([o])=>{const e=g(0).toVar();return W(o.greaterThanEqual(Vr),()=>{e.assign(al.sub(o).mul(Co.sub(Ga)).div(al.sub(Vr)).add(Ga))}).ElseIf(o.greaterThanEqual(Gr),()=>{e.assign(Vr.sub(o).mul(Mo.sub(Co)).div(Vr.sub(Gr)).add(Co))}).ElseIf(o.greaterThanEqual(Or),()=>{e.assign(Gr.sub(o).mul(Bo.sub(Mo)).div(Gr.sub(Or)).add(Mo))}).ElseIf(o.greaterThanEqual(ul),()=>{e.assign(Or.sub(o).mul(vb.sub(Bo)).div(Or.sub(ul)).add(Bo))}).Else(()=>{e.assign(g(-2).mul(Pt(X(1.16,o))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),gm=N(([o,e])=>{const t=o.toVar();t.assign(X(2,t).sub(1));const s=b(t,1).toVar();return W(e.equal(0),()=>{s.assign(s.zyx)}).ElseIf(e.equal(1),()=>{s.assign(s.xzy),s.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{s.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{s.assign(s.zyx),s.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{s.assign(s.xzy),s.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{s.z.mulAssign(-1)}),s}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),ym=N(([o,e,t,s,n,r])=>{const i=g(t),a=b(e),u=xt(Eb(i),Ga,r),c=es(u),l=Lt(u),d=b(Oa(o,a,l,s,n,r)).toVar();return W(c.notEqual(0),()=>{const p=b(Oa(o,a,l.add(1),s,n,r)).toVar();d.assign(te(d,p,c))}),d}),Oa=N(([o,e,t,s,n,r])=>{const i=g(t).toVar(),a=b(e),u=g(Ab(a)).toVar(),c=g(Te(cl.sub(i),0)).toVar();i.assign(Te(i,cl));const l=g(Rn(i)).toVar(),d=M(wb(a,u).mul(l.sub(2)).add(1)).toVar();return W(u.greaterThan(2),()=>{d.y.addAssign(l),u.subAssign(3)}),d.x.addAssign(u.mul(l)),d.x.addAssign(c.mul(X(3,Rb))),d.y.addAssign(X(4,Rn(r).sub(l))),d.x.mulAssign(s),d.y.mulAssign(n),o.sample(d).grad(M(),M())}),Fo=N(({envMap:o,mipInt:e,outputDirection:t,theta:s,axis:n,CUBEUV_TEXEL_WIDTH:r,CUBEUV_TEXEL_HEIGHT:i,CUBEUV_MAX_MIP:a})=>{const u=Ht(s),c=t.mul(u).add(n.cross(t).mul(rt(s))).add(n.mul(n.dot(t).mul(u.oneMinus())));return Oa(o,c,e,r,i,a)}),xm=N(({n:o,latitudinal:e,poleAxis:t,outputDirection:s,weights:n,samples:r,dTheta:i,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:l,CUBEUV_MAX_MIP:d})=>{const p=b(Ie(e,t,Zi(t,s))).toVar();W(p.equal(b(0)),()=>{p.assign(b(s.z,0,s.x.negate()))}),p.assign(Qt(p));const f=b().toVar();return f.addAssign(n.element(0).mul(Fo({theta:0,axis:p,outputDirection:s,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:l,CUBEUV_MAX_MIP:d}))),ue({start:x(1),end:o},({i:m})=>{W(m.greaterThanEqual(r),()=>{$f()});const y=g(i.mul(g(m))).toVar();f.addAssign(n.element(m).mul(Fo({theta:y.mul(-1),axis:p,outputDirection:s,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:l,CUBEUV_MAX_MIP:d}))),f.addAssign(n.element(m).mul(Fo({theta:y,axis:p,outputDirection:s,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:l,CUBEUV_MAX_MIP:d})))}),O(f,1)}),mn=4,ll=[.125,.215,.35,.446,.526,.582],Ls=20,Po=new td(-1,1,1,-1,0,1),Cb=new mi(90,1),dl=new kt;let Lo=null,Do=0,Uo=0;const Fs=(1+Math.sqrt(5))/2,tn=1/Fs,hl=[new Y(-Fs,tn,0),new Y(Fs,tn,0),new Y(-tn,0,Fs),new Y(tn,0,Fs),new Y(0,Fs,-tn),new Y(0,Fs,tn),new Y(-1,1,-1),new Y(1,1,-1),new Y(-1,1,1),new Y(1,1,1)],Mb=new Y,Tm=new WeakMap,Bb=[3,1,5,0,4,2],Io=gm(ce(),Jt("faceIndex")).normalize(),sc=b(Io.x,Io.y,Io.z);class Fb{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,t=0,s=.1,n=100,r={}){const{size:i=256,position:a=Mb,renderTarget:u=null}=r;if(this._setSize(i),this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromScene() called before the backend is initialized. Try using .fromSceneAsync() instead.");const l=u||this._allocateTarget();return r.renderTarget=l,this.fromSceneAsync(e,t,s,n,r),l}Lo=this._renderer.getRenderTarget(),Do=this._renderer.getActiveCubeFace(),Uo=this._renderer.getActiveMipmapLevel();const c=u||this._allocateTarget();return c.depthBuffer=!0,this._init(c),this._sceneToCubeUV(e,s,n,c,a),t>0&&this._blur(c,0,0,t),this._applyPMREM(c),this._cleanup(c),c}async fromSceneAsync(e,t=0,s=.1,n=100,r={}){return this._hasInitialized===!1&&await this._renderer.init(),this.fromScene(e,t,s,n,r)}fromEquirectangular(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromEquirectangular() called before the backend is initialized. Try using .fromEquirectangularAsync() instead."),this._setSizeFromTexture(e);const s=t||this._allocateTarget();return this.fromEquirectangularAsync(e,s),s}return this._fromTexture(e,t)}async fromEquirectangularAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}fromCubemap(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromCubemap() called before the backend is initialized. Try using .fromCubemapAsync() instead."),this._setSizeFromTexture(e);const s=t||this._allocateTarget();return this.fromCubemapAsync(e,t),s}return this._fromTexture(e,t)}async fromCubemapAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=fl(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=ml(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===Ti||e.mapping===_i?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Lo,Do,Uo),e.scissorTest=!1,kr(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSizeFromTexture(e),Lo=this._renderer.getRenderTarget(),Do=this._renderer.getActiveCubeFace(),Uo=this._renderer.getActiveMipmapLevel();const s=t||this._allocateTarget();return this._init(s),this._textureToCubeUV(e,s),this._applyPMREM(s),this._cleanup(s),s}_allocateTarget(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize;return pl(e,t)}_init(e){if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e.width||this._pingPongRenderTarget.height!==e.height){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=pl(e.width,e.height);const{_lodMax:t}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=Pb(t)),this._blurMaterial=Lb(t,e.width,e.height)}}async _compileMaterial(e){const t=new gs(this._lodPlanes[0],e);await this._renderer.compile(t,Po)}_sceneToCubeUV(e,t,s,n,r){const i=Cb;i.near=t,i.far=s;const a=[1,1,1,1,-1,1],u=[1,-1,1,-1,1,-1],c=this._renderer,l=c.autoClear;c.getClearColor(dl),c.autoClear=!1;let d=this._backgroundBox;if(d===null){const m=new Ps({name:"PMREM.Background",side:Ze,depthWrite:!1,depthTest:!1});d=new gs(new Vd,m)}let p=!1;const f=e.background;f?f.isColor&&(d.material.color.copy(f),e.background=null,p=!0):(d.material.color.copy(dl),p=!0),c.setRenderTarget(n),c.clear(),p&&c.render(d,i);for(let m=0;m<6;m++){const y=m%3;y===0?(i.up.set(0,a[m],0),i.position.set(r.x,r.y,r.z),i.lookAt(r.x+u[m],r.y,r.z)):y===1?(i.up.set(0,0,a[m]),i.position.set(r.x,r.y,r.z),i.lookAt(r.x,r.y+u[m],r.z)):(i.up.set(0,a[m],0),i.position.set(r.x,r.y,r.z),i.lookAt(r.x,r.y,r.z+u[m]));const T=this._cubeSize;kr(n,y*T,m>2?T:0,T,T),c.render(e,i)}c.autoClear=l,e.background=f}_textureToCubeUV(e,t){const s=this._renderer,n=e.mapping===Ti||e.mapping===_i;n?this._cubemapMaterial===null&&(this._cubemapMaterial=fl(e)):this._equirectMaterial===null&&(this._equirectMaterial=ml(e));const r=n?this._cubemapMaterial:this._equirectMaterial;r.fragmentNode.value=e;const i=this._lodMeshes[0];i.material=r;const a=this._cubeSize;kr(t,0,0,3*a,2*a),s.setRenderTarget(t),s.render(i,Po)}_applyPMREM(e){const t=this._renderer,s=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let r=1;r<n;r++){const i=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=hl[(n-r-1)%hl.length];this._blur(e,r-1,r,i,a)}t.autoClear=s}_blur(e,t,s,n,r){const i=this._pingPongRenderTarget;this._halfBlur(e,i,t,s,n,"latitudinal",r),this._halfBlur(i,e,s,s,n,"longitudinal",r)}_halfBlur(e,t,s,n,r,i,a){const u=this._renderer,c=this._blurMaterial;i!=="latitudinal"&&i!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const l=3,d=this._lodMeshes[n];d.material=c;const p=Tm.get(c),f=this._sizeLods[s]-1,m=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Ls-1),y=r/m,T=isFinite(r)?1+Math.floor(l*y):Ls;T>Ls&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${T} samples when the maximum is set to ${Ls}`);const S=[];let R=0;for(let B=0;B<Ls;++B){const U=B/y,V=Math.exp(-U*U/2);S.push(V),B===0?R+=V:B<T&&(R+=2*V)}for(let B=0;B<S.length;B++)S[B]=S[B]/R;e.texture.frame=(e.texture.frame||0)+1,p.envMap.value=e.texture,p.samples.value=T,p.weights.array=S,p.latitudinal.value=i==="latitudinal"?1:0,a&&(p.poleAxis.value=a);const{_lodMax:w}=this;p.dTheta.value=m,p.mipInt.value=w-s;const L=this._sizeLods[n],F=3*L*(n>w-mn?n-w+mn:0),P=4*(this._cubeSize-L);kr(t,F,P,3*L,2*L),u.setRenderTarget(t),u.render(d,Po)}}function Pb(o){const e=[],t=[],s=[],n=[];let r=o;const i=o-mn+1+ll.length;for(let a=0;a<i;a++){const u=Math.pow(2,r);t.push(u);let c=1/u;a>o-mn?c=ll[a-o+mn-1]:a===0&&(c=0),s.push(c);const l=1/(u-2),d=-l,p=1+l,f=[d,d,p,d,p,p,d,d,p,p,d,p],m=6,y=6,T=3,S=2,R=1,w=new Float32Array(T*y*m),L=new Float32Array(S*y*m),F=new Float32Array(R*y*m);for(let B=0;B<m;B++){const U=B%3*2/3-1,V=B>2?0:-1,ee=[U,V,0,U+2/3,V,0,U+2/3,V+1,0,U,V,0,U+2/3,V+1,0,U,V+1,0],se=Bb[B];w.set(ee,T*y*se),L.set(f,S*y*se);const he=[se,se,se,se,se,se];F.set(he,R*y*se)}const P=new Ud;P.setAttribute("position",new si(w,T)),P.setAttribute("uv",new si(L,S)),P.setAttribute("faceIndex",new si(F,R)),e.push(P),n.push(new gs(P,null)),r>mn&&r--}return{lodPlanes:e,sizeLods:t,sigmas:s,lodMeshes:n}}function pl(o,e){const t={magFilter:ot,minFilter:ot,generateMipmaps:!1,type:Ke,format:At,colorSpace:Gd},s=new xs(o,e,t);return s.texture.mapping=ra,s.texture.name="PMREM.cubeUv",s.texture.isPMREMTexture=!0,s.scissorTest=!0,s}function kr(o,e,t,s,n){o.viewport.set(e,t,s,n),o.scissor.set(e,t,s,n)}function nc(o){const e=new Se;return e.depthTest=!1,e.depthWrite=!1,e.blending=lr,e.name=`PMREM_${o}`,e}function Lb(o,e,t){const s=ht(new Array(Ls).fill(0)),n=k(new Y(0,1,0)),r=k(0),i=g(Ls),a=k(0),u=k(1),c=K(null),l=k(0),d=g(1/e),p=g(1/t),f=g(o),m={n:i,latitudinal:a,weights:s,poleAxis:n,outputDirection:sc,dTheta:r,samples:u,envMap:c,mipInt:l,CUBEUV_TEXEL_WIDTH:d,CUBEUV_TEXEL_HEIGHT:p,CUBEUV_MAX_MIP:f},y=nc("blur");return y.fragmentNode=xm({...m,latitudinal:a.equal(1)}),Tm.set(y,m),y}function fl(o){const e=nc("cubemap");return e.fragmentNode=wn(o,sc),e}function ml(o){const e=nc("equirect");return e.fragmentNode=K(o,Qu(sc),0),e}const gl=new WeakMap;function Db(o){const e=Math.log2(o)-2,t=1/o;return{texelWidth:1/(3*Math.max(Math.pow(2,e),112)),texelHeight:t,maxMip:e}}function Ub(o,e,t){const s=Ib(e);let n=s.get(o);if((n!==void 0?n.pmremVersion:-1)!==o.pmremVersion){const i=o.image;if(o.isCubeTexture)if(Gb(i))n=t.fromCubemap(o,n);else return null;else if(Ob(i))n=t.fromEquirectangular(o,n);else return null;n.pmremVersion=o.pmremVersion,s.set(o,n)}return n.texture}function Ib(o){let e=gl.get(o);return e===void 0&&(e=new WeakMap,gl.set(o,e)),e}class Vb extends Be{static get type(){return"PMREMNode"}constructor(e,t=null,s=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=s,this._generator=null;const n=new br;n.isRenderTargetTexture=!0,this._texture=K(n),this._width=k(0),this._height=k(0),this._maxMip=k(0),this.updateBeforeType=q.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=Db(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(e){let t=this._pmrem;const s=t?t.pmremVersion:-1,n=this._value;s!==n.pmremVersion&&(n.isPMREMTexture===!0?t=n:t=Ub(n,e.renderer,this._generator),t!==null&&(this._pmrem=t,this.updateFromTexture(t)))}setup(e){this._generator===null&&(this._generator=new Fb(e.renderer)),this.updateBefore(e);let t=this.uvNode;t===null&&e.context.getUV&&(t=e.context.getUV(this)),t=Ou.mul(b(t.x,t.y.negate(),t.z));let s=this.levelNode;return s===null&&e.context.getTextureLevel&&(s=e.context.getTextureLevel(this)),ym(this._texture,t,s,this._width,this._height,this._maxMip)}dispose(){super.dispose(),this._generator!==null&&this._generator.dispose()}}function Gb(o){if(o==null)return!1;let e=0;const t=6;for(let s=0;s<t;s++)o[s]!==void 0&&e++;return e===t}function Ob(o){return o==null?!1:o.height>0}const rc=H(Vb).setParameterLength(1,3),yl=new WeakMap;class kb extends Pn{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let s=this.envNode;if(s.isTextureNode||s.isMaterialReferenceNode){const d=s.isTextureNode?s.value:t[s.property];let p=yl.get(d);p===void 0&&(p=rc(d),yl.set(d,p)),s=p}const r=t.useAnisotropy===!0||t.anisotropy>0?nf:ae,i=s.context(xl(Ft,r)).mul(li),a=s.context(zb(_s)).mul(Math.PI).mul(li),u=rr(i),c=rr(a);e.context.radiance.addAssign(u),e.context.iblIrradiance.addAssign(c);const l=e.context.lightingModel.clearcoatRadiance;if(l){const d=s.context(xl(gr,Vs)).mul(li),p=rr(d);l.addAssign(p)}}}const xl=(o,e)=>{let t=null;return{getUV:()=>(t===null&&(t=me.negate().reflect(e),t=o.mul(o).mix(t,e).normalize(),t=t.transformDirection(_t)),t),getTextureLevel:()=>o}},zb=o=>({getUV:()=>o,getTextureLevel:()=>g(1)}),$b=new Ty;class _m extends Se{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues($b),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return t===null&&e.environmentNode&&(t=e.environmentNode),t?new kb(t):null}setupLightingModel(){return new mm}setupSpecular(){const e=te(b(.04),ne.rgb,mr);je.assign(e),yr.assign(1)}setupVariants(){const e=this.metalnessNode?g(this.metalnessNode):hf;mr.assign(e);let t=this.roughnessNode?g(this.roughnessNode):df;t=Ju({roughness:t}),Ft.assign(t),this.setupSpecular(),ne.assign(O(ne.rgb.mul(e.oneMinus()),ne.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const Wb=new _y;class Hb extends _m{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(Wb),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){const e=this.iorNode?g(this.iorNode):Af;nr.assign(e),je.assign(te(Je(Ru(nr.sub(1).div(nr.add(1))).mul(lf),b(1)).mul(Da),ne.rgb,mr)),yr.assign(te(Da,1,mr))}setupLightingModel(){return new mm(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const t=this.clearcoatNode?g(this.clearcoatNode):ff,s=this.clearcoatRoughnessNode?g(this.clearcoatRoughnessNode):mf;vi.assign(t),gr.assign(Ju({roughness:s}))}if(this.useSheen){const t=this.sheenNode?b(this.sheenNode):xf,s=this.sheenRoughnessNode?g(this.sheenRoughnessNode):Tf;Is.assign(t),Hi.assign(s)}if(this.useIridescence){const t=this.iridescenceNode?g(this.iridescenceNode):bf,s=this.iridescenceIORNode?g(this.iridescenceIORNode):Nf,n=this.iridescenceThicknessNode?g(this.iridescenceThicknessNode):Sf;qi.assign(t),lu.assign(s),du.assign(n)}if(this.useAnisotropy){const t=(this.anisotropyNode?M(this.anisotropyNode):_f).toVar();is.assign(t.length()),W(is.equal(0),()=>{t.assign(M(1,0))}).Else(()=>{t.divAssign(M(is)),is.assign(is.saturate())}),Ri.assign(is.pow2().mix(Ft.pow2(),1)),sr.assign(Gs[0].mul(t.x).add(Gs[1].mul(t.y))),Hs.assign(Gs[1].mul(t.x).sub(Gs[0].mul(t.y)))}if(this.useTransmission){const t=this.transmissionNode?g(this.transmissionNode):vf,s=this.thicknessNode?g(this.thicknessNode):Rf,n=this.attenuationDistanceNode?g(this.attenuationDistanceNode):wf,r=this.attenuationColorNode?b(this.attenuationColorNode):Ef;if(wi.assign(t),hu.assign(s),pu.assign(n),fu.assign(r),this.useDispersion){const i=this.dispersionNode?g(this.dispersionNode):Lf;mu.assign(i)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?b(this.clearcoatNormalNode):gf}setup(e){e.context.setupClearcoatNormal=()=>bn(this.setupClearcoatNormal(e),"NORMAL","vec3"),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}const qb=N(({normal:o,lightDirection:e,builder:t})=>{const s=o.dot(e),n=M(s.mul(.5).add(.5),0);if(t.material.gradientMap){const r=jt("gradientMap","texture").context({getUV:()=>n});return b(r.r)}else{const r=n.fwidth().mul(.5);return te(b(.7),b(1),Vt(g(.7).sub(r.x),g(.7).add(r.x),n.x))}});class Xb extends co{direct({lightDirection:e,lightColor:t,reflectedLight:s},n){const r=qb({normal:no,lightDirection:e,builder:n}).mul(t);s.directDiffuse.addAssign(r.mul(js({diffuseColor:ne.rgb})))}indirect(e){const{ambientOcclusion:t,irradiance:s,reflectedLight:n}=e.context;n.indirectDiffuse.addAssign(s.mul(js({diffuseColor:ne}))),n.indirectDiffuse.mulAssign(t)}}const jb=new by;class Kb extends Se{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(jb),this.setValues(e)}setupLightingModel(){return new Xb}}const bm=N(()=>{const o=b(me.z,0,me.x.negate()).normalize(),e=me.cross(o);return M(o.dot(ae),e.dot(ae)).mul(.495).add(.5)}).once(["NORMAL","VERTEX"])().toVar("matcapUV"),Yb=new vy;class Qb extends Se{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(Yb),this.setValues(e)}setupVariants(e){const t=bm;let s;e.material.matcap?s=jt("matcap","texture").context({getUV:()=>t}):s=b(te(.2,.8,t.y)),ne.rgb.mulAssign(s.rgb)}}class Zb extends Be{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:s}=this;if(this.getNodeType(e)==="vec2"){const r=t.cos(),i=t.sin();return Wi(r,i,i.negate(),r).mul(s)}else{const r=t,i=Ws(O(1,0,0,0),O(0,Ht(r.x),rt(r.x).negate(),0),O(0,rt(r.x),Ht(r.x),0),O(0,0,0,1)),a=Ws(O(Ht(r.y),0,rt(r.y),0),O(0,1,0,0),O(rt(r.y).negate(),0,Ht(r.y),0),O(0,0,0,1)),u=Ws(O(Ht(r.z),rt(r.z).negate(),0,0),O(rt(r.z),Ht(r.z),0,0),O(0,0,1,0),O(0,0,0,1));return i.mul(a).mul(u).mul(O(s,1)).xyz}}}const Fr=H(Zb).setParameterLength(2),Jb=new Ey;class Nm extends Se{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.transparent=!0,this.setDefaultValues(Jb),this.setValues(e)}setupPositionView(e){const{object:t,camera:s}=e,n=this.sizeAttenuation,{positionNode:r,rotationNode:i,scaleNode:a}=this,u=Zs.mul(b(r||0));let c=M(ft[0].xyz.length(),ft[1].xyz.length());if(a!==null&&(c=c.mul(M(a))),n===!1)if(s.isPerspectiveCamera)c=c.mul(u.z.negate());else{const f=g(2).div(Qs.element(1).element(1));c=c.mul(f.mul(2))}let l=Cr.xy;if(t.center&&t.center.isVector2===!0){const f=tT("center","vec2",t);l=l.sub(f.sub(.5))}l=l.mul(c);const d=g(i||yf),p=Fr(l,d);return O(u.xy.add(p),u.zw)}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}const eN=new wy;class tN extends Nm{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.sizeNode=null,this.isPointsNodeMaterial=!0,this.setDefaultValues(eN),this.setValues(e)}setupPositionView(){const{positionNode:e}=this;return Zs.mul(b(e||be)).xyz}setupVertex(e){const t=super.setupVertex(e);if(e.material.isNodeMaterial!==!0)return t;const{rotationNode:s,scaleNode:n,sizeNode:r}=this,i=Cr.xy.toVar(),a=Nn.z.div(Nn.w);if(s&&s.isNode){const c=g(s);i.assign(Fr(i,c))}let u=r!==null?M(r):Pf;return this.sizeAttenuation===!0&&(u=u.mul(u.div(Ne.z.negate()))),n&&n.isNode&&(u=u.mul(M(n))),i.mulAssign(u.mul(2)),i.assign(i.div(Nn.z)),i.y.assign(i.y.mul(a)),i.assign(i.mul(t.w)),t.addAssign(O(i,0,0)),t}get alphaToCoverage(){return this._useAlphaToCoverage}set alphaToCoverage(e){this._useAlphaToCoverage!==e&&(this._useAlphaToCoverage=e,this.needsUpdate=!0)}}class sN extends co{constructor(){super(),this.shadowNode=g(1).toVar("shadowMask")}direct({lightNode:e}){e.shadowNode!==null&&this.shadowNode.mulAssign(e.shadowNode)}finish({context:e}){ne.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(ne.rgb)}}const nN=new Cy;class rN extends Se{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.transparent=!0,this.setDefaultValues(nN),this.setValues(e)}setupLightingModel(){return new sN}}Kt("vec3");Kt("vec3");Kt("vec3");class iN{constructor(e,t){this.nodes=e,this.info=t,this._context=typeof self<"u"?self:null,this._animationLoop=null,this._requestId=null}start(){const e=(t,s)=>{this._requestId=this._context.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this._animationLoop!==null&&this._animationLoop(t,s)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}getAnimationLoop(){return this._animationLoop}setAnimationLoop(e){this._animationLoop=e}getContext(){return this._context}setContext(e){this._context=e}dispose(){this.stop()}}class Et{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let s=0;s<e.length-1;s++)if(t=t.get(e[s]),t===void 0)return;return t.get(e[e.length-1])}set(e,t){let s=this.weakMap;for(let n=0;n<e.length-1;n++){const r=e[n];s.has(r)===!1&&s.set(r,new WeakMap),s=s.get(r)}return s.set(e[e.length-1],t),this}delete(e){let t=this.weakMap;for(let s=0;s<e.length-1;s++)if(t=t.get(e[s]),t===void 0)return!1;return t.delete(e[e.length-1])}}let oN=0;function aN(o){const e=Object.keys(o);let t=Object.getPrototypeOf(o);for(;t;){const s=Object.getOwnPropertyDescriptors(t);for(const n in s)if(s[n]!==void 0){const r=s[n];r&&typeof r.get=="function"&&e.push(n)}t=Object.getPrototypeOf(t)}return e}class uN{constructor(e,t,s,n,r,i,a,u,c,l){this.id=oN++,this._nodes=e,this._geometries=t,this.renderer=s,this.object=n,this.material=r,this.scene=i,this.camera=a,this.lightsNode=u,this.context=c,this.geometry=n.geometry,this.version=r.version,this.drawRange=null,this.attributes=null,this.attributesId=null,this.pipeline=null,this.group=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=l,this.clippingContextCacheKey=l!==null?l.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.onGeometryDispose=()=>{this.attributes=null,this.attributesId=null},this.material.addEventListener("dispose",this.onMaterialDispose),this.geometry.addEventListener("dispose",this.onGeometryDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return this.clippingContext===null||this.clippingContext.cacheKey===this.clippingContextCacheKey?!1:(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return this.material.hardwareClipping===!0?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().observer)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getBindingGroup(e){for(const t of this.getBindings())if(t.name===e)return t}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null,this.attributesId=null}getAttributes(){if(this.attributes!==null)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,s=[],n=new Set,r={};for(const i of e){let a;if(i.node&&i.node.attribute?a=i.node.attribute:(a=t.getAttribute(i.name),r[i.name]=a.version),a===void 0)continue;s.push(a);const u=a.isInterleavedBufferAttribute?a.data:a;n.add(u)}return this.attributes=s,this.attributesId=r,this.vertexBuffers=Array.from(n.values()),s}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:s,group:n,drawRange:r}=this,i=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),u=a!==null;let c=1;if(s.isInstancedBufferGeometry===!0?c=s.instanceCount:e.count!==void 0&&(c=Math.max(0,e.count)),c===0)return null;if(i.instanceCount=c,e.isBatchedMesh===!0)return i;let l=1;t.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(l=2);let d=r.start*l,p=(r.start+r.count)*l;n!==null&&(d=Math.max(d,n.start*l),p=Math.min(p,(n.start+n.count)*l));const f=s.attributes.position;let m=1/0;u?m=a.count:f!=null&&(m=f.count),d=Math.max(d,0),p=Math.min(p,m);const y=p-d;return y<0||y===1/0?null:(i.vertexCount=y,i.firstVertex=d,i)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const s of Object.keys(e.attributes).sort()){const n=e.attributes[s];t+=s+",",n.data&&(t+=n.data.stride+","),n.offset&&(t+=n.offset+","),n.itemSize&&(t+=n.itemSize+","),n.normalized&&(t+="n,")}for(const s of Object.keys(e.morphAttributes).sort()){const n=e.morphAttributes[s];t+="morph-"+s+",";for(let r=0,i=n.length;r<i;r++){const a=n[r];t+=a.id+","}}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t}=this;let s=t.customProgramCacheKey();for(const n of aN(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(n))continue;const r=t[n];let i;if(r!==null){const a=typeof r;a==="number"?i=r!==0?"1":"0":a==="object"?(i="{",r.isTexture&&(i+=r.mapping),i+="}"):i=String(r)}else i=String(r);s+=i+","}return s+=this.clippingContextCacheKey+",",e.geometry&&(s+=this.getGeometryCacheKey()),e.skeleton&&(s+=e.skeleton.bones.length+","),e.isBatchedMesh&&(s+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(s+=e._colorsTexture.uuid+",")),e.count>1&&(s+=e.uuid+","),s+=e.receiveShadow+",",Od(s)}get needsGeometryUpdate(){if(this.geometry.id!==this.object.geometry.id)return!0;if(this.attributes!==null){const e=this.attributesId;for(const t in e){const s=this.geometry.getAttribute(t);if(s===void 0||e[t]!==s.id)return!0}}return!1}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=0;return this.material.isShadowPassMaterial!==!0&&(e=this._nodes.getCacheKey(this.scene,this.lightsNode)),this.camera.isArrayCamera&&(e=bi(e,this.camera.cameras.length)),this.object.receiveShadow&&(e=bi(e,1)),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.geometry.removeEventListener("dispose",this.onGeometryDispose),this.onDispose()}}const Rs=[];class cN{constructor(e,t,s,n,r,i){this.renderer=e,this.nodes=t,this.geometries=s,this.pipelines=n,this.bindings=r,this.info=i,this.chainMaps={}}get(e,t,s,n,r,i,a,u){const c=this.getChainMap(u);Rs[0]=e,Rs[1]=t,Rs[2]=i,Rs[3]=r;let l=c.get(Rs);return l===void 0?(l=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,s,n,r,i,a,u),c.set(Rs,l)):(l.updateClipping(a),l.needsGeometryUpdate&&l.setGeometry(e.geometry),(l.version!==t.version||l.needsUpdate)&&(l.initialCacheKey!==l.getCacheKey()?(l.dispose(),l=this.get(e,t,s,n,r,i,a,u)):l.version=t.version)),Rs.length=0,l}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new Et)}dispose(){this.chainMaps={}}createRenderObject(e,t,s,n,r,i,a,u,c,l,d){const p=this.getChainMap(d),f=new uN(e,t,s,n,r,i,a,u,c,l);return f.onDispose=()=>{this.pipelines.delete(f),this.bindings.delete(f),this.nodes.delete(f),p.delete(f.getChainArray())},f}}class bs{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}delete(e){let t=null;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const mt={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},us=16,lN=211,dN=212;class hN extends bs{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return t!==null&&this.backend.destroyAttribute(e),t}update(e,t){const s=this.get(e);if(s.version===void 0)t===mt.VERTEX?this.backend.createAttribute(e):t===mt.INDEX?this.backend.createIndexAttribute(e):t===mt.STORAGE?this.backend.createStorageAttribute(e):t===mt.INDIRECT&&this.backend.createIndirectStorageAttribute(e),s.version=this._getBufferAttribute(e).version;else{const n=this._getBufferAttribute(e);(s.version<n.version||n.usage===dn)&&(this.backend.updateAttribute(e),s.version=n.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function Sm(o){return o.index!==null?o.index.version:o.attributes.position.version}function Tl(o){const e=[],t=o.index,s=o.attributes.position;if(t!==null){const r=t.array;for(let i=0,a=r.length;i<a;i+=3){const u=r[i+0],c=r[i+1],l=r[i+2];e.push(u,c,c,l,l,u)}}else{const r=s.array;for(let i=0,a=r.length/3-1;i<a;i+=3){const u=i+0,c=i+1,l=i+2;e.push(u,c,c,l,l,u)}}const n=new(ky(e)?Gy:Oy)(e,1);return n.version=Sm(o),n}class pN extends bs{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&this.get(t).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry,s=this.get(t);s.initialized=!0,this.info.memory.geometries++;const n=()=>{this.info.memory.geometries--;const r=t.index,i=e.getAttributes();r!==null&&this.attributes.delete(r);for(const u of i)this.attributes.delete(u);const a=this.wireframes.get(t);a!==void 0&&this.attributes.delete(a),t.removeEventListener("dispose",n)};t.addEventListener("dispose",n)}updateAttributes(e){const t=e.getAttributes();for(const r of t)r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute?this.updateAttribute(r,mt.STORAGE):this.updateAttribute(r,mt.VERTEX);const s=this.getIndex(e);s!==null&&this.updateAttribute(s,mt.INDEX);const n=e.geometry.indirect;n!==null&&this.updateAttribute(n,mt.INDIRECT)}updateAttribute(e,t){const s=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,t),this.attributeCall.set(e,s)):this.attributeCall.get(e.data)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e.data,s),this.attributeCall.set(e,s)):this.attributeCall.get(e)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e,s))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:s}=e;let n=t.index;if(s.wireframe===!0){const r=this.wireframes;let i=r.get(t);i===void 0?(i=Tl(t),r.set(t,i)):i.version!==Sm(t)&&(this.attributes.delete(i),i=Tl(t),r.set(t,i)),n=i}return n}}class fN{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0},this.compute={calls:0,frameCalls:0,timestamp:0},this.memory={geometries:0,textures:0}}update(e,t,s){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=s*(t/3):e.isPoints?this.render.points+=s*t:e.isLineSegments?this.render.lines+=s*(t/2):e.isLine?this.render.lines+=s*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}reset(){this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class vm{constructor(e){this.cacheKey=e,this.usedTimes=0}}class mN extends vm{constructor(e,t,s){super(e),this.vertexProgram=t,this.fragmentProgram=s}}class gN extends vm{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let yN=0;class Vo{constructor(e,t,s,n=null,r=null){this.id=yN++,this.code=e,this.stage=t,this.name=s,this.transforms=n,this.attributes=r,this.usedTimes=0}}class xN extends bs{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:s}=this,n=this.get(e);if(this._needsComputeUpdate(e)){const r=n.pipeline;r&&(r.usedTimes--,r.computeProgram.usedTimes--);const i=this.nodes.getForCompute(e);let a=this.programs.compute.get(i.computeShader);a===void 0&&(r&&r.computeProgram.usedTimes===0&&this._releaseProgram(r.computeProgram),a=new Vo(i.computeShader,"compute",e.name,i.transforms,i.nodeAttributes),this.programs.compute.set(i.computeShader,a),s.createProgram(a));const u=this._getComputeCacheKey(e,a);let c=this.caches.get(u);c===void 0&&(r&&r.usedTimes===0&&this._releasePipeline(r),c=this._getComputePipeline(e,a,u,t)),c.usedTimes++,a.usedTimes++,n.version=e.version,n.pipeline=c}return n.pipeline}getForRender(e,t=null){const{backend:s}=this,n=this.get(e);if(this._needsRenderUpdate(e)){const r=n.pipeline;r&&(r.usedTimes--,r.vertexProgram.usedTimes--,r.fragmentProgram.usedTimes--);const i=e.getNodeBuilderState(),a=e.material?e.material.name:"";let u=this.programs.vertex.get(i.vertexShader);u===void 0&&(r&&r.vertexProgram.usedTimes===0&&this._releaseProgram(r.vertexProgram),u=new Vo(i.vertexShader,"vertex",a),this.programs.vertex.set(i.vertexShader,u),s.createProgram(u));let c=this.programs.fragment.get(i.fragmentShader);c===void 0&&(r&&r.fragmentProgram.usedTimes===0&&this._releaseProgram(r.fragmentProgram),c=new Vo(i.fragmentShader,"fragment",a),this.programs.fragment.set(i.fragmentShader,c),s.createProgram(c));const l=this._getRenderCacheKey(e,u,c);let d=this.caches.get(l);d===void 0?(r&&r.usedTimes===0&&this._releasePipeline(r),d=this._getRenderPipeline(e,u,c,l,t)):e.pipeline=d,d.usedTimes++,u.usedTimes++,c.usedTimes++,n.pipeline=d}return n.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,t.usedTimes===0&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,t.computeProgram.usedTimes===0&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,t.vertexProgram.usedTimes===0&&this._releaseProgram(t.vertexProgram),t.fragmentProgram.usedTimes===0&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,s,n){s=s||this._getComputeCacheKey(e,t);let r=this.caches.get(s);return r===void 0&&(r=new gN(s,t),this.caches.set(s,r),this.backend.createComputePipeline(r,n)),r}_getRenderPipeline(e,t,s,n,r){n=n||this._getRenderCacheKey(e,t,s);let i=this.caches.get(n);return i===void 0&&(i=new mN(n,t,s),this.caches.set(n,i),e.pipeline=i,this.backend.createRenderPipeline(e,r)),i}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,s){return t.id+","+s.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,s=e.stage;this.programs[s].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return t.pipeline===void 0||t.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}}class TN extends bs{constructor(e,t,s,n,r,i){super(),this.backend=e,this.textures=s,this.pipelines=r,this.attributes=n,this.nodes=t,this.info=i,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const s of t){const n=this.get(s);n.bindGroup===void 0&&(this._init(s),this.backend.createBindings(s,t,0),n.bindGroup=s)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const s of t){const n=this.get(s);n.bindGroup===void 0&&(this._init(s),this.backend.createBindings(s,t,0),n.bindGroup=s)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const s=t.attribute,n=s.isIndirectStorageBufferAttribute?mt.INDIRECT:mt.STORAGE;this.attributes.update(s,n)}}_update(e,t){const{backend:s}=this;let n=!1,r=!0,i=0,a=0;for(const u of e.bindings)if(!(u.isNodeUniformsGroup&&this.nodes.updateGroup(u)===!1)){if(u.isStorageBuffer){const c=u.attribute,l=c.isIndirectStorageBufferAttribute?mt.INDIRECT:mt.STORAGE;this.attributes.update(c,l)}if(u.isUniformBuffer)u.update()&&s.updateBinding(u);else if(u.isSampledTexture){const c=u.update(),l=u.texture,d=this.textures.get(l);if(c&&(this.textures.updateTexture(l),u.generation!==d.generation&&(u.generation=d.generation,n=!0)),s.get(l).externalTexture!==void 0||d.isDefaultTexture?r=!1:(i=i*10+l.id,a+=l.version),l.isStorageTexture===!0){const f=this.get(l);u.store===!0?f.needsMipmap=!0:this.textures.needsMipmaps(l)&&f.needsMipmap===!0&&(this.backend.generateMipmaps(l),f.needsMipmap=!1)}}else u.isSampler&&u.update()}n===!0&&this.backend.updateBindings(e,t,r?i:0,a)}}function _N(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.z!==e.z?o.z-e.z:o.id-e.id}function _l(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.z!==e.z?e.z-o.z:o.id-e.id}function bl(o){return(o.transmission>0||o.transmissionNode)&&o.side===Os&&o.forceSinglePass===!1}class bN{constructor(e,t,s){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,s),this.lightsArray=[],this.scene=t,this.camera=s,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,s,n,r,i,a){let u=this.renderItems[this.renderItemsIndex];return u===void 0?(u={id:e.id,object:e,geometry:t,material:s,groupOrder:n,renderOrder:e.renderOrder,z:r,group:i,clippingContext:a},this.renderItems[this.renderItemsIndex]=u):(u.id=e.id,u.object=e,u.geometry=t,u.material=s,u.groupOrder=n,u.renderOrder=e.renderOrder,u.z=r,u.group=i,u.clippingContext=a),this.renderItemsIndex++,u}push(e,t,s,n,r,i,a){const u=this.getNextRenderItem(e,t,s,n,r,i,a);e.occlusionTest===!0&&this.occlusionQueryCount++,s.transparent===!0||s.transmission>0?(bl(s)&&this.transparentDoublePass.push(u),this.transparent.push(u)):this.opaque.push(u)}unshift(e,t,s,n,r,i,a){const u=this.getNextRenderItem(e,t,s,n,r,i,a);s.transparent===!0||s.transmission>0?(bl(s)&&this.transparentDoublePass.unshift(u),this.transparent.unshift(u)):this.opaque.unshift(u)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||_N),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||_l),this.transparent.length>1&&this.transparent.sort(t||_l)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const s=this.renderItems[e];if(s.id===null)break;s.id=null,s.object=null,s.geometry=null,s.material=null,s.groupOrder=null,s.renderOrder=null,s.z=null,s.group=null,s.clippingContext=null}}}const In=[];class NN{constructor(e){this.lighting=e,this.lists=new Et}get(e,t){const s=this.lists;In[0]=e,In[1]=t;let n=s.get(In);return n===void 0&&(n=new bN(this.lighting,e,t),s.set(In,n)),In.length=0,n}dispose(){this.lists=new Et}}let SN=0;class vN{constructor(){this.id=SN++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new fe,this.scissor=!1,this.scissorValue=new fe,this.renderTarget=null,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.activeMipmapLevel=0,this.sampleCount=1,this.width=0,this.height=0,this.occlusionQueryCount=0,this.clippingContext=null,this.isRenderContext=!0}getCacheKey(){return Rm(this)}}function Rm(o){const{textures:e,activeCubeFace:t}=o,s=[t];for(const n of e)s.push(n.id);return Gi(s)}const Vn=[],RN=new ja,AN=new uy;class wN{constructor(){this.chainMaps={}}get(e,t,s=null){Vn[0]=e,Vn[1]=t;let n;if(s===null)n="default";else{const a=s.texture.format;n=`${s.textures.length}:${a}:${s.samples}:${s.depthBuffer}:${s.stencilBuffer}`}const r=this._getChainMap(n);let i=r.get(Vn);return i===void 0&&(i=new vN,r.set(Vn,i)),Vn.length=0,s!==null&&(i.sampleCount=s.samples===0?1:s.samples),i}getForClear(e=null){return this.get(RN,AN,e)}_getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new Et)}dispose(){this.chainMaps={}}}const EN=new Y;class CN extends bs{constructor(e,t,s){super(),this.renderer=e,this.backend=t,this.info=s}updateRenderTarget(e,t=0){const s=this.get(e),n=e.samples===0?1:e.samples,r=s.depthTextureMips||(s.depthTextureMips={}),i=e.textures,a=this.getSize(i[0]),u=a.width>>t,c=a.height>>t;let l=e.depthTexture||r[t];const d=e.depthBuffer===!0||e.stencilBuffer===!0;let p=!1;l===void 0&&d&&(l=new wt,l.format=e.stencilBuffer?hs:ps,l.type=e.stencilBuffer?ds:Ce,l.image.width=u,l.image.height=c,l.image.depth=a.depth,l.isArrayTexture=e.multiview===!0&&a.depth>1,r[t]=l),(s.width!==a.width||a.height!==s.height)&&(p=!0,l&&(l.needsUpdate=!0,l.image.width=u,l.image.height=c,l.image.depth=l.isArrayTexture?l.image.depth:1)),s.width=a.width,s.height=a.height,s.textures=i,s.depthTexture=l||null,s.depth=e.depthBuffer,s.stencil=e.stencilBuffer,s.renderTarget=e,s.sampleCount!==n&&(p=!0,l&&(l.needsUpdate=!0),s.sampleCount=n);const f={sampleCount:n};if(e.isXRRenderTarget!==!0){for(let m=0;m<i.length;m++){const y=i[m];p&&(y.needsUpdate=!0),this.updateTexture(y,f)}l&&this.updateTexture(l,f)}if(s.initialized!==!0){s.initialized=!0;const m=()=>{e.removeEventListener("dispose",m);for(let y=0;y<i.length;y++)this._destroyTexture(i[y]);l&&this._destroyTexture(l),this.delete(e)};e.addEventListener("dispose",m)}}updateTexture(e,t={}){const s=this.get(e);if(s.initialized===!0&&s.version===e.version)return;const n=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,r=this.backend;if(n&&s.initialized===!0&&(r.destroySampler(e),r.destroyTexture(e)),e.isFramebufferTexture){const c=this.renderer.getRenderTarget();c?e.type=c.texture.type:e.type=it}const{width:i,height:a,depth:u}=this.getSize(e);if(t.width=i,t.height=a,t.depth=u,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,i,a):1,n||e.isStorageTexture===!0)r.createSampler(e),r.createTexture(e,t),s.generation=e.version;else if(s.initialized!==!0&&r.createSampler(e),e.version>0){const l=e.image;if(l===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(l.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const d=[];for(const p of e.images)d.push(p);t.images=d}else t.image=l;(s.isDefaultTexture===void 0||s.isDefaultTexture===!0)&&(r.createTexture(e,t),s.isDefaultTexture=!1,s.generation=e.version),e.source.dataReady===!0&&r.updateTexture(e,t),t.needsMipmaps&&e.mipmaps.length===0&&r.generateMipmaps(e)}}else r.createDefaultTexture(e),s.isDefaultTexture=!0,s.generation=e.version;if(s.initialized!==!0){s.initialized=!0,s.generation=e.version,this.info.memory.textures++;const c=()=>{e.removeEventListener("dispose",c),this._destroyTexture(e)};e.addEventListener("dispose",c)}s.version=e.version}getSize(e,t=EN){let s=e.images?e.images[0]:e.image;return s?(s.image!==void 0&&(s=s.image),s instanceof HTMLVideoElement?(t.width=s.videoWidth||1,t.height=s.videoHeight||1,t.depth=1):s instanceof VideoFrame?(t.width=s.displayWidth||1,t.height=s.displayHeight||1,t.depth=1):(t.width=s.width||1,t.height=s.height||1,t.depth=e.isCubeTexture?6:s.depth||1)):t.width=t.height=t.depth=1,t}getMipLevels(e,t,s){let n;return e.isCompressedTexture?e.mipmaps?n=e.mipmaps.length:n=1:n=Math.floor(Math.log2(Math.max(t,s)))+1,n}needsMipmaps(e){return e.isCompressedTexture===!0||e.generateMipmaps}_destroyTexture(e){this.has(e)===!0&&(this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e),this.info.memory.textures--)}}class ic extends kt{constructor(e,t,s,n=1){super(e,t,s),this.a=n}set(e,t,s,n=1){return this.a=n,super.set(e,t,s)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class Am extends ie{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}const MN=(o,e)=>C(new Am(o,e));class BN extends z{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this._expressionNode=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}getMemberType(e,t){return this.outputNode?this.outputNode.getMemberType(e,t):"void"}add(e){return this.nodes.push(e),this}If(e,t){const s=new fn(t);return this._currentCond=Ie(e,s),this.add(this._currentCond)}ElseIf(e,t){const s=new fn(t),n=Ie(e,s);return this._currentCond.elseNode=n,this._currentCond=n,this}Else(e){return this._currentCond.elseNode=new fn(e),this}Switch(e){return this._expressionNode=C(e),this}Case(...e){const t=[];if(e.length>=2)for(let a=0;a<e.length-1;a++)t.push(this._expressionNode.equal(C(e[a])));else throw new Error("TSL: Invalid parameter length. Case() requires at least two parameters.");const s=e[e.length-1],n=new fn(s);let r=t[0];for(let a=1;a<t.length;a++)r=r.or(t[a]);const i=Ie(r,n);return this._currentCond===null?(this._currentCond=i,this.add(this._currentCond)):(this._currentCond.elseNode=i,this._currentCond=i,this)}Default(e){return this.Else(e),this}setup(e){const t=e.getNodeProperties(this);let s=0;for(const n of this.getChildren())n.isVarNode&&n.intent===!0&&e.getNodeProperties(n).assign!==!0||(t["node"+s++]=n);return t.outputNode||null}build(e,...t){const s=e.currentStack,n=zi();pr(this),e.currentStack=this;const r=e.buildStage;for(const a of this.nodes)if(!(a.isVarNode&&a.intent===!0&&e.getNodeProperties(a).assign!==!0)){if(r==="setup")a.build(e);else if(r==="analyze")a.build(e,this);else if(r==="generate"){const u=e.getDataFromNode(a,"any").stages,c=u&&u[e.shaderStage];if(a.isVarNode&&c&&c.length===1&&c[0]&&c[0].isStackNode)continue;a.build(e,"void")}}const i=this.outputNode?this.outputNode.build(e,...t):super.build(e,...t);return pr(n),e.currentStack=s,i}}const hi=H(BN).setParameterLength(0,1);function FN(o){return Object.entries(o).map(([e,t])=>typeof t=="string"?{name:e,type:t,atomic:!1}:{name:e,type:t.type,atomic:t.atomic||!1})}class PN extends z{static get type(){return"StructTypeNode"}constructor(e,t=null){super("struct"),this.membersLayout=FN(e),this.name=t,this.isStructLayoutNode=!0}getLength(){const t=Float32Array.BYTES_PER_ELEMENT;let s=0;for(const n of this.membersLayout){const r=n.type,i=mx(r)*t,a=gx(r),u=s%8,c=u%a,l=u+c;s+=c,l!==0&&8-l<i&&(s+=8-l),s+=i}return Math.ceil(s/8)*8/t}getMemberType(e,t){const s=this.membersLayout.find(n=>n.name===t);return s?s.type:"void"}getNodeType(e){return e.getStructTypeFromNode(this,this.membersLayout,this.name).name}setup(e){e.addInclude(this)}generate(e){return this.getNodeType(e)}}class LN extends z{static get type(){return"StructNode"}constructor(e,t){super("vec3"),this.structLayoutNode=e,this.values=t,this.isStructNode=!0}getNodeType(e){return this.structLayoutNode.getNodeType(e)}getMemberType(e,t){return this.structLayoutNode.getMemberType(e,t)}generate(e){const t=e.getVarFromNode(this),s=t.type,n=e.getPropertyName(t);return e.addLineFlowCode(`${n} = ${e.generateStruct(s,this.structLayoutNode.membersLayout,this.values)}`,this),t.name}}const DN=(o,e=null)=>{const t=new PN(o,e),s=(...n)=>{let r=null;if(n.length>0)if(n[0].isNode){r={};const i=Object.keys(o);for(let a=0;a<n.length;a++)r[i[a]]=n[a]}else r=n[0];return C(new LN(t,r))};return s.layout=t,s.isStruct=!0,s};class wm extends z{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}getNodeType(e){const t=e.getNodeProperties(this);if(t.membersLayout===void 0){const s=this.members,n=[];for(let r=0;r<s.length;r++){const i="m"+r,a=s[r].getNodeType(e);n.push({name:i,type:a,index:r})}t.membersLayout=n,t.structType=e.getOutputStructTypeFromNode(this,t.membersLayout)}return t.structType.name}generate(e){const t=e.getOutputStructName(),s=this.members,n=t!==""?t+".":"";for(let r=0;r<s.length;r++){const i=s[r].build(e);e.addLineFlowCode(`${n}m${r} = ${i}`,this)}return t}}const UN=H(wm);function Em(o,e){for(let t=0;t<o.length;t++)if(o[t].name===e)return t;return-1}class IN extends wm{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return this.outputNodes[e]!==void 0}get(e){return this.outputNodes[e]}merge(e){const t={...this.outputNodes,...e.outputNodes};return Cm(t)}setup(e){const t=this.outputNodes,s=e.renderer.getRenderTarget(),n=[],r=s.textures;for(const i in t){const a=Em(r,i);n[a]=O(t[i])}return this.members=n,super.setup(e)}}const Cm=H(IN),VN=N(([o])=>{const e=o.toUint().mul(747796405).add(2891336453),t=e.shiftRight(e.shiftRight(28).add(4)).bitXor(e).mul(277803737);return t.shiftRight(22).bitXor(t).toFloat().mul(1/2**32)}),ka=(o,e)=>pt(X(4,o.mul(Q(1,o))),e),GN=(o,e)=>o.lessThan(.5)?ka(o.mul(2),e).div(2):Q(1,ka(X(Q(1,o),2),e).div(2)),ON=(o,e,t)=>pt(at(pt(o,e),Re(pt(o,e),pt(Q(1,o),t))),1/e),kN=(o,e)=>rt(Ei.mul(e.mul(o).sub(1))).div(Ei.mul(e.mul(o).sub(1))),qt=N(([o])=>o.fract().sub(.5).abs()).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),zN=N(([o])=>b(qt(o.z.add(qt(o.y.mul(1)))),qt(o.z.add(qt(o.x.mul(1)))),qt(o.y.add(qt(o.x.mul(1)))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),$N=N(([o,e,t])=>{const s=b(o).toVar(),n=g(1.4).toVar(),r=g(0).toVar(),i=b(s).toVar();return ue({start:g(0),end:g(3),type:"float",condition:"<="},()=>{const a=b(zN(i.mul(2))).toVar();s.addAssign(a.add(t.mul(g(.1).mul(e)))),i.mulAssign(1.8),n.mulAssign(1.5),s.mulAssign(1.2);const u=g(qt(s.z.add(qt(s.x.add(qt(s.y)))))).toVar();r.addAssign(u.div(n)),i.addAssign(.14)}),r}).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"position",type:"vec3"},{name:"speed",type:"float"},{name:"time",type:"float"}]});class WN extends z{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){const t=this.parametersNodes;let s=this._candidateFnCall;if(s===null){let n=null,r=-1;for(const i of this.functionNodes){const u=i.shaderNode.layout;if(u===null)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const c=u.inputs;if(t.length===c.length){let l=0;for(let d=0;d<t.length;d++){const p=t[d],f=c[d];p.getNodeType(e)===f.type?l++:l=0}l>r&&(n=i,r=l)}}this._candidateFnCall=s=n(...t)}return s}}const HN=H(WN),ke=o=>(...e)=>HN(o,...e),Ns=k(0).setGroup($).onRenderUpdate(o=>o.time),Mm=k(0).setGroup($).onRenderUpdate(o=>o.deltaTime),Bm=k(0,"uint").setGroup($).onRenderUpdate(o=>o.frameId),qN=(o=1)=>(console.warn('TSL: timerLocal() is deprecated. Use "time" instead.'),Ns.mul(o)),XN=(o=1)=>(console.warn('TSL: timerGlobal() is deprecated. Use "time" instead.'),Ns.mul(o)),jN=(o=1)=>(console.warn('TSL: timerDelta() is deprecated. Use "deltaTime" instead.'),Mm.mul(o)),KN=(o=Ns)=>o.add(.75).mul(Math.PI*2).sin().mul(.5).add(.5),YN=(o=Ns)=>o.fract().round(),QN=(o=Ns)=>o.add(.5).fract().mul(2).sub(1).abs(),ZN=(o=Ns)=>o.fract(),JN=N(([o,e,t=M(.5)])=>Fr(o.sub(t),e).add(t)),eS=N(([o,e,t=M(.5)])=>{const s=o.sub(t),n=s.dot(s),i=n.mul(n).mul(e);return o.add(s.mul(i))}),tS=N(({position:o=null,horizontal:e=!0,vertical:t=!1})=>{let s;o!==null?(s=ft.toVar(),s[3][0]=o.x,s[3][1]=o.y,s[3][2]=o.z):s=ft;const n=_t.mul(s);return hr(e)&&(n[0][0]=ft[0].length(),n[0][1]=0,n[0][2]=0),hr(t)&&(n[1][0]=0,n[1][1]=ft[1].length(),n[1][2]=0),n[2][0]=0,n[2][1]=0,n[2][2]=1,Qs.mul(n).mul(be)}),sS=N(([o=null])=>{const e=Bi();return Bi(Xu(o)).sub(e).lessThan(0).select(Yt,o)});class nS extends z{static get type(){return"SpriteSheetUVNode"}constructor(e,t=ce(),s=g(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=s}setup(){const{frameNode:e,uvNode:t,countNode:s}=this,{width:n,height:r}=s,i=e.mod(n.mul(r)).floor(),a=i.mod(n),u=r.sub(i.add(1).div(n).ceil()),c=s.reciprocal(),l=M(a,u);return t.add(l).mul(c)}}const rS=H(nS).setParameterLength(3),Fm=N(([o,e=null,t=null,s=g(1),n=be,r=et])=>{let i=r.abs().normalize();i=i.div(i.dot(b(1)));const a=n.yz.mul(s),u=n.zx.mul(s),c=n.xy.mul(s),l=o.value,d=e!==null?e.value:l,p=t!==null?t.value:l,f=K(l,a).mul(i.x),m=K(d,u).mul(i.y),y=K(p,c).mul(i.z);return Re(f,m,y)}),iS=(...o)=>Fm(...o),sn=new sd,As=new Y,nn=new Y,Go=new Y,Gn=new Ue,zr=new Y(0,0,-1),Mt=new fe,On=new Y,$r=new Y,kn=new fe,Wr=new $e,Fi=new xs,oS=Yt.flipX();Fi.depthTexture=new wt(1,1);let Hr=!1;class oc extends Gt{static get type(){return"ReflectorNode"}constructor(e={}){super(e.defaultTexture||Fi.texture,oS),this._reflectorBaseNode=e.reflector||new aS(this,e),this._depthNode=null,this.setUpdateMatrix(!1)}get reflector(){return this._reflectorBaseNode}get target(){return this._reflectorBaseNode.target}getDepthNode(){if(this._depthNode===null){if(this._reflectorBaseNode.depth!==!0)throw new Error("THREE.ReflectorNode: Depth node can only be requested when the reflector is created with { depth: true }. ");this._depthNode=C(new oc({defaultTexture:Fi.depthTexture,reflector:this._reflectorBaseNode}))}return this._depthNode}setup(e){return e.object.isQuadMesh||this._reflectorBaseNode.build(e),super.setup(e)}clone(){const e=new this.constructor(this.reflectorNode);return e.uvNode=this.uvNode,e.levelNode=this.levelNode,e.biasNode=this.biasNode,e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e._reflectorBaseNode=this._reflectorBaseNode,e}dispose(){super.dispose(),this._reflectorBaseNode.dispose()}}class aS extends z{static get type(){return"ReflectorBaseNode"}constructor(e,t={}){super();const{target:s=new ax,resolution:n=1,generateMipmaps:r=!1,bounces:i=!0,depth:a=!1}=t;this.textureNode=e,this.target=s,this.resolution=n,this.generateMipmaps=r,this.bounces=i,this.depth=a,this.updateBeforeType=i?q.RENDER:q.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new Map,this.forceUpdate=!1,this.hasOutput=!1}_updateResolution(e,t){const s=this.resolution;t.getDrawingBufferSize(Wr),e.setSize(Math.round(Wr.width*s),Math.round(Wr.height*s))}setup(e){return this._updateResolution(Fi,e.renderer),super.setup(e)}dispose(){super.dispose();for(const e of this.renderTargets.values())e.dispose()}getVirtualCamera(e){let t=this.virtualCameras.get(e);return t===void 0&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return t===void 0&&(t=new xs(0,0,{type:Ke}),this.generateMipmaps===!0&&(t.texture.minFilter=ux,t.texture.generateMipmaps=!0),this.depth===!0&&(t.depthTexture=new wt),this.renderTargets.set(e,t)),t}updateBefore(e){if(this.bounces===!1&&Hr)return!1;Hr=!0;const{scene:t,camera:s,renderer:n,material:r}=e,{target:i}=this,a=this.getVirtualCamera(s),u=this.getRenderTarget(a);n.getDrawingBufferSize(Wr),this._updateResolution(u,n),nn.setFromMatrixPosition(i.matrixWorld),Go.setFromMatrixPosition(s.matrixWorld),Gn.extractRotation(i.matrixWorld),As.set(0,0,1),As.applyMatrix4(Gn),On.subVectors(nn,Go);const c=On.dot(As)>0;let l=!1;if(c===!0&&this.forceUpdate===!1){if(this.hasOutput===!1){Hr=!1;return}l=!0}On.reflect(As).negate(),On.add(nn),Gn.extractRotation(s.matrixWorld),zr.set(0,0,-1),zr.applyMatrix4(Gn),zr.add(Go),$r.subVectors(nn,zr),$r.reflect(As).negate(),$r.add(nn),a.coordinateSystem=s.coordinateSystem,a.position.copy(On),a.up.set(0,1,0),a.up.applyMatrix4(Gn),a.up.reflect(As),a.lookAt($r),a.near=s.near,a.far=s.far,a.updateMatrixWorld(),a.projectionMatrix.copy(s.projectionMatrix),sn.setFromNormalAndCoplanarPoint(As,nn),sn.applyMatrix4(a.matrixWorldInverse),Mt.set(sn.normal.x,sn.normal.y,sn.normal.z,sn.constant);const d=a.projectionMatrix;kn.x=(Math.sign(Mt.x)+d.elements[8])/d.elements[0],kn.y=(Math.sign(Mt.y)+d.elements[9])/d.elements[5],kn.z=-1,kn.w=(1+d.elements[10])/d.elements[14],Mt.multiplyScalar(1/Mt.dot(kn));const p=0;d.elements[2]=Mt.x,d.elements[6]=Mt.y,d.elements[10]=n.coordinateSystem===Mn?Mt.z-p:Mt.z+1-p,d.elements[14]=Mt.w,this.textureNode.value=u.texture,this.depth===!0&&(this.textureNode.getDepthNode().value=u.depthTexture),r.visible=!1;const f=n.getRenderTarget(),m=n.getMRT(),y=n.autoClear;n.setMRT(null),n.setRenderTarget(u),n.autoClear=!0,l?(n.clear(),this.hasOutput=!1):(n.render(t,a),this.hasOutput=!0),n.setMRT(m),n.setRenderTarget(f),n.autoClear=y,r.visible=!0,Hr=!1,this.forceUpdate=!1}}const uS=o=>C(new oc(o)),Oo=new td(-1,1,1,-1,0,1);class cS extends Ud{constructor(e=!1){super();const t=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new Dc([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Dc(t,2))}}const lS=new cS;class ho extends gs{constructor(e=null){super(lS,e),this.camera=Oo,this.isQuadMesh=!0}async renderAsync(e){return e.renderAsync(this,Oo)}render(e){e.render(this,Oo)}}const dS=new $e;class hS extends Gt{static get type(){return"RTTNode"}constructor(e,t=null,s=null,n={type:Ke}){const r=new xs(t,s,n);super(r.texture,ce()),this.isRTTNode=!0,this.node=e,this.width=t,this.height=s,this.pixelRatio=1,this.renderTarget=r,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this._rttNode=null,this._quadMesh=new ho(new Se),this.updateBeforeType=q.RENDER}get autoResize(){return this.width===null}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const s=e*this.pixelRatio,n=t*this.pixelRatio;this.renderTarget.setSize(s,n),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(this.textureNeedsUpdate===!1&&this.autoUpdate===!1)return;if(this.textureNeedsUpdate=!1,this.autoResize===!0){const s=e.getPixelRatio(),n=e.getSize(dS),r=n.width*s,i=n.height*s;(r!==this.renderTarget.width||i!==this.renderTarget.height)&&(this.renderTarget.setSize(r,i),this.textureNeedsUpdate=!0)}this._quadMesh.material.fragmentNode=this._rttNode;const t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){const e=new Gt(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}const Pm=(o,...e)=>C(new hS(C(o),...e)),pS=(o,...e)=>o.isTextureNode?o:o.isPassNode?o.getTextureNode():Pm(o,...e),ln=N(([o,e,t],s)=>{let n;s.renderer.coordinateSystem===Mn?(o=M(o.x,o.y.oneMinus()).mul(2).sub(1),n=O(b(o,e),1)):n=O(b(o.x,o.y.oneMinus(),e).mul(2).sub(1),1);const r=O(t.mul(n));return r.xyz.div(r.w)}),fS=N(([o,e])=>{const t=e.mul(O(o,1)),s=t.xy.div(t.w).mul(.5).add(.5).toVar();return M(s.x,s.y.oneMinus())}),mS=N(([o,e,t])=>{const s=fs(_e(e)),n=Pe(o.mul(s)).toVar(),r=_e(e,n).toVar(),i=_e(e,n.sub(Pe(2,0))).toVar(),a=_e(e,n.sub(Pe(1,0))).toVar(),u=_e(e,n.add(Pe(1,0))).toVar(),c=_e(e,n.add(Pe(2,0))).toVar(),l=_e(e,n.add(Pe(0,2))).toVar(),d=_e(e,n.add(Pe(0,1))).toVar(),p=_e(e,n.sub(Pe(0,1))).toVar(),f=_e(e,n.sub(Pe(0,2))).toVar(),m=de(Q(g(2).mul(a).sub(i),r)).toVar(),y=de(Q(g(2).mul(u).sub(c),r)).toVar(),T=de(Q(g(2).mul(d).sub(l),r)).toVar(),S=de(Q(g(2).mul(p).sub(f),r)).toVar(),R=ln(o,r,t).toVar(),w=m.lessThan(y).select(R.sub(ln(o.sub(M(g(1).div(s.x),0)),a,t)),R.negate().add(ln(o.add(M(g(1).div(s.x),0)),u,t))),L=T.lessThan(S).select(R.sub(ln(o.add(M(0,g(1).div(s.y))),d,t)),R.negate().add(ln(o.sub(M(0,g(1).div(s.y))),p,t)));return Qt(Zi(w,L))});class gS extends z{static get type(){return"SampleNode"}constructor(e){super(),this.callback=e,this.isSampleNode=!0}setup(){return this.sample(ce())}sample(e){return this.callback(e)}}const yS=o=>C(new gS(o));class ys extends z{static get type(){return"EventNode"}constructor(e,t){super("void"),this.eventType=e,this.callback=t,e===ys.OBJECT?this.updateType=q.OBJECT:e===ys.MATERIAL&&(this.updateType=q.RENDER)}update(e){this.callback(e)}}ys.OBJECT="object";ys.MATERIAL="material";const Lm=(o,e)=>C(new ys(o,e)).toStack(),xS=o=>Lm(ys.OBJECT,o),TS=o=>Lm(ys.MATERIAL,o);class _S extends Tn{constructor(e,t,s=Float32Array){const n=ArrayBuffer.isView(e)?e:new s(e*t);super(n,t),this.isStorageInstancedBufferAttribute=!0}}class bS extends si{constructor(e,t,s=Float32Array){const n=ArrayBuffer.isView(e)?e:new s(e*t);super(n,t),this.isStorageBufferAttribute=!0}}const NS=(o,e="float")=>{let t,s;e.isStruct===!0?(t=e.layout.getLength(),s=Si("float")):(t=$d(e),s=Si(e));const n=new bS(o,t,s);return qs(n,e,o)},SS=(o,e="float")=>{let t,s;e.isStruct===!0?(t=e.layout.getLength(),s=Si("float")):(t=$d(e),s=Si(e));const n=new _S(o,t,s);return qs(n,e,o)};class vS extends z{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const RS=D(vS),zn=new ed,ko=new Ue;class Qe extends z{static get type(){return"SceneNode"}constructor(e=Qe.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,s=this.scene!==null?this.scene:e.scene;let n;return t===Qe.BACKGROUND_BLURRINESS?n=le("backgroundBlurriness","float",s):t===Qe.BACKGROUND_INTENSITY?n=le("backgroundIntensity","float",s):t===Qe.BACKGROUND_ROTATION?n=k("mat4").setName("backgroundRotation").setGroup($).onRenderUpdate(()=>{const r=s.background;return r!==null&&r.isTexture&&r.mapping!==Iy?(zn.copy(s.backgroundRotation),zn.x*=-1,zn.y*=-1,zn.z*=-1,ko.makeRotationFromEuler(zn)):ko.identity(),ko}):console.error("THREE.SceneNode: Unknown scope:",t),n}}Qe.BACKGROUND_BLURRINESS="backgroundBlurriness";Qe.BACKGROUND_INTENSITY="backgroundIntensity";Qe.BACKGROUND_ROTATION="backgroundRotation";const Dm=D(Qe,Qe.BACKGROUND_BLURRINESS),za=D(Qe,Qe.BACKGROUND_INTENSITY),Um=D(Qe,Qe.BACKGROUND_ROTATION);class AS extends Gt{static get type(){return"StorageTextureNode"}constructor(e,t,s=null){super(e,t),this.storeNode=s,this.isStorageTextureNode=!0,this.access=Oe.WRITE_ONLY}getInputType(){return"storageTexture"}setup(e){super.setup(e);const t=e.getNodeProperties(this);return t.storeNode=this.storeNode,t}setAccess(e){return this.access=e,this}generate(e,t){let s;return this.storeNode!==null?s=this.generateStore(e):s=super.generate(e,t),s}toReadWrite(){return this.setAccess(Oe.READ_WRITE)}toReadOnly(){return this.setAccess(Oe.READ_ONLY)}toWriteOnly(){return this.setAccess(Oe.WRITE_ONLY)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:s,storeNode:n,depthNode:r}=t,i=super.generate(e,"property"),a=s.build(e,this.value.is3DTexture===!0?"uvec3":"uvec2"),u=n.build(e,"vec4"),c=r?r.build(e,"int"):null,l=e.generateTextureStore(e,i,a,c,u);e.addLineFlowCode(l,this)}clone(){const e=super.clone();return e.storeNode=this.storeNode,e}}const Im=H(AS).setParameterLength(1,3),wS=(o,e,t)=>{const s=Im(o,e,t);return t!==null&&s.toStack(),s},ES=N(({texture:o,uv:e})=>{const s=b().toVar();return W(e.x.lessThan(1e-4),()=>{s.assign(b(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{s.assign(b(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{s.assign(b(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{s.assign(b(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{s.assign(b(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{s.assign(b(0,0,-1))}).Else(()=>{const r=o.sample(e.add(b(-.01,0,0))).r.sub(o.sample(e.add(b(.01,0,0))).r),i=o.sample(e.add(b(0,-.01,0))).r.sub(o.sample(e.add(b(0,.01,0))).r),a=o.sample(e.add(b(0,0,-.01))).r.sub(o.sample(e.add(b(0,0,.01))).r);s.assign(b(r,i,a))}),s.normalize()});class CS extends Gt{static get type(){return"Texture3DNode"}constructor(e,t=null,s=null){super(e,t,s),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return b(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){const s=this.value;return e.isFlipY()&&(s.isRenderTargetTexture===!0||s.isFramebufferTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(x(fs(this,this.levelNode).y).sub(t.y).sub(1))),t}generateUV(e,t){return t.build(e,"vec3")}normal(e){return ES({texture:this,uv:e})}}const Vm=H(CS).setParameterLength(1,3);class MS extends ro{static get type(){return"UserDataNode"}constructor(e,t,s=null){super(e,t,s),this.userData=s}updateReference(e){return this.reference=this.userData!==null?this.userData:e.object.userData,this.reference}}const BS=(o,e,t)=>C(new MS(o,e,t)),Nl=new WeakMap;class FS extends Be{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.projectionMatrix=null,this.updateType=q.OBJECT,this.updateAfterType=q.OBJECT,this.previousModelWorldMatrix=k(new Ue),this.previousProjectionMatrix=k(new Ue).setGroup($),this.previousCameraViewMatrix=k(new Ue)}setProjectionMatrix(e){this.projectionMatrix=e}update({frameId:e,camera:t,object:s}){const n=Sl(s);this.previousModelWorldMatrix.value.copy(n);const r=Gm(t);r.frameId!==e&&(r.frameId=e,r.previousProjectionMatrix===void 0?(r.previousProjectionMatrix=new Ue,r.previousCameraViewMatrix=new Ue,r.currentProjectionMatrix=new Ue,r.currentCameraViewMatrix=new Ue,r.previousProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),r.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(r.previousProjectionMatrix.copy(r.currentProjectionMatrix),r.previousCameraViewMatrix.copy(r.currentCameraViewMatrix)),r.currentProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),r.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(r.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(r.previousCameraViewMatrix))}updateAfter({object:e}){Sl(e).copy(e.matrixWorld)}setup(){const e=this.projectionMatrix===null?Qs:k(this.projectionMatrix),t=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),s=e.mul(Zs).mul(be),n=this.previousProjectionMatrix.mul(t).mul(Mi),r=s.xy.div(s.w),i=n.xy.div(n.w);return Q(r,i)}}function Gm(o){let e=Nl.get(o);return e===void 0&&(e={},Nl.set(o,e)),e}function Sl(o,e=0){const t=Gm(o);let s=t[e];return s===void 0&&(t[e]=s=new Ue,t[e].copy(o.matrixWorld)),s}const PS=D(FS),LS=N(([o])=>ac(o.rgb)),DS=N(([o,e=g(1)])=>e.mix(ac(o.rgb),o.rgb)),US=N(([o,e=g(1)])=>{const t=Re(o.r,o.g,o.b).div(3),s=o.r.max(o.g.max(o.b)),n=s.sub(t).mul(e).mul(-3);return te(o.rgb,s,n)}),IS=N(([o,e=g(1)])=>{const t=b(.57735,.57735,.57735),s=e.cos();return b(o.rgb.mul(s).add(t.cross(o.rgb).mul(e.sin()).add(t.mul(Ts(t,o.rgb).mul(s.oneMinus())))))}),ac=(o,e=b(Ee.getLuminanceCoefficients(new Y)))=>Ts(o,e),VS=N(([o,e=b(1),t=b(0),s=b(1),n=g(1),r=b(Ee.getLuminanceCoefficients(new Y,Gd))])=>{const i=o.rgb.dot(b(r)),a=Te(o.rgb.mul(e).add(t),0).toVar(),u=a.pow(s).toVar();return W(a.r.greaterThan(0),()=>{a.r.assign(u.r)}),W(a.g.greaterThan(0),()=>{a.g.assign(u.g)}),W(a.b.greaterThan(0),()=>{a.b.assign(u.b)}),a.assign(i.add(a.sub(i).mul(n))),O(a.rgb,o.a)});class GS extends Be{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const OS=H(GS).setParameterLength(2),qr=new $e;class Om extends Gt{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class vl extends Om{static get type(){return"PassMultipleTextureNode"}constructor(e,t,s=!1){super(e,null),this.textureName=t,this.previousTexture=s}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){const e=new this.constructor(this.passNode,this.textureName,this.previousTexture);return e.uvNode=this.uvNode,e.levelNode=this.levelNode,e.biasNode=this.biasNode,e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e}}class Ot extends Be{static get type(){return"PassNode"}constructor(e,t,s,n={}){super("vec4"),this.scope=e,this.scene=t,this.camera=s,this.options=n,this._pixelRatio=1,this._width=1,this._height=1;const r=new wt;r.isRenderTargetTexture=!0,r.name="depth";const i=new xs(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Ke,...n});i.texture.name="output",i.depthTexture=r,this.renderTarget=i,this._textures={output:i.texture,depth:r},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=k(0),this._cameraFar=k(0),this._mrt=null,this._layers=null,this._resolution=1,this._viewport=null,this._scissor=null,this.isPassNode=!0,this.updateBeforeType=q.FRAME,this.global=!0}setResolution(e){return this._resolution=e,this}getResolution(){return this._resolution}setLayers(e){return this._layers=e,this}getLayers(){return this._layers}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getTexture(e){let t=this._textures[e];return t===void 0&&(t=this.renderTarget.texture.clone(),t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)),t}getPreviousTexture(e){let t=this._previousTextures[e];return t===void 0&&(t=this.getTexture(e).clone(),this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(t!==void 0){const s=this._textures[e],n=this.renderTarget.textures.indexOf(s);this.renderTarget.textures[n]=t,this._textures[e]=t,this._previousTextures[e]=s,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return t===void 0&&(t=C(new vl(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return t===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),t=C(new vl(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(t===void 0){const s=this._cameraNear,n=this._cameraFar;this._viewZNodes[e]=t=ju(this.getTextureNode(e),s,n)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(t===void 0){const s=this._cameraNear,n=this._cameraFar,r=this.getViewZNode(e);this._linearDepthNodes[e]=t=Sn(r,s,n)}return t}async compileAsync(e){const t=e.getRenderTarget(),s=e.getMRT();e.setRenderTarget(this.renderTarget),e.setMRT(this._mrt),await e.compileAsync(this.scene,this.camera),e.setRenderTarget(t),e.setMRT(s)}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,this.renderTarget.texture.type=e.getColorBufferType(),this.scope===Ot.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:s}=this;let n,r;const i=t.getOutputRenderTarget();i&&i.isXRRenderTarget===!0?(r=1,n=t.xr.getCamera(),t.xr.updateCamera(n),qr.set(i.width,i.height)):(n=this.camera,r=t.getPixelRatio(),t.getSize(qr)),this._pixelRatio=r,this.setSize(qr.width,qr.height);const a=t.getRenderTarget(),u=t.getMRT(),c=n.layers.mask;this._cameraNear.value=n.near,this._cameraFar.value=n.far,this._layers!==null&&(n.layers.mask=this._layers.mask);for(const l in this._previousTextures)this.toggleTexture(l);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(s,n),t.setRenderTarget(a),t.setMRT(u),n.layers.mask=c}setSize(e,t){this._width=e,this._height=t;const s=this._width*this._pixelRatio*this._resolution,n=this._height*this._pixelRatio*this._resolution;this.renderTarget.setSize(s,n),this._scissor!==null&&this.renderTarget.scissor.copy(this._scissor),this._viewport!==null&&this.renderTarget.viewport.copy(this._viewport)}setScissor(e,t,s,n){e===null?this._scissor=null:(this._scissor===null&&(this._scissor=new fe),e.isVector4?this._scissor.copy(e):this._scissor.set(e,t,s,n),this._scissor.multiplyScalar(this._pixelRatio*this._resolution).floor())}setViewport(e,t,s,n){e===null?this._viewport=null:(this._viewport===null&&(this._viewport=new fe),e.isVector4?this._viewport.copy(e):this._viewport.set(e,t,s,n),this._viewport.multiplyScalar(this._pixelRatio*this._resolution).floor())}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}Ot.COLOR="color";Ot.DEPTH="depth";const kS=(o,e,t)=>C(new Ot(Ot.COLOR,o,e,t)),zS=(o,e)=>C(new Om(o,e)),$S=(o,e,t)=>C(new Ot(Ot.DEPTH,o,e,t));class WS extends Ot{static get type(){return"ToonOutlinePassNode"}constructor(e,t,s,n,r){super(Ot.COLOR,e,t),this.colorNode=s,this.thicknessNode=n,this.alphaNode=r,this._materialCache=new WeakMap}updateBefore(e){const{renderer:t}=e,s=t.getRenderObjectFunction();t.setRenderObjectFunction((n,r,i,a,u,c,l,d)=>{if((u.isMeshToonMaterial||u.isMeshToonNodeMaterial)&&u.wireframe===!1){const p=this._getOutlineMaterial(u);t.renderObject(n,r,i,a,p,c,l,d)}t.renderObject(n,r,i,a,u,c,l,d)}),super.updateBefore(e),t.setRenderObjectFunction(s)}_createMaterial(){const e=new Se;e.isMeshToonOutlineMaterial=!0,e.name="Toon_Outline",e.side=Ze;const t=et.negate(),s=Qs.mul(Zs),n=g(1),r=s.mul(O(be,1)),i=s.mul(O(be.add(t),1)),a=Qt(r.sub(i));return e.vertexNode=r.add(a.mul(this.thicknessNode).mul(r.w).mul(n)),e.colorNode=O(this.colorNode,this.alphaNode),e}_getOutlineMaterial(e){let t=this._materialCache.get(e);return t===void 0&&(t=this._createMaterial(),this._materialCache.set(e,t)),t}}const HS=(o,e,t=new kt(0,0,0),s=.003,n=1)=>C(new WS(o,e,C(t),C(s),C(n))),km=N(([o,e])=>o.mul(e).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),zm=N(([o,e])=>(o=o.mul(e),o.div(o.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),$m=N(([o,e])=>{o=o.mul(e),o=o.sub(.004).max(0);const t=o.mul(o.mul(6.2).add(.5)),s=o.mul(o.mul(6.2).add(1.7)).add(.06);return t.div(s).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),qS=N(([o])=>{const e=o.mul(o.add(.0245786)).sub(90537e-9),t=o.mul(o.add(.432951).mul(.983729)).add(.238081);return e.div(t)}),Wm=N(([o,e])=>{const t=We(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),s=We(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return o=o.mul(e).div(.6),o=t.mul(o),o=qS(o),o=s.mul(o),o.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),XS=We(b(1.6605,-.1246,-.0182),b(-.5876,1.1329,-.1006),b(-.0728,-.0083,1.1187)),jS=We(b(.6274,.0691,.0164),b(.3293,.9195,.088),b(.0433,.0113,.8956)),KS=N(([o])=>{const e=b(o).toVar(),t=b(e.mul(e)).toVar(),s=b(t.mul(t)).toVar();return g(15.5).mul(s.mul(t)).sub(X(40.14,s.mul(e))).add(X(31.96,s).sub(X(6.868,t.mul(e))).add(X(.4298,t).add(X(.1191,e).sub(.00232))))}),Hm=N(([o,e])=>{const t=b(o).toVar(),s=We(b(.856627153315983,.137318972929847,.11189821299995),b(.0951212405381588,.761241990602591,.0767994186031903),b(.0482516061458583,.101439036467562,.811302368396859)),n=We(b(1.1271005818144368,-.1413297634984383,-.14132976349843826),b(-.11060664309660323,1.157823702216272,-.11060664309660294),b(-.016493938717834573,-.016493938717834257,1.2519364065950405)),r=g(-12.47393),i=g(4.026069);return t.mulAssign(e),t.assign(jS.mul(t)),t.assign(s.mul(t)),t.assign(Te(t,1e-10)),t.assign(Pt(t)),t.assign(t.sub(r).div(i.sub(r))),t.assign(xt(t,0,1)),t.assign(KS(t)),t.assign(n.mul(t)),t.assign(pt(Te(b(0),t),b(2.2))),t.assign(XS.mul(t)),t.assign(xt(t,0,1)),t}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),qm=N(([o,e])=>{const t=g(.76),s=g(.15);o=o.mul(e);const n=Je(o.r,Je(o.g,o.b)),r=Ie(n.lessThan(.08),n.sub(X(6.25,n.mul(n))),.04);o.subAssign(r);const i=Te(o.r,Te(o.g,o.b));W(i.lessThan(t),()=>o);const a=Q(1,t),u=Q(1,a.mul(a).div(i.add(a.sub(t))));o.mulAssign(u.div(i));const c=Q(1,at(1,s.mul(i.sub(u)).add(1)));return te(o,b(u),c)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class Ae extends z{static get type(){return"CodeNode"}constructor(e="",t=[],s=""){super("code"),this.isCodeNode=!0,this.global=!0,this.code=e,this.includes=t,this.language=s}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const n of t)n.build(e);const s=e.getCodeFromNode(this,this.getNodeType(e));return s.code=this.code,s.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const po=H(Ae).setParameterLength(1,3),YS=(o,e)=>po(o,e,"js"),QS=(o,e)=>po(o,e,"wgsl"),ZS=(o,e)=>po(o,e,"glsl");class Xm extends Ae{static get type(){return"FunctionNode"}constructor(e="",t=[],s=""){super(e,t,s)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let s=t.nodeFunction;return s===void 0&&(s=e.parser.parseFunction(this.code),t.nodeFunction=s),s}generate(e,t){super.generate(e);const s=this.getNodeFunction(e),n=s.name,r=s.type,i=e.getCodeFromNode(this,r);n!==""&&(i.name=n);const a=e.getPropertyName(i),u=this.getNodeFunction(e).getCode(a);return i.code=u+`
`,t==="property"?a:e.format(`${a}()`,r,t)}}const jm=(o,e=[],t="")=>{for(let r=0;r<e.length;r++){const i=e[r];typeof i=="function"&&(e[r]=i.functionNode)}const s=C(new Xm(o,e,t)),n=(...r)=>s.call(...r);return n.functionNode=s,n},JS=(o,e)=>jm(o,e,"glsl"),ev=(o,e)=>jm(o,e,"wgsl");class tv extends z{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outputType=null,this.events=new Ya,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return this.outputType!==null}set value(e){this._value!==e&&(this._cache&&this.inputType==="URL"&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&this._cache===null&&this.inputType==="URL"&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&e.value!==null&&e.value!==void 0&&((this.inputType==="URL"||this.inputType==="String")&&typeof e.value=="string"||this.inputType==="Number"&&typeof e.value=="number"||this.inputType==="Vector2"&&e.value.isVector2||this.inputType==="Vector3"&&e.value.isVector3||this.inputType==="Vector4"&&e.value.isVector4||this.inputType==="Color"&&e.value.isColor||this.inputType==="Matrix3"&&e.value.isMatrix3||this.inputType==="Matrix4"&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:g()}serialize(e){super.serialize(e),this.value!==null?this.inputType==="ArrayBuffer"?e.value=qd(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;e.value!==null&&(e.inputType==="ArrayBuffer"?t=Xd(e.value):e.inputType==="Texture"?t=e.meta.textures[e.value]:t=e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const pi=H(tv).setParameterLength(1);class Km extends Map{get(e,t=null,...s){if(this.has(e))return super.get(e);if(t!==null){const n=t(...s);return this.set(e,n),n}}}class sv{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const fi=new Km;class nv extends z{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new Km,this._output=pi(null),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const s=this._outputs;return s[e]===void 0?s[e]=pi(t):s[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const s=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),s[e]=t,s[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),s[e]=t,s[e].events.addEventListener("refresh",this.onRefresh)):s[e]===void 0?(s[e]=pi(t),s[e].events.addEventListener("refresh",this.onRefresh)):s[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const n=this.getObject()[e];if(typeof n=="function")return n(...t)}async callAsync(e,...t){const n=this.getObject()[e];if(typeof n=="function")return n.constructor.name==="AsyncFunction"?await n(...t):n(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){e!==null?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),this._object!==null)return this._object;const e=()=>this.refresh(),t=(c,l)=>this.setOutput(c,l),s=new sv(this),n=fi.get("THREE"),r=fi.get("TSL"),i=this.getMethod(),a=[s,this._local,fi,e,t,n,r];this._object=i(...a);const u=this._object.layout;if(u&&(u.cache===!1&&this._local.clear(),this._output.outputType=u.outputType||null,Array.isArray(u.elements)))for(const c of u.elements){const l=c.id||c.name;c.inputType&&(this.getParameter(l)===void 0&&this.setParameter(l,null),this.getParameter(l).inputType=c.inputType),c.outputType&&(this.getOutput(l)===void 0&&this.setOutput(l,null),this.getOutput(l).outputType=c.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const t in this.parameters){let s=this.parameters[t];s.isScriptableNode&&(s=s.getDefaultOutput()),s.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:g()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),this._method!==null)return this._method;const e=["parameters","local","global","refresh","setOutput","THREE","TSL"],s=["layout","init","main","dispose"].join(", "),n="var "+s+`; var output = {};
`,r=`
return { ...output, `+s+" };",i=n+this.codeNode.code+r;return this._method=new Function(...e,i),this._method}dispose(){this._method!==null&&(this._object&&typeof this._object.dispose=="function"&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){const t=[Od(this.source),this.getDefaultOutputNode().getCacheKey(e)];for(const s in this.parameters)t.push(this.parameters[s].getCacheKey(e));return Gi(t)}set needsUpdate(e){e===!0&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return this.codeNode===null?this:(this._needsOutputUpdate===!0&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value,this)}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const rv=H(nv).setParameterLength(1,2);function Ym(o){let e;const t=o.context.getViewZ;return t!==void 0&&(e=t(this)),(e||Ne.z).negate()}const uc=N(([o,e],t)=>{const s=Ym(t);return Vt(o,e,s)}),cc=N(([o],e)=>{const t=Ym(e);return o.mul(o,t,t).negate().exp().oneMinus()}),_r=N(([o,e])=>O(e.toFloat().mix(_n.rgb,o.toVec3()),_n.a));function iv(o,e,t){return console.warn('THREE.TSL: "rangeFog( color, near, far )" is deprecated. Use "fog( color, rangeFogFactor( near, far ) )" instead.'),_r(o,uc(e,t))}function ov(o,e){return console.warn('THREE.TSL: "densityFog( color, density )" is deprecated. Use "fog( color, densityFogFactor( density ) )" instead.'),_r(o,cc(e))}let ws=null,Es=null;class av extends z{static get type(){return"RangeNode"}constructor(e=g(),t=g()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(cs(this.minNode.value)),s=e.getTypeLength(cs(this.maxNode.value));return t>s?t:s}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let s=null;if(t.count>1){const n=this.minNode.value,r=this.maxNode.value,i=e.getTypeLength(cs(n)),a=e.getTypeLength(cs(r));ws=ws||new fe,Es=Es||new fe,ws.setScalar(0),Es.setScalar(0),i===1?ws.setScalar(n):n.isColor?ws.set(n.r,n.g,n.b,1):ws.set(n.x,n.y,n.z||0,n.w||0),a===1?Es.setScalar(r):r.isColor?Es.set(r.r,r.g,r.b,1):Es.set(r.x,r.y,r.z||0,r.w||0);const u=4,c=u*t.count,l=new Float32Array(c);for(let p=0;p<c;p++){const f=p%u,m=ws.getComponent(f),y=Es.getComponent(f);l[p]=Dd.lerp(m,y,Math.random())}const d=this.getNodeType(e);if(t.count<=4096)s=wr(l,"vec4",t.count).element(ms).convert(d);else{const p=new Tn(l,4);e.geometry.setAttribute("__range"+this.id,p),s=Ci(p).convert(d)}}else s=g(0);return s}}const uv=H(av).setParameterLength(2);class cv extends z{static get type(){return"ComputeBuiltinNode"}constructor(e,t){super(t),this._builtinName=e}getHash(e){return this.getBuiltinName(e)}getNodeType(){return this.nodeType}setBuiltinName(e){return this._builtinName=e,this}getBuiltinName(){return this._builtinName}hasBuiltin(e){return e.hasBuiltin(this._builtinName)}generate(e,t){const s=this.getBuiltinName(e),n=this.getNodeType(e);return e.shaderStage==="compute"?e.format(s,n,t):(console.warn(`ComputeBuiltinNode: Compute built-in value ${s} can not be accessed in the ${e.shaderStage} stage`),e.generateConst(n))}serialize(e){super.serialize(e),e.global=this.global,e._builtinName=this._builtinName}deserialize(e){super.deserialize(e),this.global=e.global,this._builtinName=e._builtinName}}const Pr=(o,e)=>C(new cv(o,e)),lv=Pr("numWorkgroups","uvec3"),dv=Pr("workgroupId","uvec3"),hv=Pr("globalId","uvec3"),pv=Pr("localId","uvec3"),fv=Pr("subgroupSize","uint");class mv extends z{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:s}=e;s.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${t}Barrier 
`):e.addLineFlowCode(`${t}Barrier()`,this)}}const lc=H(mv),gv=()=>lc("workgroup").toStack(),yv=()=>lc("storage").toStack(),xv=()=>lc("texture").toStack();class Tv extends Ys{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let s;const n=e.context.assign;if(s=super.generate(e),n!==!0){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}class _v extends z{constructor(e,t,s=0){super(t),this.bufferType=t,this.bufferCount=s,this.isWorkgroupInfoNode=!0,this.elementType=t,this.scope=e,this.name=""}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setScope(e){return this.scope=e,this}getElementType(){return this.elementType}getInputType(){return`${this.scope}Array`}element(e){return C(new Tv(this,e))}generate(e){const t=this.name!==""?this.name:`${this.scope}Array_${this.id}`;return e.getScopedArray(t,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}const bv=(o,e)=>C(new _v("Workgroup",o,e));class Le extends z{static get type(){return"AtomicFunctionNode"}constructor(e,t,s){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=s,this.parents=!0}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=e.getNodeProperties(this),s=t.parents,n=this.method,r=this.getNodeType(e),i=this.getInputType(e),a=this.pointerNode,u=this.valueNode,c=[];c.push(`&${a.build(e,i)}`),u!==null&&c.push(u.build(e,i));const l=`${e.getMethod(n,r)}( ${c.join(", ")} )`;if(s?s.length===1&&s[0].isStackNode===!0:!1)e.addLineFlowCode(l,this);else return t.constNode===void 0&&(t.constNode=Zt(l,r).toConst()),t.constNode.build(e)}}Le.ATOMIC_LOAD="atomicLoad";Le.ATOMIC_STORE="atomicStore";Le.ATOMIC_ADD="atomicAdd";Le.ATOMIC_SUB="atomicSub";Le.ATOMIC_MAX="atomicMax";Le.ATOMIC_MIN="atomicMin";Le.ATOMIC_AND="atomicAnd";Le.ATOMIC_OR="atomicOr";Le.ATOMIC_XOR="atomicXor";const Nv=H(Le),Wt=(o,e,t)=>Nv(o,e,t).toStack(),Sv=o=>Wt(Le.ATOMIC_LOAD,o,null),vv=(o,e)=>Wt(Le.ATOMIC_STORE,o,e),Rv=(o,e)=>Wt(Le.ATOMIC_ADD,o,e),Av=(o,e)=>Wt(Le.ATOMIC_SUB,o,e),wv=(o,e)=>Wt(Le.ATOMIC_MAX,o,e),Ev=(o,e)=>Wt(Le.ATOMIC_MIN,o,e),Cv=(o,e)=>Wt(Le.ATOMIC_AND,o,e),Mv=(o,e)=>Wt(Le.ATOMIC_OR,o,e),Bv=(o,e)=>Wt(Le.ATOMIC_XOR,o,e);let Xr;function fo(o){Xr=Xr||new WeakMap;let e=Xr.get(o);return e===void 0&&Xr.set(o,e={}),e}function mo(o){const e=fo(o);return e.shadowMatrix||(e.shadowMatrix=k("mat4").setGroup($).onRenderUpdate(t=>((o.castShadow!==!0||t.renderer.shadowMap.enabled===!1)&&o.shadow.updateMatrices(o),o.shadow.matrix)))}function Qm(o,e=Ut){const t=mo(o).mul(e);return t.xyz.div(t.w)}function dc(o){const e=fo(o);return e.position||(e.position=k(new Y).setGroup($).onRenderUpdate((t,s)=>s.value.setFromMatrixPosition(o.matrixWorld)))}function Zm(o){const e=fo(o);return e.targetPosition||(e.targetPosition=k(new Y).setGroup($).onRenderUpdate((t,s)=>s.value.setFromMatrixPosition(o.target.matrixWorld)))}function hc(o){const e=fo(o);return e.viewPosition||(e.viewPosition=k(new Y).setGroup($).onRenderUpdate(({camera:t},s)=>{s.value=s.value||new Y,s.value.setFromMatrixPosition(o.matrixWorld),s.value.applyMatrix4(t.matrixWorldInverse)}))}const pc=o=>_t.transformDirection(dc(o).sub(Zm(o))),Fv=o=>o.sort((e,t)=>e.id-t.id),Pv=(o,e)=>{for(const t of e)if(t.isAnalyticLightNode&&t.light.id===o)return t;return null},zo=new WeakMap,$n=[];class fc extends z{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=Kt("vec3","totalDiffuse"),this.totalSpecularNode=Kt("vec3","totalSpecular"),this.outgoingLightNode=Kt("vec3","outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}customCacheKey(){const e=this._lights;for(let s=0;s<e.length;s++){const n=e[s];if($n.push(n.id),$n.push(n.castShadow?1:0),n.isSpotLight===!0){const r=n.map!==null?n.map.id:-1,i=n.colorNode?n.colorNode.getCacheKey():-1;$n.push(r,i)}}const t=Gi($n);return $n.length=0,t}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);const t=[];for(const s of this._lightNodes)t.push(s.getSelf().getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getNodeProperties(this);for(const s of t.nodes)s.build(e);t.outputNode.build(e)}setupLightsNode(e){const t=[],s=this._lightNodes,n=Fv(this._lights),r=e.renderer.library;for(const i of n)if(i.isNode)t.push(C(i));else{let a=null;if(s!==null&&(a=Pv(i.id,s)),a===null){const u=r.getLightNodeClass(i.constructor);if(u===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${i.constructor.name}`);continue}let c=null;zo.has(i)?c=zo.get(i):(c=C(new u(i)),zo.set(i,c)),t.push(c)}}this._lightNodes=t}setupDirectLight(e,t,s){const{lightingModel:n,reflectedLight:r}=e.context;n.direct({...s,lightNode:t,reflectedLight:r},e)}setupDirectRectAreaLight(e,t,s){const{lightingModel:n,reflectedLight:r}=e.context;n.directRectArea({...s,lightNode:t,reflectedLight:r},e)}setupLights(e,t){for(const s of t)s.build(e)}getLightNodes(e){return this._lightNodes===null&&this.setupLightsNode(e),this._lightNodes}setup(e){const t=e.lightsNode;e.lightsNode=this;let s=this.outgoingLightNode;const n=e.context,r=n.lightingModel,i=e.getNodeProperties(this);if(r){const{totalDiffuseNode:a,totalSpecularNode:u}=this;n.outgoingLight=s;const c=e.addStack();i.nodes=c.nodes,r.start(e);const{backdrop:l,backdropAlpha:d}=n,{directDiffuse:p,directSpecular:f,indirectDiffuse:m,indirectSpecular:y}=n.reflectedLight;let T=p.add(m);l!==null&&(d!==null?T=b(d.mix(T,l)):T=b(l),n.material.transparent=!0),a.assign(T),u.assign(f.add(y)),s.assign(a.add(u)),r.finish(e),s=s.bypass(e.removeStack())}else i.nodes=[];return e.lightsNode=t,s}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}const Lv=(o=[])=>C(new fc).setLights(o);class Dv extends z{static get type(){return"ShadowBaseNode"}constructor(e){super(),this.light=e,this.updateBeforeType=q.RENDER,this.isShadowBaseNode=!0}setupShadowPosition({context:e,material:t}){mc.assign(t.receivedShadowPositionNode||e.shadowPositionWorld||Ut)}}const mc=Kt("vec3","shadowPositionWorld");function Uv(o,e={}){return e.toneMapping=o.toneMapping,e.toneMappingExposure=o.toneMappingExposure,e.outputColorSpace=o.outputColorSpace,e.renderTarget=o.getRenderTarget(),e.activeCubeFace=o.getActiveCubeFace(),e.activeMipmapLevel=o.getActiveMipmapLevel(),e.renderObjectFunction=o.getRenderObjectFunction(),e.pixelRatio=o.getPixelRatio(),e.mrt=o.getMRT(),e.clearColor=o.getClearColor(e.clearColor||new kt),e.clearAlpha=o.getClearAlpha(),e.autoClear=o.autoClear,e.scissorTest=o.getScissorTest(),e}function Iv(o,e){return e=Uv(o,e),o.setMRT(null),o.setRenderObjectFunction(null),o.setClearColor(0,1),o.autoClear=!0,e}function Vv(o,e){o.toneMapping=e.toneMapping,o.toneMappingExposure=e.toneMappingExposure,o.outputColorSpace=e.outputColorSpace,o.setRenderTarget(e.renderTarget,e.activeCubeFace,e.activeMipmapLevel),o.setRenderObjectFunction(e.renderObjectFunction),o.setPixelRatio(e.pixelRatio),o.setMRT(e.mrt),o.setClearColor(e.clearColor,e.clearAlpha),o.autoClear=e.autoClear,o.setScissorTest(e.scissorTest)}function Gv(o,e={}){return e.background=o.background,e.backgroundNode=o.backgroundNode,e.overrideMaterial=o.overrideMaterial,e}function Ov(o,e){return e=Gv(o,e),o.background=null,o.backgroundNode=null,o.overrideMaterial=null,e}function kv(o,e){o.background=e.background,o.backgroundNode=e.backgroundNode,o.overrideMaterial=e.overrideMaterial}function zv(o,e,t){return t=Iv(o,t),t=Ov(e,t),t}function $v(o,e,t){Vv(o,t),kv(e,t)}const Rl=new WeakMap,Jm=N(({depthTexture:o,shadowCoord:e,depthLayer:t})=>{let s=K(o,e.xy).setName("t_basic");return o.isArrayTexture&&(s=s.depth(t)),s.compare(e.z)}),eg=N(({depthTexture:o,shadowCoord:e,shadow:t,depthLayer:s})=>{const n=(T,S)=>{let R=K(o,T);return o.isArrayTexture&&(R=R.depth(s)),R.compare(S)},r=le("mapSize","vec2",t).setGroup($),i=le("radius","float",t).setGroup($),a=M(1).div(r),u=a.x.negate().mul(i),c=a.y.negate().mul(i),l=a.x.mul(i),d=a.y.mul(i),p=u.div(2),f=c.div(2),m=l.div(2),y=d.div(2);return Re(n(e.xy.add(M(u,c)),e.z),n(e.xy.add(M(0,c)),e.z),n(e.xy.add(M(l,c)),e.z),n(e.xy.add(M(p,f)),e.z),n(e.xy.add(M(0,f)),e.z),n(e.xy.add(M(m,f)),e.z),n(e.xy.add(M(u,0)),e.z),n(e.xy.add(M(p,0)),e.z),n(e.xy,e.z),n(e.xy.add(M(m,0)),e.z),n(e.xy.add(M(l,0)),e.z),n(e.xy.add(M(p,y)),e.z),n(e.xy.add(M(0,y)),e.z),n(e.xy.add(M(m,y)),e.z),n(e.xy.add(M(u,d)),e.z),n(e.xy.add(M(0,d)),e.z),n(e.xy.add(M(l,d)),e.z)).mul(1/17)}),tg=N(({depthTexture:o,shadowCoord:e,shadow:t,depthLayer:s})=>{const n=(d,p)=>{let f=K(o,d);return o.isArrayTexture&&(f=f.depth(s)),f.compare(p)},r=le("mapSize","vec2",t).setGroup($),i=M(1).div(r),a=i.x,u=i.y,c=e.xy,l=es(c.mul(r).add(.5));return c.subAssign(l.mul(i)),Re(n(c,e.z),n(c.add(M(a,0)),e.z),n(c.add(M(0,u)),e.z),n(c.add(i),e.z),te(n(c.add(M(a.negate(),0)),e.z),n(c.add(M(a.mul(2),0)),e.z),l.x),te(n(c.add(M(a.negate(),u)),e.z),n(c.add(M(a.mul(2),u)),e.z),l.x),te(n(c.add(M(0,u.negate())),e.z),n(c.add(M(0,u.mul(2))),e.z),l.y),te(n(c.add(M(a,u.negate())),e.z),n(c.add(M(a,u.mul(2))),e.z),l.y),te(te(n(c.add(M(a.negate(),u.negate())),e.z),n(c.add(M(a.mul(2),u.negate())),e.z),l.x),te(n(c.add(M(a.negate(),u.mul(2))),e.z),n(c.add(M(a.mul(2),u.mul(2))),e.z),l.x),l.y)).mul(1/9)}),sg=N(({depthTexture:o,shadowCoord:e,depthLayer:t})=>{const s=g(1).toVar();let n=K(o).sample(e.xy);o.isArrayTexture&&(n=n.depth(t)),n=n.rg;const r=Qi(e.z,n.x);return W(r.notEqual(g(1)),()=>{const i=e.z.sub(n.x),a=Te(0,n.y.mul(n.y));let u=a.div(a.add(i.mul(i)));u=xt(Q(u,.3).div(.95-.3)),s.assign(xt(Te(r,u)))}),s}),Wv=N(([o,e,t])=>{let s=Ut.sub(o).length();return s=s.sub(e).div(t.sub(e)),s=s.saturate(),s}),Hv=o=>{const e=o.shadow.camera,t=le("near","float",e).setGroup($),s=le("far","float",e).setGroup($),n=Lp(o);return Wv(n,t,s)},ng=o=>{let e=Rl.get(o);if(e===void 0){const t=o.isPointLight?Hv(o):null;e=new Se,e.colorNode=O(0,0,0,1),e.depthNode=t,e.isShadowPassMaterial=!0,e.name="ShadowMaterial",e.fog=!1,Rl.set(o,e)}return e},Al=new Et,rn=[],rg=(o,e,t,s)=>{rn[0]=o,rn[1]=e;let n=Al.get(rn);return(n===void 0||n.shadowType!==t||n.useVelocity!==s)&&(n=(r,i,a,u,c,l,...d)=>{(r.castShadow===!0||r.receiveShadow&&t===ni)&&(s&&(Hd(r).useVelocity=!0),r.onBeforeShadow(o,r,a,e.camera,u,i.overrideMaterial,l),o.renderObject(r,i,a,u,c,l,...d),r.onAfterShadow(o,r,a,e.camera,u,i.overrideMaterial,l))},n.shadowType=t,n.useVelocity=s,Al.set(rn,n)),rn[0]=null,rn[1]=null,n},qv=N(({samples:o,radius:e,size:t,shadowPass:s,depthLayer:n})=>{const r=g(0).toVar("meanVertical"),i=g(0).toVar("squareMeanVertical"),a=o.lessThanEqual(g(1)).select(g(0),g(2).div(o.sub(1))),u=o.lessThanEqual(g(1)).select(g(0),g(-1));ue({start:x(0),end:x(o),type:"int",condition:"<"},({i:l})=>{const d=u.add(g(l).mul(a));let p=s.sample(Re(Br.xy,M(0,d).mul(e)).div(t));s.value.isArrayTexture&&(p=p.depth(n)),p=p.x,r.addAssign(p),i.addAssign(p.mul(p))}),r.divAssign(o),i.divAssign(o);const c=zt(i.sub(r.mul(r)));return M(r,c)}),Xv=N(({samples:o,radius:e,size:t,shadowPass:s,depthLayer:n})=>{const r=g(0).toVar("meanHorizontal"),i=g(0).toVar("squareMeanHorizontal"),a=o.lessThanEqual(g(1)).select(g(0),g(2).div(o.sub(1))),u=o.lessThanEqual(g(1)).select(g(0),g(-1));ue({start:x(0),end:x(o),type:"int",condition:"<"},({i:l})=>{const d=u.add(g(l).mul(a));let p=s.sample(Re(Br.xy,M(d,0).mul(e)).div(t));s.value.isArrayTexture&&(p=p.depth(n)),r.addAssign(p.x),i.addAssign(Re(p.y.mul(p.y),p.x.mul(p.x)))}),r.divAssign(o),i.divAssign(o);const c=zt(i.sub(r.mul(r)));return M(r,c)}),jv=[Jm,eg,tg,sg];let $o;const jr=new ho;class ig extends Dv{static get type(){return"ShadowNode"}constructor(e,t=null){super(e),this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this._node=null,this._cameraFrameId=new WeakMap,this.isShadowNode=!0,this.depthLayer=0}setupShadowFilter(e,{filterFn:t,depthTexture:s,shadowCoord:n,shadow:r,depthLayer:i}){const a=n.x.greaterThanEqual(0).and(n.x.lessThanEqual(1)).and(n.y.greaterThanEqual(0)).and(n.y.lessThanEqual(1)).and(n.z.lessThanEqual(1)),u=t({depthTexture:s,shadowCoord:n,shadow:r,depthLayer:i});return a.select(u,g(1))}setupShadowCoord(e,t){const{shadow:s}=this,{renderer:n}=e,r=le("bias","float",s).setGroup($);let i=t,a;if(s.camera.isOrthographicCamera||n.logarithmicDepthBuffer!==!0)i=i.xyz.div(i.w),a=i.z,n.coordinateSystem===Mn&&(a=a.mul(2).sub(1));else{const u=i.w;i=i.xy.div(u);const c=le("near","float",s.camera).setGroup($),l=le("far","float",s.camera).setGroup($);a=Ku(u.negate(),c,l)}return i=b(i.x,i.y.oneMinus(),a.add(r)),i}getShadowFilterFn(e){return jv[e]}setupRenderTarget(e,t){const s=new wt(e.mapSize.width,e.mapSize.height);s.name="ShadowDepthTexture",s.compareFunction=Ja;const n=t.createRenderTarget(e.mapSize.width,e.mapSize.height);return n.texture.name="ShadowMap",n.texture.type=e.mapType,n.depthTexture=s,{shadowMap:n,depthTexture:s}}setupShadow(e){const{renderer:t}=e,{light:s,shadow:n}=this,r=t.shadowMap.type,{depthTexture:i,shadowMap:a}=this.setupRenderTarget(n,e);if(n.camera.updateProjectionMatrix(),r===ni&&n.isPointLightShadow!==!0){i.compareFunction=null,a.depth>1?(a._vsmShadowMapVertical||(a._vsmShadowMapVertical=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Us,type:Ke,depth:a.depth,depthBuffer:!1}),a._vsmShadowMapVertical.texture.name="VSMVertical"),this.vsmShadowMapVertical=a._vsmShadowMapVertical,a._vsmShadowMapHorizontal||(a._vsmShadowMapHorizontal=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Us,type:Ke,depth:a.depth,depthBuffer:!1}),a._vsmShadowMapHorizontal.texture.name="VSMHorizontal"),this.vsmShadowMapHorizontal=a._vsmShadowMapHorizontal):(this.vsmShadowMapVertical=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Us,type:Ke,depthBuffer:!1}),this.vsmShadowMapHorizontal=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Us,type:Ke,depthBuffer:!1}));let S=K(i);i.isArrayTexture&&(S=S.depth(this.depthLayer));let R=K(this.vsmShadowMapVertical.texture);i.isArrayTexture&&(R=R.depth(this.depthLayer));const w=le("blurSamples","float",n).setGroup($),L=le("radius","float",n).setGroup($),F=le("mapSize","vec2",n).setGroup($);let P=this.vsmMaterialVertical||(this.vsmMaterialVertical=new Se);P.fragmentNode=qv({samples:w,radius:L,size:F,shadowPass:S,depthLayer:this.depthLayer}).context(e.getSharedContext()),P.name="VSMVertical",P=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new Se),P.fragmentNode=Xv({samples:w,radius:L,size:F,shadowPass:R,depthLayer:this.depthLayer}).context(e.getSharedContext()),P.name="VSMHorizontal"}const u=le("intensity","float",n).setGroup($),c=le("normalBias","float",n).setGroup($),l=mo(s).mul(mc.add(_s.mul(c))),d=this.setupShadowCoord(e,l),p=n.filterNode||this.getShadowFilterFn(t.shadowMap.type)||null;if(p===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const f=r===ni&&n.isPointLightShadow!==!0?this.vsmShadowMapHorizontal.texture:i,m=this.setupShadowFilter(e,{filterFn:p,shadowTexture:a.texture,depthTexture:f,shadowCoord:d,shadow:n,depthLayer:this.depthLayer});let y=K(a.texture,d);i.isArrayTexture&&(y=y.depth(this.depthLayer));const T=te(1,m.rgb.mix(y,1),u.mul(y.a)).toVar();return this.shadowMap=a,this.shadow.map=a,T}setup(e){if(e.renderer.shadowMap.enabled!==!1)return N(()=>{let t=this._node;return this.setupShadowPosition(e),t===null&&(this._node=t=this.setupShadow(e)),e.material.shadowNode&&console.warn('THREE.NodeMaterial: ".shadowNode" is deprecated. Use ".castShadowNode" instead.'),e.material.receivedShadowNode&&(t=e.material.receivedShadowNode(t)),t})()}renderShadow(e){const{shadow:t,shadowMap:s,light:n}=this,{renderer:r,scene:i}=e;t.updateMatrices(n),s.setSize(t.mapSize.width,t.mapSize.height,s.depth),r.render(i,t.camera)}updateShadow(e){const{shadowMap:t,light:s,shadow:n}=this,{renderer:r,scene:i,camera:a}=e,u=r.shadowMap.type,c=t.depthTexture.version;this._depthVersionCached=c;const l=n.camera.layers.mask;(n.camera.layers.mask&4294967294)===0&&(n.camera.layers.mask=a.layers.mask);const d=r.getRenderObjectFunction(),p=r.getMRT(),f=p?p.has("velocity"):!1;$o=zv(r,i,$o),i.overrideMaterial=ng(s),r.setRenderObjectFunction(rg(r,n,u,f)),r.setClearColor(0,0),r.setRenderTarget(t),this.renderShadow(e),r.setRenderObjectFunction(d),u===ni&&n.isPointLightShadow!==!0&&this.vsmPass(r),n.camera.layers.mask=l,$v(r,i,$o)}vsmPass(e){const{shadow:t}=this,s=this.shadowMap.depth;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height,s),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height,s),e.setRenderTarget(this.vsmShadowMapVertical),jr.material=this.vsmMaterialVertical,jr.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),jr.material=this.vsmMaterialHorizontal,jr.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),super.dispose()}updateBefore(e){const{shadow:t}=this;let s=t.needsUpdate||t.autoUpdate;s&&(this._cameraFrameId[e.camera]===e.frameId&&(s=!1),this._cameraFrameId[e.camera]=e.frameId),s&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const og=(o,e)=>C(new ig(o,e)),Kv=new kt,vt=N(([o,e])=>{const t=o.toVar(),s=de(t),n=at(1,Te(s.x,Te(s.y,s.z)));s.mulAssign(n),t.mulAssign(n.mul(e.mul(2).oneMinus()));const r=M(t.xy).toVar(),a=e.mul(1.5).oneMinus();return W(s.z.greaterThanEqual(a),()=>{W(t.z.greaterThan(0),()=>{r.x.assign(Q(4,t.x))})}).ElseIf(s.x.greaterThanEqual(a),()=>{const u=xr(t.x);r.x.assign(t.z.mul(u).add(u.mul(2)))}).ElseIf(s.y.greaterThanEqual(a),()=>{const u=xr(t.y);r.x.assign(t.x.add(u.mul(2)).add(2)),r.y.assign(t.z.mul(u).sub(2))}),M(.125,.25).mul(r).add(M(.375,.75)).flipY()}).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),ag=N(({depthTexture:o,bd3D:e,dp:t,texelSize:s})=>K(o,vt(e,s.y)).compare(t)),ug=N(({depthTexture:o,bd3D:e,dp:t,texelSize:s,shadow:n})=>{const r=le("radius","float",n).setGroup($),i=M(-1,1).mul(r).mul(s.y);return K(o,vt(e.add(i.xyy),s.y)).compare(t).add(K(o,vt(e.add(i.yyy),s.y)).compare(t)).add(K(o,vt(e.add(i.xyx),s.y)).compare(t)).add(K(o,vt(e.add(i.yyx),s.y)).compare(t)).add(K(o,vt(e,s.y)).compare(t)).add(K(o,vt(e.add(i.xxy),s.y)).compare(t)).add(K(o,vt(e.add(i.yxy),s.y)).compare(t)).add(K(o,vt(e.add(i.xxx),s.y)).compare(t)).add(K(o,vt(e.add(i.yxx),s.y)).compare(t)).mul(1/9)}),Yv=N(({filterFn:o,depthTexture:e,shadowCoord:t,shadow:s})=>{const n=t.xyz.toVar(),r=n.length(),i=k("float").setGroup($).onRenderUpdate(()=>s.camera.near),a=k("float").setGroup($).onRenderUpdate(()=>s.camera.far),u=le("bias","float",s).setGroup($),c=k(s.mapSize).setGroup($),l=g(1).toVar();return W(r.sub(a).lessThanEqual(0).and(r.sub(i).greaterThanEqual(0)),()=>{const d=r.sub(i).div(a.sub(i)).toVar();d.addAssign(u);const p=n.normalize(),f=M(1).div(c.mul(M(4,2)));l.assign(o({depthTexture:e,bd3D:p,dp:d,texelSize:f,shadow:s}))}),l}),wl=new fe,on=new $e,Wn=new $e;class Qv extends ig{static get type(){return"PointShadowNode"}constructor(e,t=null){super(e,t)}getShadowFilterFn(e){return e===My?ag:ug}setupShadowCoord(e,t){return t}setupShadowFilter(e,{filterFn:t,shadowTexture:s,depthTexture:n,shadowCoord:r,shadow:i}){return Yv({filterFn:t,shadowTexture:s,depthTexture:n,shadowCoord:r,shadow:i})}renderShadow(e){const{shadow:t,shadowMap:s,light:n}=this,{renderer:r,scene:i}=e,a=t.getFrameExtents();Wn.copy(t.mapSize),Wn.multiply(a),s.setSize(Wn.width,Wn.height),on.copy(t.mapSize);const u=r.autoClear,c=r.getClearColor(Kv),l=r.getClearAlpha();r.autoClear=!1,r.setClearColor(t.clearColor,t.clearAlpha),r.clear();const d=t.getViewportCount();for(let p=0;p<d;p++){const f=t.getViewport(p),m=on.x*f.x,y=Wn.y-on.y-on.y*f.y;wl.set(m,y,on.x*f.z,on.y*f.w),s.viewport.copy(wl),t.updateMatrices(n,p),r.render(i,t.camera)}r.autoClear=u,r.setClearColor(c,l)}}const cg=(o,e)=>C(new Qv(o,e));class Js extends Pn{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.light=e,this.color=new kt,this.colorNode=e&&e.colorNode||k(this.color).setGroup($),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0,this.updateType=q.FRAME}getHash(){return this.light.uuid}getLightVector(e){return hc(this.light).sub(e.context.positionView||Ne)}setupDirect(){}setupDirectRectArea(){}setupShadowNode(){return og(this.light)}setupShadow(e){const{renderer:t}=e;if(t.shadowMap.enabled===!1)return;let s=this.shadowColorNode;if(s===null){const n=this.light.shadow.shadowNode;let r;n!==void 0?r=C(n):r=this.setupShadowNode(),this.shadowNode=r,this.shadowColorNode=s=this.colorNode.mul(r),this.baseColorNode=this.colorNode}this.colorNode=s}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):this.shadowNode!==null&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null);const t=this.setupDirect(e),s=this.setupDirectRectArea(e);t&&e.lightsNode.setupDirectLight(e,this,t),s&&e.lightsNode.setupDirectRectAreaLight(e,this,s)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const gc=N(({lightDistance:o,cutoffDistance:e,decayExponent:t})=>{const s=o.pow(t).max(.01).reciprocal();return e.greaterThan(0).select(s.mul(o.div(e).pow4().oneMinus().clamp().pow2()),s)}),lg=({color:o,lightVector:e,cutoffDistance:t,decayExponent:s})=>{const n=e.normalize(),r=e.length(),i=gc({lightDistance:r,cutoffDistance:t,decayExponent:s}),a=o.mul(i);return{lightDirection:n,lightColor:a}};class Zv extends Js{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=k(0).setGroup($),this.decayExponentNode=k(2).setGroup($)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setupShadowNode(){return cg(this.light)}setupDirect(e){return lg({color:this.colorNode,lightVector:this.getLightVector(e),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode})}}const Jv=N(([o=ce()])=>{const e=o.mul(2),t=e.x.floor(),s=e.y.floor();return t.add(s).mod(2).sign()}),eR=N(([o=ce()],{renderer:e,material:t})=>{const s=Au(o.mul(2).sub(1));let n;if(t.alphaToCoverage&&e.samples>1){const r=g(s.fwidth()).toVar();n=Vt(r.oneMinus(),r.add(1),s).oneMinus()}else n=Ie(s.greaterThan(1),0,1);return n}),ar=N(([o,e,t])=>{const s=g(t).toVar(),n=g(e).toVar(),r=yt(o).toVar();return Ie(r,n,s)}).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),Pi=N(([o,e])=>{const t=yt(e).toVar(),s=g(o).toVar();return Ie(t,s.negate(),s)}).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),ve=N(([o])=>{const e=g(o).toVar();return x(Lt(e))}).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),ye=N(([o,e])=>{const t=g(o).toVar();return e.assign(ve(t)),t.sub(g(e))}),tR=N(([o,e,t,s,n,r])=>{const i=g(r).toVar(),a=g(n).toVar(),u=g(s).toVar(),c=g(t).toVar(),l=g(e).toVar(),d=g(o).toVar(),p=g(Q(1,a)).toVar();return Q(1,i).mul(d.mul(p).add(l.mul(a))).add(i.mul(c.mul(p).add(u.mul(a))))}).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),sR=N(([o,e,t,s,n,r])=>{const i=g(r).toVar(),a=g(n).toVar(),u=b(s).toVar(),c=b(t).toVar(),l=b(e).toVar(),d=b(o).toVar(),p=g(Q(1,a)).toVar();return Q(1,i).mul(d.mul(p).add(l.mul(a))).add(i.mul(c.mul(p).add(u.mul(a))))}).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]}),dg=ke([tR,sR]),nR=N(([o,e,t,s,n,r,i,a,u,c,l])=>{const d=g(l).toVar(),p=g(c).toVar(),f=g(u).toVar(),m=g(a).toVar(),y=g(i).toVar(),T=g(r).toVar(),S=g(n).toVar(),R=g(s).toVar(),w=g(t).toVar(),L=g(e).toVar(),F=g(o).toVar(),P=g(Q(1,f)).toVar(),B=g(Q(1,p)).toVar();return g(Q(1,d)).toVar().mul(B.mul(F.mul(P).add(L.mul(f))).add(p.mul(w.mul(P).add(R.mul(f))))).add(d.mul(B.mul(S.mul(P).add(T.mul(f))).add(p.mul(y.mul(P).add(m.mul(f))))))}).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),rR=N(([o,e,t,s,n,r,i,a,u,c,l])=>{const d=g(l).toVar(),p=g(c).toVar(),f=g(u).toVar(),m=b(a).toVar(),y=b(i).toVar(),T=b(r).toVar(),S=b(n).toVar(),R=b(s).toVar(),w=b(t).toVar(),L=b(e).toVar(),F=b(o).toVar(),P=g(Q(1,f)).toVar(),B=g(Q(1,p)).toVar();return g(Q(1,d)).toVar().mul(B.mul(F.mul(P).add(L.mul(f))).add(p.mul(w.mul(P).add(R.mul(f))))).add(d.mul(B.mul(S.mul(P).add(T.mul(f))).add(p.mul(y.mul(P).add(m.mul(f))))))}).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),hg=ke([nR,rR]),iR=N(([o,e,t])=>{const s=g(t).toVar(),n=g(e).toVar(),r=I(o).toVar(),i=I(r.bitAnd(I(7))).toVar(),a=g(ar(i.lessThan(I(4)),n,s)).toVar(),u=g(X(2,ar(i.lessThan(I(4)),s,n))).toVar();return Pi(a,yt(i.bitAnd(I(1)))).add(Pi(u,yt(i.bitAnd(I(2)))))}).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),oR=N(([o,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),i=g(e).toVar(),a=I(o).toVar(),u=I(a.bitAnd(I(15))).toVar(),c=g(ar(u.lessThan(I(8)),i,r)).toVar(),l=g(ar(u.lessThan(I(4)),r,ar(u.equal(I(12)).or(u.equal(I(14))),i,n))).toVar();return Pi(c,yt(u.bitAnd(I(1)))).add(Pi(l,yt(u.bitAnd(I(2)))))}).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),De=ke([iR,oR]),aR=N(([o,e,t])=>{const s=g(t).toVar(),n=g(e).toVar(),r=Bn(o).toVar();return b(De(r.x,n,s),De(r.y,n,s),De(r.z,n,s))}).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),uR=N(([o,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),i=g(e).toVar(),a=Bn(o).toVar();return b(De(a.x,i,r,n),De(a.y,i,r,n),De(a.z,i,r,n))}).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),ut=ke([aR,uR]),cR=N(([o])=>{const e=g(o).toVar();return X(.6616,e)}).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),lR=N(([o])=>{const e=g(o).toVar();return X(.982,e)}).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),dR=N(([o])=>{const e=b(o).toVar();return X(.6616,e)}).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),pg=ke([cR,dR]),hR=N(([o])=>{const e=b(o).toVar();return X(.982,e)}).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),fg=ke([lR,hR]),nt=N(([o,e])=>{const t=x(e).toVar(),s=I(o).toVar();return s.shiftLeft(t).bitOr(s.shiftRight(x(32).sub(t)))}).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),mg=N(([o,e,t])=>{o.subAssign(t),o.bitXorAssign(nt(t,x(4))),t.addAssign(e),e.subAssign(o),e.bitXorAssign(nt(o,x(6))),o.addAssign(t),t.subAssign(e),t.bitXorAssign(nt(e,x(8))),e.addAssign(o),o.subAssign(t),o.bitXorAssign(nt(t,x(16))),t.addAssign(e),e.subAssign(o),e.bitXorAssign(nt(o,x(19))),o.addAssign(t),t.subAssign(e),t.bitXorAssign(nt(e,x(4))),e.addAssign(o)}),Lr=N(([o,e,t])=>{const s=I(t).toVar(),n=I(e).toVar(),r=I(o).toVar();return s.bitXorAssign(n),s.subAssign(nt(n,x(14))),r.bitXorAssign(s),r.subAssign(nt(s,x(11))),n.bitXorAssign(r),n.subAssign(nt(r,x(25))),s.bitXorAssign(n),s.subAssign(nt(n,x(16))),r.bitXorAssign(s),r.subAssign(nt(s,x(4))),n.bitXorAssign(r),n.subAssign(nt(r,x(14))),s.bitXorAssign(n),s.subAssign(nt(n,x(24))),s}).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),ze=N(([o])=>{const e=I(o).toVar();return g(e).div(g(I(x(4294967295))))}).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),It=N(([o])=>{const e=g(o).toVar();return e.mul(e).mul(e).mul(e.mul(e.mul(6).sub(15)).add(10))}).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),pR=N(([o])=>{const e=x(o).toVar(),t=I(I(1)).toVar(),s=I(I(x(3735928559)).add(t.shiftLeft(I(2))).add(I(13))).toVar();return Lr(s.add(I(e)),s,s)}).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),fR=N(([o,e])=>{const t=x(e).toVar(),s=x(o).toVar(),n=I(I(2)).toVar(),r=I().toVar(),i=I().toVar(),a=I().toVar();return r.assign(i.assign(a.assign(I(x(3735928559)).add(n.shiftLeft(I(2))).add(I(13))))),r.addAssign(I(s)),i.addAssign(I(t)),Lr(r,i,a)}).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),mR=N(([o,e,t])=>{const s=x(t).toVar(),n=x(e).toVar(),r=x(o).toVar(),i=I(I(3)).toVar(),a=I().toVar(),u=I().toVar(),c=I().toVar();return a.assign(u.assign(c.assign(I(x(3735928559)).add(i.shiftLeft(I(2))).add(I(13))))),a.addAssign(I(r)),u.addAssign(I(n)),c.addAssign(I(s)),Lr(a,u,c)}).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),gR=N(([o,e,t,s])=>{const n=x(s).toVar(),r=x(t).toVar(),i=x(e).toVar(),a=x(o).toVar(),u=I(I(4)).toVar(),c=I().toVar(),l=I().toVar(),d=I().toVar();return c.assign(l.assign(d.assign(I(x(3735928559)).add(u.shiftLeft(I(2))).add(I(13))))),c.addAssign(I(a)),l.addAssign(I(i)),d.addAssign(I(r)),mg(c,l,d),c.addAssign(I(n)),Lr(c,l,d)}).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),yR=N(([o,e,t,s,n])=>{const r=x(n).toVar(),i=x(s).toVar(),a=x(t).toVar(),u=x(e).toVar(),c=x(o).toVar(),l=I(I(5)).toVar(),d=I().toVar(),p=I().toVar(),f=I().toVar();return d.assign(p.assign(f.assign(I(x(3735928559)).add(l.shiftLeft(I(2))).add(I(13))))),d.addAssign(I(c)),p.addAssign(I(u)),f.addAssign(I(a)),mg(d,p,f),d.addAssign(I(i)),p.addAssign(I(r)),Lr(d,p,f)}).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]}),oe=ke([pR,fR,mR,gR,yR]),xR=N(([o,e])=>{const t=x(e).toVar(),s=x(o).toVar(),n=I(oe(s,t)).toVar(),r=Bn().toVar();return r.x.assign(n.bitAnd(x(255))),r.y.assign(n.shiftRight(x(8)).bitAnd(x(255))),r.z.assign(n.shiftRight(x(16)).bitAnd(x(255))),r}).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),TR=N(([o,e,t])=>{const s=x(t).toVar(),n=x(e).toVar(),r=x(o).toVar(),i=I(oe(r,n,s)).toVar(),a=Bn().toVar();return a.x.assign(i.bitAnd(x(255))),a.y.assign(i.shiftRight(x(8)).bitAnd(x(255))),a.z.assign(i.shiftRight(x(16)).bitAnd(x(255))),a}).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),ct=ke([xR,TR]),_R=N(([o])=>{const e=M(o).toVar(),t=x().toVar(),s=x().toVar(),n=g(ye(e.x,t)).toVar(),r=g(ye(e.y,s)).toVar(),i=g(It(n)).toVar(),a=g(It(r)).toVar(),u=g(dg(De(oe(t,s),n,r),De(oe(t.add(x(1)),s),n.sub(1),r),De(oe(t,s.add(x(1))),n,r.sub(1)),De(oe(t.add(x(1)),s.add(x(1))),n.sub(1),r.sub(1)),i,a)).toVar();return pg(u)}).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),bR=N(([o])=>{const e=b(o).toVar(),t=x().toVar(),s=x().toVar(),n=x().toVar(),r=g(ye(e.x,t)).toVar(),i=g(ye(e.y,s)).toVar(),a=g(ye(e.z,n)).toVar(),u=g(It(r)).toVar(),c=g(It(i)).toVar(),l=g(It(a)).toVar(),d=g(hg(De(oe(t,s,n),r,i,a),De(oe(t.add(x(1)),s,n),r.sub(1),i,a),De(oe(t,s.add(x(1)),n),r,i.sub(1),a),De(oe(t.add(x(1)),s.add(x(1)),n),r.sub(1),i.sub(1),a),De(oe(t,s,n.add(x(1))),r,i,a.sub(1)),De(oe(t.add(x(1)),s,n.add(x(1))),r.sub(1),i,a.sub(1)),De(oe(t,s.add(x(1)),n.add(x(1))),r,i.sub(1),a.sub(1)),De(oe(t.add(x(1)),s.add(x(1)),n.add(x(1))),r.sub(1),i.sub(1),a.sub(1)),u,c,l)).toVar();return fg(d)}).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]}),yc=ke([_R,bR]),NR=N(([o])=>{const e=M(o).toVar(),t=x().toVar(),s=x().toVar(),n=g(ye(e.x,t)).toVar(),r=g(ye(e.y,s)).toVar(),i=g(It(n)).toVar(),a=g(It(r)).toVar(),u=b(dg(ut(ct(t,s),n,r),ut(ct(t.add(x(1)),s),n.sub(1),r),ut(ct(t,s.add(x(1))),n,r.sub(1)),ut(ct(t.add(x(1)),s.add(x(1))),n.sub(1),r.sub(1)),i,a)).toVar();return pg(u)}).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),SR=N(([o])=>{const e=b(o).toVar(),t=x().toVar(),s=x().toVar(),n=x().toVar(),r=g(ye(e.x,t)).toVar(),i=g(ye(e.y,s)).toVar(),a=g(ye(e.z,n)).toVar(),u=g(It(r)).toVar(),c=g(It(i)).toVar(),l=g(It(a)).toVar(),d=b(hg(ut(ct(t,s,n),r,i,a),ut(ct(t.add(x(1)),s,n),r.sub(1),i,a),ut(ct(t,s.add(x(1)),n),r,i.sub(1),a),ut(ct(t.add(x(1)),s.add(x(1)),n),r.sub(1),i.sub(1),a),ut(ct(t,s,n.add(x(1))),r,i,a.sub(1)),ut(ct(t.add(x(1)),s,n.add(x(1))),r.sub(1),i,a.sub(1)),ut(ct(t,s.add(x(1)),n.add(x(1))),r,i.sub(1),a.sub(1)),ut(ct(t.add(x(1)),s.add(x(1)),n.add(x(1))),r.sub(1),i.sub(1),a.sub(1)),u,c,l)).toVar();return fg(d)}).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),Dr=ke([NR,SR]),vR=N(([o])=>{const e=g(o).toVar(),t=x(ve(e)).toVar();return ze(oe(t))}).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),RR=N(([o])=>{const e=M(o).toVar(),t=x(ve(e.x)).toVar(),s=x(ve(e.y)).toVar();return ze(oe(t,s))}).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),AR=N(([o])=>{const e=b(o).toVar(),t=x(ve(e.x)).toVar(),s=x(ve(e.y)).toVar(),n=x(ve(e.z)).toVar();return ze(oe(t,s,n))}).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),wR=N(([o])=>{const e=O(o).toVar(),t=x(ve(e.x)).toVar(),s=x(ve(e.y)).toVar(),n=x(ve(e.z)).toVar(),r=x(ve(e.w)).toVar();return ze(oe(t,s,n,r))}).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]}),ER=ke([vR,RR,AR,wR]),CR=N(([o])=>{const e=g(o).toVar(),t=x(ve(e)).toVar();return b(ze(oe(t,x(0))),ze(oe(t,x(1))),ze(oe(t,x(2))))}).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),MR=N(([o])=>{const e=M(o).toVar(),t=x(ve(e.x)).toVar(),s=x(ve(e.y)).toVar();return b(ze(oe(t,s,x(0))),ze(oe(t,s,x(1))),ze(oe(t,s,x(2))))}).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),BR=N(([o])=>{const e=b(o).toVar(),t=x(ve(e.x)).toVar(),s=x(ve(e.y)).toVar(),n=x(ve(e.z)).toVar();return b(ze(oe(t,s,n,x(0))),ze(oe(t,s,n,x(1))),ze(oe(t,s,n,x(2))))}).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),FR=N(([o])=>{const e=O(o).toVar(),t=x(ve(e.x)).toVar(),s=x(ve(e.y)).toVar(),n=x(ve(e.z)).toVar(),r=x(ve(e.w)).toVar();return b(ze(oe(t,s,n,r,x(0))),ze(oe(t,s,n,r,x(1))),ze(oe(t,s,n,r,x(2))))}).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]}),go=ke([CR,MR,BR,FR]),Li=N(([o,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),i=x(e).toVar(),a=b(o).toVar(),u=g(0).toVar(),c=g(1).toVar();return ue(i,()=>{u.addAssign(c.mul(yc(a))),c.mulAssign(n),a.mulAssign(r)}),u}).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),yo=N(([o,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),i=x(e).toVar(),a=b(o).toVar(),u=b(0).toVar(),c=g(1).toVar();return ue(i,()=>{u.addAssign(c.mul(Dr(a))),c.mulAssign(n),a.mulAssign(r)}),u}).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),PR=N(([o,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),i=x(e).toVar(),a=b(o).toVar();return M(Li(a,i,r,n),Li(a.add(b(x(19),x(193),x(17))),i,r,n))}).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),LR=N(([o,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),i=x(e).toVar(),a=b(o).toVar(),u=b(yo(a,i,r,n)).toVar(),c=g(Li(a.add(b(x(19),x(193),x(17))),i,r,n)).toVar();return O(u,c)}).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),DR=N(([o,e,t,s,n,r,i])=>{const a=x(i).toVar(),u=g(r).toVar(),c=x(n).toVar(),l=x(s).toVar(),d=x(t).toVar(),p=x(e).toVar(),f=M(o).toVar(),m=b(go(M(p.add(l),d.add(c)))).toVar(),y=M(m.x,m.y).toVar();y.subAssign(.5),y.mulAssign(u),y.addAssign(.5);const T=M(M(g(p),g(d)).add(y)).toVar(),S=M(T.sub(f)).toVar();return W(a.equal(x(2)),()=>de(S.x).add(de(S.y))),W(a.equal(x(3)),()=>Te(de(S.x),de(S.y))),Ts(S,S)}).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),UR=N(([o,e,t,s,n,r,i,a,u])=>{const c=x(u).toVar(),l=g(a).toVar(),d=x(i).toVar(),p=x(r).toVar(),f=x(n).toVar(),m=x(s).toVar(),y=x(t).toVar(),T=x(e).toVar(),S=b(o).toVar(),R=b(go(b(T.add(f),y.add(p),m.add(d)))).toVar();R.subAssign(.5),R.mulAssign(l),R.addAssign(.5);const w=b(b(g(T),g(y),g(m)).add(R)).toVar(),L=b(w.sub(S)).toVar();return W(c.equal(x(2)),()=>de(L.x).add(de(L.y)).add(de(L.z))),W(c.equal(x(3)),()=>Te(de(L.x),de(L.y),de(L.z))),Ts(L,L)}).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),Ln=ke([DR,UR]),IR=N(([o,e,t])=>{const s=x(t).toVar(),n=g(e).toVar(),r=M(o).toVar(),i=x().toVar(),a=x().toVar(),u=M(ye(r.x,i),ye(r.y,a)).toVar(),c=g(1e6).toVar();return ue({start:-1,end:x(1),name:"x",condition:"<="},({x:l})=>{ue({start:-1,end:x(1),name:"y",condition:"<="},({y:d})=>{const p=g(Ln(u,l,d,i,a,n,s)).toVar();c.assign(Je(c,p))})}),W(s.equal(x(0)),()=>{c.assign(zt(c))}),c}).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),VR=N(([o,e,t])=>{const s=x(t).toVar(),n=g(e).toVar(),r=M(o).toVar(),i=x().toVar(),a=x().toVar(),u=M(ye(r.x,i),ye(r.y,a)).toVar(),c=M(1e6,1e6).toVar();return ue({start:-1,end:x(1),name:"x",condition:"<="},({x:l})=>{ue({start:-1,end:x(1),name:"y",condition:"<="},({y:d})=>{const p=g(Ln(u,l,d,i,a,n,s)).toVar();W(p.lessThan(c.x),()=>{c.y.assign(c.x),c.x.assign(p)}).ElseIf(p.lessThan(c.y),()=>{c.y.assign(p)})})}),W(s.equal(x(0)),()=>{c.assign(zt(c))}),c}).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),GR=N(([o,e,t])=>{const s=x(t).toVar(),n=g(e).toVar(),r=M(o).toVar(),i=x().toVar(),a=x().toVar(),u=M(ye(r.x,i),ye(r.y,a)).toVar(),c=b(1e6,1e6,1e6).toVar();return ue({start:-1,end:x(1),name:"x",condition:"<="},({x:l})=>{ue({start:-1,end:x(1),name:"y",condition:"<="},({y:d})=>{const p=g(Ln(u,l,d,i,a,n,s)).toVar();W(p.lessThan(c.x),()=>{c.z.assign(c.y),c.y.assign(c.x),c.x.assign(p)}).ElseIf(p.lessThan(c.y),()=>{c.z.assign(c.y),c.y.assign(p)}).ElseIf(p.lessThan(c.z),()=>{c.z.assign(p)})})}),W(s.equal(x(0)),()=>{c.assign(zt(c))}),c}).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),OR=N(([o,e,t])=>{const s=x(t).toVar(),n=g(e).toVar(),r=b(o).toVar(),i=x().toVar(),a=x().toVar(),u=x().toVar(),c=b(ye(r.x,i),ye(r.y,a),ye(r.z,u)).toVar(),l=g(1e6).toVar();return ue({start:-1,end:x(1),name:"x",condition:"<="},({x:d})=>{ue({start:-1,end:x(1),name:"y",condition:"<="},({y:p})=>{ue({start:-1,end:x(1),name:"z",condition:"<="},({z:f})=>{const m=g(Ln(c,d,p,f,i,a,u,n,s)).toVar();l.assign(Je(l,m))})})}),W(s.equal(x(0)),()=>{l.assign(zt(l))}),l}).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),kR=ke([IR,OR]),zR=N(([o,e,t])=>{const s=x(t).toVar(),n=g(e).toVar(),r=b(o).toVar(),i=x().toVar(),a=x().toVar(),u=x().toVar(),c=b(ye(r.x,i),ye(r.y,a),ye(r.z,u)).toVar(),l=M(1e6,1e6).toVar();return ue({start:-1,end:x(1),name:"x",condition:"<="},({x:d})=>{ue({start:-1,end:x(1),name:"y",condition:"<="},({y:p})=>{ue({start:-1,end:x(1),name:"z",condition:"<="},({z:f})=>{const m=g(Ln(c,d,p,f,i,a,u,n,s)).toVar();W(m.lessThan(l.x),()=>{l.y.assign(l.x),l.x.assign(m)}).ElseIf(m.lessThan(l.y),()=>{l.y.assign(m)})})})}),W(s.equal(x(0)),()=>{l.assign(zt(l))}),l}).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),$R=ke([VR,zR]),WR=N(([o,e,t])=>{const s=x(t).toVar(),n=g(e).toVar(),r=b(o).toVar(),i=x().toVar(),a=x().toVar(),u=x().toVar(),c=b(ye(r.x,i),ye(r.y,a),ye(r.z,u)).toVar(),l=b(1e6,1e6,1e6).toVar();return ue({start:-1,end:x(1),name:"x",condition:"<="},({x:d})=>{ue({start:-1,end:x(1),name:"y",condition:"<="},({y:p})=>{ue({start:-1,end:x(1),name:"z",condition:"<="},({z:f})=>{const m=g(Ln(c,d,p,f,i,a,u,n,s)).toVar();W(m.lessThan(l.x),()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(m)}).ElseIf(m.lessThan(l.y),()=>{l.z.assign(l.y),l.y.assign(m)}).ElseIf(m.lessThan(l.z),()=>{l.z.assign(m)})})})}),W(s.equal(x(0)),()=>{l.assign(zt(l))}),l}).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),xc=ke([GR,WR]),HR=N(([o,e,t,s,n,r,i,a,u,c,l])=>{const d=x(o).toVar(),p=M(e).toVar(),f=M(t).toVar(),m=M(s).toVar(),y=g(n).toVar(),T=g(r).toVar(),S=g(i).toVar(),R=yt(a).toVar(),w=x(u).toVar(),L=g(c).toVar(),F=g(l).toVar(),P=p.mul(f).add(m),B=g(0).toVar();return W(d.equal(x(0)),()=>{B.assign(Dr(P))}),W(d.equal(x(1)),()=>{B.assign(go(P))}),W(d.equal(x(2)),()=>{B.assign(xc(P,y,x(0)))}),W(d.equal(x(3)),()=>{B.assign(yo(b(P,0),w,L,F))}),B.assign(B.mul(S.sub(T)).add(T)),W(R,()=>{B.assign(xt(B,T,S))}),B}).setLayout({name:"mx_unifiednoise2d",type:"float",inputs:[{name:"noiseType",type:"int"},{name:"texcoord",type:"vec2"},{name:"freq",type:"vec2"},{name:"offset",type:"vec2"},{name:"jitter",type:"float"},{name:"outmin",type:"float"},{name:"outmax",type:"float"},{name:"clampoutput",type:"bool"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),qR=N(([o,e,t,s,n,r,i,a,u,c,l])=>{const d=x(o).toVar(),p=b(e).toVar(),f=b(t).toVar(),m=b(s).toVar(),y=g(n).toVar(),T=g(r).toVar(),S=g(i).toVar(),R=yt(a).toVar(),w=x(u).toVar(),L=g(c).toVar(),F=g(l).toVar(),P=p.mul(f).add(m),B=g(0).toVar();return W(d.equal(x(0)),()=>{B.assign(Dr(P))}),W(d.equal(x(1)),()=>{B.assign(go(P))}),W(d.equal(x(2)),()=>{B.assign(xc(P,y,x(0)))}),W(d.equal(x(3)),()=>{B.assign(yo(P,w,L,F))}),B.assign(B.mul(S.sub(T)).add(T)),W(R,()=>{B.assign(xt(B,T,S))}),B}).setLayout({name:"mx_unifiednoise3d",type:"float",inputs:[{name:"noiseType",type:"int"},{name:"position",type:"vec3"},{name:"freq",type:"vec3"},{name:"offset",type:"vec3"},{name:"jitter",type:"float"},{name:"outmin",type:"float"},{name:"outmax",type:"float"},{name:"clampoutput",type:"bool"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),XR=N(([o])=>{const e=o.y,t=o.z,s=b().toVar();return W(e.lessThan(1e-4),()=>{s.assign(b(t,t,t))}).Else(()=>{let n=o.x;n=n.sub(Lt(n)).mul(6).toVar();const r=x(vu(n)),i=n.sub(g(r)),a=t.mul(e.oneMinus()),u=t.mul(e.mul(i).oneMinus()),c=t.mul(e.mul(i.oneMinus()).oneMinus());W(r.equal(x(0)),()=>{s.assign(b(t,c,a))}).ElseIf(r.equal(x(1)),()=>{s.assign(b(u,t,a))}).ElseIf(r.equal(x(2)),()=>{s.assign(b(a,t,c))}).ElseIf(r.equal(x(3)),()=>{s.assign(b(a,u,t))}).ElseIf(r.equal(x(4)),()=>{s.assign(b(c,a,t))}).Else(()=>{s.assign(b(t,a,u))})}),s}).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),jR=N(([o])=>{const e=b(o).toVar(),t=g(e.x).toVar(),s=g(e.y).toVar(),n=g(e.z).toVar(),r=g(Je(t,Je(s,n))).toVar(),i=g(Te(t,Te(s,n))).toVar(),a=g(i.sub(r)).toVar(),u=g().toVar(),c=g().toVar(),l=g().toVar();return l.assign(i),W(i.greaterThan(0),()=>{c.assign(a.div(i))}).Else(()=>{c.assign(0)}),W(c.lessThanEqual(0),()=>{u.assign(0)}).Else(()=>{W(t.greaterThanEqual(i),()=>{u.assign(s.sub(n).div(a))}).ElseIf(s.greaterThanEqual(i),()=>{u.assign(Re(2,n.sub(t).div(a)))}).Else(()=>{u.assign(Re(4,t.sub(s).div(a)))}),u.mulAssign(1/6),W(u.lessThan(0),()=>{u.addAssign(1)})}),b(u,c,l)}).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),KR=N(([o])=>{const e=b(o).toVar(),t=cu(xu(e,b(.04045))).toVar(),s=b(e.div(12.92)).toVar(),n=b(pt(Te(e.add(b(.055)),b(0)).div(1.055),b(2.4))).toVar();return te(s,n,t)}).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),gg=(o,e)=>{o=g(o),e=g(e);const t=M(e.dFdx(),e.dFdy()).length().mul(.7071067811865476);return Vt(o.sub(t),o.add(t),e)},yg=(o,e,t,s)=>te(o,e,t[s].clamp()),YR=(o,e,t=ce())=>yg(o,e,t,"x"),QR=(o,e,t=ce())=>yg(o,e,t,"y"),ZR=(o,e,t,s,n=ce())=>{const r=n.x.clamp(),i=n.y.clamp(),a=te(o,e,r),u=te(t,s,r);return te(a,u,i)},xg=(o,e,t,s,n)=>te(o,e,gg(t,s[n])),JR=(o,e,t,s=ce())=>xg(o,e,t,s,"x"),eA=(o,e,t,s=ce())=>xg(o,e,t,s,"y"),tA=(o=1,e=0,t=ce())=>t.mul(o).add(e),sA=(o,e=1)=>(o=g(o),o.abs().pow(e).mul(o.sign())),nA=(o,e=1,t=.5)=>g(o).sub(t).mul(e).add(t),rA=(o=ce(),e=1,t=0)=>yc(o.convert("vec2|vec3")).mul(e).add(t),iA=(o=ce(),e=1,t=0)=>Dr(o.convert("vec2|vec3")).mul(e).add(t),oA=(o=ce(),e=1,t=0)=>(o=o.convert("vec2|vec3"),O(Dr(o),yc(o.add(M(19,73)))).mul(e).add(t)),aA=(o,e=ce(),t=M(1,1),s=M(0,0),n=1,r=0,i=1,a=!1,u=1,c=2,l=.5)=>HR(o,e.convert("vec2|vec3"),t,s,n,r,i,a,u,c,l),uA=(o,e=ce(),t=M(1,1),s=M(0,0),n=1,r=0,i=1,a=!1,u=1,c=2,l=.5)=>qR(o,e.convert("vec2|vec3"),t,s,n,r,i,a,u,c,l),cA=(o=ce(),e=1)=>kR(o.convert("vec2|vec3"),e,x(1)),lA=(o=ce(),e=1)=>$R(o.convert("vec2|vec3"),e,x(1)),dA=(o=ce(),e=1)=>xc(o.convert("vec2|vec3"),e,x(1)),hA=(o=ce())=>ER(o.convert("vec2|vec3")),pA=(o=ce(),e=3,t=2,s=.5,n=1)=>Li(o,x(e),t,s).mul(n),fA=(o=ce(),e=3,t=2,s=.5,n=1)=>PR(o,x(e),t,s).mul(n),mA=(o=ce(),e=3,t=2,s=.5,n=1)=>yo(o,x(e),t,s).mul(n),gA=(o=ce(),e=3,t=2,s=.5,n=1)=>LR(o,x(e),t,s).mul(n),yA=(o,e=g(0))=>Re(o,e),xA=(o,e=g(0))=>Q(o,e),TA=(o,e=g(1))=>X(o,e),_A=(o,e=g(1))=>at(o,e),bA=(o,e=g(1))=>Rr(o,e),NA=(o,e=g(1))=>pt(o,e),SA=(o=g(0),e=g(1))=>Yi(o,e),vA=()=>Ns,RA=()=>Bm,AA=(o,e=g(1))=>Q(e,o),wA=(o,e,t,s)=>o.greaterThan(e).mix(t,s),EA=(o,e,t,s)=>o.greaterThanEqual(e).mix(t,s),CA=(o,e,t,s)=>o.equal(e).mix(t,s),MA=(o,e=null)=>{if(typeof e=="string"){const t={x:0,r:0,y:1,g:1,z:2,b:2,w:3,a:3},s=e.replace(/^out/,"").toLowerCase();if(t[s]!==void 0)return o.element(t[s])}if(typeof e=="number")return o.element(e);if(typeof e=="string"&&e.length===1){const t={x:0,r:0,y:1,g:1,z:2,b:2,w:3,a:3};if(t[e]!==void 0)return o.element(t[e])}return o},BA=(o,e=M(.5,.5),t=M(1,1),s=g(0),n=M(0,0))=>{let r=o;if(e&&(r=r.sub(e)),t&&(r=r.mul(t)),s){const i=s.mul(Math.PI/180),a=i.cos(),u=i.sin();r=M(r.x.mul(a).sub(r.y.mul(u)),r.x.mul(u).add(r.y.mul(a)))}return e&&(r=r.add(e)),n&&(r=r.add(n)),r},FA=(o,e)=>{o=M(o),e=g(e);const t=e.mul(Math.PI/180);return Fr(o,t)},PA=(o,e,t)=>{o=b(o),e=g(e),t=b(t);const s=e.mul(Math.PI/180),n=t.normalize(),r=s.cos(),i=s.sin(),a=g(1).sub(r);return o.mul(r).add(n.cross(o).mul(i)).add(n.mul(n.dot(o)).mul(a))},LA=(o,e)=>(o=b(o),e=g(e),zu(o,e)),DA=N(([o,e,t])=>{const s=Qt(o).toVar(),n=Q(g(.5).mul(e.sub(t)),Ut).div(s).toVar(),r=Q(g(-.5).mul(e.sub(t)),Ut).div(s).toVar(),i=b().toVar();i.x=s.x.greaterThan(g(0)).select(n.x,r.x),i.y=s.y.greaterThan(g(0)).select(n.y,r.y),i.z=s.z.greaterThan(g(0)).select(n.z,r.z);const a=Je(i.x,i.y,i.z).toVar();return Ut.add(s.mul(a)).toVar().sub(t)}),Tg=N(([o,e])=>{const t=o.x,s=o.y,n=o.z;let r=e.element(0).mul(.886227);return r=r.add(e.element(1).mul(2*.511664).mul(s)),r=r.add(e.element(2).mul(2*.511664).mul(n)),r=r.add(e.element(3).mul(2*.511664).mul(t)),r=r.add(e.element(4).mul(2*.429043).mul(t).mul(s)),r=r.add(e.element(5).mul(2*.429043).mul(s).mul(n)),r=r.add(e.element(6).mul(n.mul(n).mul(.743125).sub(.247708))),r=r.add(e.element(7).mul(2*.429043).mul(t).mul(n)),r=r.add(e.element(8).mul(.429043).mul(X(t,t).sub(X(s,s)))),r});var h=Object.freeze({__proto__:null,BRDF_GGX:Ua,BRDF_Lambert:js,BasicPointShadowFilter:ag,BasicShadowFilter:Jm,Break:$f,Const:hp,Continue:f_,DFGApprox:ec,D_GGX:lm,Discard:Cp,EPSILON:Dh,F_Schlick:En,Fn:N,INFINITY:Wx,If:W,Loop:ue,NodeAccess:Oe,NodeShaderStage:Kn,NodeType:yx,NodeUpdateType:q,OnMaterialUpdate:TS,OnObjectUpdate:xS,PCFShadowFilter:eg,PCFSoftShadowFilter:tg,PI:Ei,PI2:Hx,PointShadowFilter:ug,Return:uT,Schlick_to_F0:hm,ScriptableNodeResources:fi,ShaderNode:fn,Stack:$i,Switch:Dx,TBNViewMatrix:Gs,VSMShadowFilter:sg,V_GGX_SmithCorrelated:cm,Var:dp,VarIntent:pp,abs:de,acesFilmicToneMapping:Wm,acos:bu,add:Re,addMethodChaining:A,addNodeElement:dT,agxToneMapping:Hm,all:Uh,alphaT:Ri,and:_h,anisotropy:is,anisotropyB:Hs,anisotropyT:sr,any:Ih,append:Gx,array:ph,arrayBuffer:Ix,asin:kh,assign:fh,atan:Yi,atan2:up,atomicAdd:Rv,atomicAnd:Cv,atomicFunc:Wt,atomicLoad:Sv,atomicMax:wv,atomicMin:Ev,atomicOr:Mv,atomicStore:vv,atomicSub:Av,atomicXor:Bv,attenuationColor:fu,attenuationDistance:pu,attribute:Jt,attributeArray:NS,backgroundBlurriness:Dm,backgroundIntensity:za,backgroundRotation:Um,batch:Of,bentNormalView:nf,billboarding:tS,bitAnd:vh,bitNot:Rh,bitOr:Ah,bitXor:wh,bitangentGeometry:XT,bitangentLocal:jT,bitangentView:tf,bitangentWorld:KT,bitcast:qx,blendBurn:Qf,blendColor:P_,blendDodge:Zf,blendOverlay:em,blendScreen:Jf,blur:xm,bool:yt,buffer:wr,bufferAttribute:Ar,bumpMap:zu,burn:D_,bvec2:nh,bvec3:cu,bvec4:ah,bypass:Rp,cache:rr,call:mh,cameraFar:as,cameraIndex:so,cameraNear:os,cameraNormalMatrix:ST,cameraPosition:Pp,cameraProjectionMatrix:Qs,cameraProjectionMatrixInverse:bT,cameraViewMatrix:_t,cameraWorldMatrix:NT,cbrt:np,cdl:VS,ceil:Ki,checker:Jv,cineonToneMapping:$m,clamp:xt,clearcoat:vi,clearcoatNormalView:Vs,clearcoatRoughness:gr,code:po,color:th,colorSpaceToWorking:to,colorToDirection:H_,compute:vp,computeKernel:Pu,computeSkinning:h_,context:Ji,convert:ch,convertColorSpace:Jx,convertToTexture:pS,cos:Ht,cross:Zi,cubeTexture:wn,cubeTextureBase:ku,cubeToUV:vt,dFdx:Nu,dFdy:Su,dashSize:ai,debug:Bp,decrement:Ph,decrementBefore:Bh,defaultBuildStages:Na,defaultShaderStages:jd,defined:hr,degrees:Gh,deltaTime:Mm,densityFog:ov,densityFogFactor:cc,depth:Yu,depthPass:$S,determinant:jh,difference:Jh,diffuseColor:ne,directPointLight:lg,directionToColor:sm,directionToFaceDirection:Fn,dispersion:mu,distance:Zh,div:at,dodge:U_,dot:Ts,drawIndex:If,dynamicBufferAttribute:Sp,element:uh,emissive:Aa,equal:yu,equals:Yh,equirectUV:Qu,exp:Tu,exp2:Rn,expression:Zt,faceDirection:Vu,faceForward:Cu,faceforward:Xx,float:g,floor:Lt,fog:_r,fract:es,frameGroup:hh,frameId:Bm,frontFacing:Ip,fwidth:qh,gain:GN,gapSize:wa,getConstNodeType:eh,getCurrentStack:zi,getDirection:gm,getDistanceAttenuation:gc,getGeometryRoughness:um,getNormalFromDepth:mS,getParallaxCorrectNormal:DA,getRoughness:Ju,getScreenPosition:fS,getShIrradianceAt:Tg,getShadowMaterial:ng,getShadowRenderObjectFunction:rg,getTextureIndex:Em,getViewPosition:ln,globalId:hv,glsl:ZS,glslFn:JS,grayscale:LS,greaterThan:xu,greaterThanEqual:Th,hash:VN,highpModelNormalViewMatrix:Ma,highpModelViewMatrix:Ca,hue:IS,increment:Fh,incrementBefore:Mh,instance:i_,instanceIndex:ms,instancedArray:SS,instancedBufferAttribute:Ci,instancedDynamicBufferAttribute:Ea,instancedMesh:Gf,int:x,inverse:Kh,inverseSqrt:_u,inversesqrt:jx,invocationLocalIndex:r_,invocationSubgroupIndex:n_,ior:nr,iridescence:qi,iridescenceIOR:lu,iridescenceThickness:du,ivec2:Pe,ivec3:rh,ivec4:ih,js:YS,label:lp,length:Dt,lengthSq:Au,lessThan:yh,lessThanEqual:xh,lightPosition:dc,lightProjectionUV:Qm,lightShadowMatrix:mo,lightTargetDirection:pc,lightTargetPosition:Zm,lightViewPosition:hc,lightingContext:Hf,lights:Lv,linearDepth:Bi,linearToneMapping:km,localId:pv,log:ji,log2:Pt,logarithmicDepthToViewZ:R_,luminance:ac,mat2:Wi,mat3:We,mat4:Ws,matcapUV:bm,materialAO:Df,materialAlphaTest:rf,materialAnisotropy:_f,materialAnisotropyVector:cn,materialAttenuationColor:Ef,materialAttenuationDistance:wf,materialClearcoat:ff,materialClearcoatNormal:gf,materialClearcoatRoughness:mf,materialColor:of,materialDispersion:Lf,materialEmissive:uf,materialEnvIntensity:li,materialEnvRotation:Ou,materialIOR:Af,materialIridescence:bf,materialIridescenceIOR:Nf,materialIridescenceThickness:Sf,materialLightMap:Wu,materialLineDashOffset:Ff,materialLineDashSize:Mf,materialLineGapSize:Bf,materialLineScale:Cf,materialLineWidth:t_,materialMetalness:hf,materialNormal:pf,materialOpacity:$u,materialPointSize:Pf,materialReference:jt,materialReflectivity:di,materialRefractionRatio:kp,materialRotation:yf,materialRoughness:df,materialSheen:xf,materialSheenRoughness:Tf,materialShininess:af,materialSpecular:cf,materialSpecularColor:lf,materialSpecularIntensity:Da,materialSpecularStrength:ir,materialThickness:Rf,materialTransmission:vf,max:Te,maxMipLevel:Lu,mediumpModelViewMatrix:Up,metalness:mr,min:Je,mix:te,mixElement:ip,mod:Rr,modInt:Lh,modelDirection:CT,modelNormalMatrix:Dp,modelPosition:MT,modelRadius:PT,modelScale:BT,modelViewMatrix:Zs,modelViewPosition:FT,modelViewProjection:Hu,modelWorldMatrix:ft,modelWorldMatrixInverse:LT,morphReference:Wf,mrt:Cm,mul:X,mx_aastep:gg,mx_add:yA,mx_atan2:SA,mx_cell_noise_float:hA,mx_contrast:nA,mx_divide:_A,mx_fractal_noise_float:pA,mx_fractal_noise_vec2:fA,mx_fractal_noise_vec3:mA,mx_fractal_noise_vec4:gA,mx_frame:RA,mx_heighttonormal:LA,mx_hsvtorgb:XR,mx_ifequal:CA,mx_ifgreater:wA,mx_ifgreatereq:EA,mx_invert:AA,mx_modulo:bA,mx_multiply:TA,mx_noise_float:rA,mx_noise_vec3:iA,mx_noise_vec4:oA,mx_place2d:BA,mx_power:NA,mx_ramp4:ZR,mx_ramplr:YR,mx_ramptb:QR,mx_rgbtohsv:jR,mx_rotate2d:FA,mx_rotate3d:PA,mx_safepower:sA,mx_separate:MA,mx_splitlr:JR,mx_splittb:eA,mx_srgb_texture_to_lin_rec709:KR,mx_subtract:xA,mx_timer:vA,mx_transform_uv:tA,mx_unifiednoise2d:aA,mx_unifiednoise3d:uA,mx_worley_noise_float:cA,mx_worley_noise_vec2:lA,mx_worley_noise_vec3:dA,negate:zh,neutralToneMapping:qm,nodeArray:$s,nodeImmutable:D,nodeObject:C,nodeObjectIntent:Yn,nodeObjects:Sr,nodeProxy:H,nodeProxyIntent:G,normalFlat:Vp,normalGeometry:no,normalLocal:et,normalMap:La,normalView:ae,normalViewGeometry:An,normalWorld:_s,normalWorldGeometry:Gp,normalize:Qt,not:Nh,notEqual:gh,numWorkgroups:lv,objectDirection:vT,objectGroup:gu,objectPosition:Lp,objectRadius:ET,objectScale:AT,objectViewPosition:wT,objectWorldMatrix:RT,oneMinus:$h,or:bh,orthographicDepthToViewZ:v_,oscSawtooth:ZN,oscSine:KN,oscSquare:YN,oscTriangle:QN,output:_n,outputStruct:UN,overlay:V_,overloadingFn:ke,parabola:ka,parallaxDirection:sf,parallaxUV:YT,parameter:MN,pass:kS,passTexture:zS,pcurve:ON,perspectiveDepthToViewZ:ju,pmremTexture:rc,pointShadow:cg,pointUV:RS,pointWidth:Ox,positionGeometry:Cr,positionLocal:be,positionPrevious:Mi,positionView:Ne,positionViewDirection:me,positionWorld:Ut,positionWorldDirection:Iu,posterize:OS,pow:pt,pow2:Ru,pow3:ep,pow4:tp,premultiplyAlpha:tm,property:Kt,radians:Vh,rand:rp,range:uv,rangeFog:iv,rangeFogFactor:uc,reciprocal:Hh,reference:le,referenceBuffer:Ba,reflect:Qh,reflectVector:Wp,reflectView:zp,reflector:uS,refract:Eu,refractVector:Hp,refractView:$p,reinhardToneMapping:zm,remap:wp,remapClamp:Ep,renderGroup:$,renderOutput:Mp,rendererReference:_p,rotate:Fr,rotateUV:JN,roughness:Ft,round:Wh,rtt:Pm,sRGBTransferEOTF:gp,sRGBTransferOETF:yp,sample:yS,sampler:gT,samplerComparison:yT,saturate:wu,saturation:DS,screen:I_,screenCoordinate:Br,screenSize:Tr,screenUV:Yt,scriptable:rv,scriptableValue:pi,select:Ie,setCurrentStack:pr,setName:Mu,shaderStages:Sa,shadow:og,shadowPositionWorld:mc,shapeCircle:eR,sharedUniformGroup:Xi,sheen:Is,sheenRoughness:Hi,shiftLeft:Eh,shiftRight:Ch,shininess:Ai,sign:xr,sin:rt,sinc:kN,skinning:zf,smoothstep:Vt,smoothstepElement:op,specularColor:je,specularF90:yr,spherizeUV:eS,split:Vx,spritesheetUV:rS,sqrt:zt,stack:hi,step:Qi,stepElement:ap,storage:qs,storageBarrier:yv,storageObject:d_,storageTexture:Im,string:Ux,struct:DN,sub:Q,subBuild:bn,subgroupIndex:s_,subgroupSize:fv,tan:Oh,tangentGeometry:io,tangentLocal:Mr,tangentView:oo,tangentWorld:ef,temp:fp,texture:K,texture3D:Vm,textureBarrier:xv,textureBicubic:fb,textureBicubicLevel:tc,textureCubeUV:ym,textureLoad:_e,textureSize:fs,textureStore:wS,thickness:hu,time:Ns,timerDelta:jN,timerGlobal:XN,timerLocal:qN,toneMapping:bp,toneMappingExposure:Np,toonOutlinePass:HS,transformDirection:sp,transformNormal:Op,transformNormalToView:Gu,transformedClearcoatNormalView:VT,transformedNormalView:UT,transformedNormalWorld:IT,transmission:wi,transpose:Xh,triNoise3D:$N,triplanarTexture:iS,triplanarTextures:Fm,trunc:vu,uint:I,uniform:k,uniformArray:ht,uniformCubeTexture:OT,uniformGroup:dh,uniformTexture:mT,unpremultiplyAlpha:L_,userData:BS,uv:ce,uvec2:sh,uvec3:Bn,uvec4:oh,varying:$t,varyingProperty:fr,vec2:M,vec3:b,vec4:O,vectorComponents:Ks,velocity:PS,vertexColor:Yf,vertexIndex:Uf,vertexStage:mp,vibrance:US,viewZToLogarithmicDepth:Ku,viewZToOrthographicDepth:Sn,viewZToPerspectiveDepth:jf,viewport:Nn,viewportCoordinate:Xf,viewportDepthTexture:Xu,viewportLinearDepth:A_,viewportMipTexture:qu,viewportResolution:b_,viewportSafeUV:sS,viewportSharedTexture:W_,viewportSize:qf,viewportTexture:N_,viewportUV:__,wgsl:QS,wgslFn:ev,workgroupArray:bv,workgroupBarrier:gv,workgroupId:dv,workingToColorSpace:xp,xor:Sh});const St=new ic;class UA extends bs{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,s){const n=this.renderer,r=this.nodes.getBackgroundNode(e)||e.background;let i=!1;if(r===null)n._clearColor.getRGB(St),St.a=n._clearColor.a;else if(r.isColor===!0)r.getRGB(St),St.a=1,i=!0;else if(r.isNode===!0){const u=this.get(e),c=r;St.copy(n._clearColor);let l=u.backgroundMesh;if(l===void 0){let y=function(){r.removeEventListener("dispose",y),l.material.dispose(),l.geometry.dispose()};const p=Ji(O(c).mul(za),{getUV:()=>Um.mul(Gp),getTextureLevel:()=>Dm});let f=Hu;f=f.setZ(f.w);const m=new Se;m.name="Background.material",m.side=Ze,m.depthTest=!1,m.depthWrite=!1,m.allowOverride=!1,m.fog=!1,m.lights=!1,m.vertexNode=f,m.colorNode=p,u.backgroundMeshNode=p,u.backgroundMesh=l=new gs(new ay(1,32,32),m),l.frustumCulled=!1,l.name="Background.mesh",l.onBeforeRender=function(T,S,R){this.matrixWorld.copyPosition(R.matrixWorld)},r.addEventListener("dispose",y)}const d=c.getCacheKey();u.backgroundCacheKey!==d&&(u.backgroundMeshNode.node=O(c).mul(za),u.backgroundMeshNode.needsUpdate=!0,l.material.needsUpdate=!0,u.backgroundCacheKey=d),t.unshift(l,l.geometry,l.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",r);const a=n.xr.getEnvironmentBlendMode();if(a==="additive"?St.set(0,0,0,1):a==="alpha-blend"&&St.set(0,0,0,0),n.autoClear===!0||i===!0){const u=s.clearColorValue;u.r=St.r,u.g=St.g,u.b=St.b,u.a=St.a,(n.backend.isWebGLBackend===!0||n.alpha===!0)&&(u.r*=u.a,u.g*=u.a,u.b*=u.a),s.depthClearValue=n._clearDepth,s.stencilClearValue=n._clearStencil,s.clearColor=n.autoClearColor===!0,s.clearDepth=n.autoClearDepth===!0,s.clearStencil=n.autoClearStencil===!0}else s.clearColor=!1,s.clearDepth=!1,s.clearStencil=!1}}let IA=0;class $a{constructor(e="",t=[],s=0,n=[]){this.name=e,this.bindings=t,this.index=s,this.bindingsReference=n,this.id=IA++}}class VA{constructor(e,t,s,n,r,i,a,u,c,l=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=s,this.transforms=l,this.nodeAttributes=n,this.bindings=r,this.updateNodes=i,this.updateBeforeNodes=a,this.updateAfterNodes=u,this.observer=c,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings)if(t.bindings[0].groupNode.shared!==!0){const n=new $a(t.name,[],t.index,t);e.push(n);for(const r of t.bindings)n.bindings.push(r.clone())}else e.push(t);return e}}class El{constructor(e,t,s=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=s}}class GA{constructor(e,t,s){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=s.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class _g{constructor(e,t,s=!1,n=null){this.isNodeVar=!0,this.name=e,this.type=t,this.readOnly=s,this.count=n}}class OA extends _g{constructor(e,t,s=null,n=null){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0,this.interpolationType=s,this.interpolationSampling=n}}class kA{constructor(e,t,s=""){this.name=e,this.type=t,this.code=s,Object.defineProperty(this,"isNodeCode",{value:!0})}}let zA=0;class Wo{constructor(e=null){this.id=zA++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return t===void 0&&this.parent!==null&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class $A{constructor(e,t){this.name=e,this.members=t,this.output=!1}}class Ss{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class WA extends Ss{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class HA extends Ss{constructor(e,t=new $e){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class qA extends Ss{constructor(e,t=new Y){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class XA extends Ss{constructor(e,t=new fe){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class jA extends Ss{constructor(e,t=new kt){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class KA extends Ss{constructor(e,t=new Ld){super(e,t),this.isMatrix2Uniform=!0,this.boundary=8,this.itemSize=4}}class YA extends Ss{constructor(e,t=new Nr){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class QA extends Ss{constructor(e,t=new Ue){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class ZA extends WA{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class JA extends HA{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class ew extends qA{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class tw extends XA{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class sw extends jA{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class nw extends KA{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class rw extends YA{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class iw extends QA{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}const Cl=new WeakMap,ow=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),Kr=o=>/e/g.test(o)?String(o).replace(/\+/g,""):(o=Number(o),o+(o%1?"":".0"));class bg{constructor(e,t,s){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=s,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.observer=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.declarations={},this.flow={code:""},this.chaining=[],this.stack=hi(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new Wo,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.subBuildLayers=[],this.currentStack=null,this.subBuildFn=null}getBindGroupsCache(){let e=Cl.get(this.renderer);return e===void 0&&(e=new Et,Cl.set(this.renderer,e)),e}createRenderTarget(e,t,s){return new xs(e,t,s)}createCubeRenderTarget(e,t){return new nm(e,t)}includes(e){return this.nodes.includes(e)}getOutputStructName(){}_getBindGroup(e,t){const s=this.getBindGroupsCache(),n=[];let r=!0;for(const a of t)n.push(a),r=r&&a.groupNode.shared!==!0;let i;return r?(i=s.get(n),i===void 0&&(i=new $a(e,n,this.bindingsIndexes[e].group,n),s.set(n,i))):i=new $a(e,n,this.bindingsIndexes[e].group,n),i}getBindGroupArray(e,t){const s=this.bindings[t];let n=s[e];return n===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),s[e]=n=[]),n}getBindings(){let e=this.bindGroups;if(e===null){const t={},s=this.bindings;for(const n of Sa)for(const r in s[n]){const i=s[n][r];(t[r]||(t[r]=[])).push(...i)}e=[];for(const n in t){const r=t[n],i=this._getBindGroup(n,r);e.push(i)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((t,s)=>t.bindings[0].groupNode.order-s.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){const s=e[t];this.bindingsIndexes[s.name].group=t,s.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){this.sequentialNodes.includes(e)===!1&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes)e.getUpdateType()!==q.NONE&&this.updateNodes.push(e.getSelf());for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),s=e.getUpdateAfterType();t!==q.NONE&&this.updateBeforeNodes.push(e.getSelf()),s!==q.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===ot||e.magFilter===ia||e.magFilter===cr||e.magFilter===zs||e.minFilter===ot||e.minFilter===ia||e.minFilter===cr||e.minFilter===zs}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const s=this.getDataFromNode(e);return s.cache===void 0&&(s.cache=new Wo(t?this.getCache():null)),s.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=t.usageCount===void 0?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateArrayDeclaration(e,t){return this.getType(e)+"[ "+t+" ]"}generateArray(e,t,s=null){let n=this.generateArrayDeclaration(e,t)+"( ";for(let r=0;r<t;r++){const i=s?s[r]:null;i!==null?n+=i.build(this,e):n+=this.generateConst(e),r<t-1&&(n+=", ")}return n+=" )",n}generateStruct(e,t,s=null){const n=[];for(const r of t){const{name:i,type:a}=r;s&&s[i]&&s[i].isNode?n.push(s[i].build(this,a)):n.push(this.generateConst(a))}return e+"( "+n.join(", ")+" )"}generateConst(e,t=null){if(t===null&&(e==="float"||e==="int"||e==="uint"?t=0:e==="bool"?t=!1:e==="color"?t=new kt:e==="vec2"?t=new $e:e==="vec3"?t=new Y:e==="vec4"&&(t=new fe)),e==="float")return Kr(t);if(e==="int")return`${Math.round(t)}`;if(e==="uint")return t>=0?`${Math.round(t)}u`:"0u";if(e==="bool")return t?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${Kr(t.r)}, ${Kr(t.g)}, ${Kr(t.b)} )`;const s=this.getTypeLength(e),n=this.getComponentType(e),r=i=>this.generateConst(n,i);if(s===2)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)} )`;if(s===3)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)} )`;if(s===4&&e!=="mat2")return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)}, ${r(t.w)} )`;if(s>=4&&t&&(t.isMatrix2||t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(r).join(", ")} )`;if(s>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,t){const s=this.attributes;for(const r of s)if(r.name===e)return r;const n=new El(e,t);return this.registerDeclaration(n),s.push(n),n}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="samplerComparison"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===qe)return"int";if(t===Ce)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return t===null?null:t[1]==="b"?"bool":t[1]==="i"?"int":t[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,t="float"){if(e===1)return t;let s=zd(e);const n=t==="float"?"":t[0];return/mat2/.test(t)===!0&&(s=s.replace("vec","mat")),n+s}getTypeFromArray(e){return ow.get(e.constructor)}isInteger(e){return/int|uint|(i|u)vec/.test(e)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const s=t.array,n=e.itemSize,r=e.normalized;let i;return!(e instanceof Id)&&r!==!0&&(i=this.getTypeFromArray(s)),this.getTypeFromLength(n,i)}getTypeLength(e){const t=this.getVectorType(e),s=/vec([2-4])/.exec(t);return s!==null?Number(s[1]):t==="float"||t==="bool"||t==="int"||t==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return t==="int"||t==="uint"?e:this.changeComponentType(e,"int")}addStack(){return this.stack=hi(this.stack),this.stacks.push(zi()||this.stack),pr(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,pr(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,s=null){s=s===null?e.isGlobal(this)?this.globalCache:this.cache:s;let n=s.getData(e);n===void 0&&(n={},s.setData(e,n)),n[t]===void 0&&(n[t]={});let r=n[t];const i=n.any?n.any.subBuilds:null,a=this.getClosestSubBuild(i);return a&&(r.subBuildsCache===void 0&&(r.subBuildsCache={}),r=r.subBuildsCache[a]||(r.subBuildsCache[a]={}),r.subBuilds=i),r}getNodeProperties(e,t="any"){const s=this.getDataFromNode(e,t);return s.properties||(s.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const s=this.getDataFromNode(e);let n=s.bufferAttribute;if(n===void 0){const r=this.uniforms.index++;n=new El("nodeAttribute"+r,t,e),this.bufferAttributes.push(n),s.bufferAttribute=n}return n}getStructTypeFromNode(e,t,s=null,n=this.shaderStage){const r=this.getDataFromNode(e,n,this.globalCache);let i=r.structType;if(i===void 0){const a=this.structs.index++;s===null&&(s="StructType"+a),i=new $A(s,t),this.structs[n].push(i),r.structType=i}return i}getOutputStructTypeFromNode(e,t){const s=this.getStructTypeFromNode(e,t,"OutputType","fragment");return s.output=!0,s}getUniformFromNode(e,t,s=this.shaderStage,n=null){const r=this.getDataFromNode(e,s,this.globalCache);let i=r.uniform;if(i===void 0){const a=this.uniforms.index++;i=new GA(n||"nodeUniform"+a,t,e),this.uniforms[s].push(i),this.registerDeclaration(i),r.uniform=i}return i}getVarFromNode(e,t=null,s=e.getNodeType(this),n=this.shaderStage,r=!1){const i=this.getDataFromNode(e,n),a=this.getSubBuildProperty("variable",i.subBuilds);let u=i[a];if(u===void 0){const c=r?"_const":"_var",l=this.vars[n]||(this.vars[n]=[]),d=this.vars[c]||(this.vars[c]=0);t===null&&(t=(r?"nodeConst":"nodeVar")+d,this.vars[c]++),a!=="variable"&&(t=this.getSubBuildProperty(t,i.subBuilds));const p=e.getArrayCount(this);u=new _g(t,s,r,p),r||l.push(u),this.registerDeclaration(u),i[a]=u}return u}isDeterministic(e){if(e.isMathNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0)&&(e.cNode?this.isDeterministic(e.cNode):!0);if(e.isOperatorNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0);if(e.isArrayNode){if(e.values!==null){for(const t of e.values)if(!this.isDeterministic(t))return!1}return!0}else if(e.isConstNode)return!0;return!1}getVaryingFromNode(e,t=null,s=e.getNodeType(this),n=null,r=null){const i=this.getDataFromNode(e,"any"),a=this.getSubBuildProperty("varying",i.subBuilds);let u=i[a];if(u===void 0){const c=this.varyings,l=c.length;t===null&&(t="nodeVarying"+l),a!=="varying"&&(t=this.getSubBuildProperty(t,i.subBuilds)),u=new OA(t,s,n,r),c.push(u),this.registerDeclaration(u),i[a]=u}return u}registerDeclaration(e){const t=this.shaderStage,s=this.declarations[t]||(this.declarations[t]={}),n=this.getPropertyName(e);let r=1,i=n;for(;s[i]!==void 0;)i=n+"_"+r++;r>1&&(e.name=i,console.warn(`THREE.TSL: Declaration name '${n}' of '${e.type}' already in use. Renamed to '${i}'.`)),s[i]=e}getCodeFromNode(e,t,s=this.shaderStage){const n=this.getDataFromNode(e);let r=n.code;if(r===void 0){const i=this.codes[s]||(this.codes[s]=[]),a=i.length;r=new kA("nodeCode"+a,t),i.push(r),n.code=r}return r}addFlowCodeHierarchy(e,t){const{flowCodes:s,flowCodeBlock:n}=this.getDataFromNode(e);let r=!0,i=t;for(;i;){if(n.get(i)===!0){r=!1;break}i=this.getDataFromNode(i).parentNodeBlock}if(r)for(const a of s)this.addLineFlowCode(a)}addLineFlowCodeBlock(e,t,s){const n=this.getDataFromNode(e),r=n.flowCodes||(n.flowCodes=[]),i=n.flowCodeBlock||(n.flowCodeBlock=new WeakMap);r.push(t),i.set(s,!0)}addLineFlowCode(e,t=null){return e===""?this:(t!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),s=this.flowChildNode(e,t);return this.flowsData.set(e,s),s}addInclude(e){this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(e)}buildFunctionNode(e){const t=new Xm,s=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=s,t}flowShaderNode(e){const t=e.layout,s={[Symbol.iterator](){let i=0;const a=Object.values(this);return{next:()=>({value:a[i],done:i++>=a.length})}}};for(const i of t.inputs)s[i.name]=new Am(i.type,i.name);e.layout=null;const n=e.call(s),r=this.flowStagesNode(n,t.type);return e.layout=t,r}flowBuildStage(e,t,s=null){const n=this.getBuildStage();this.setBuildStage(t);const r=e.build(this,s);return this.setBuildStage(n),r}flowStagesNode(e,t=null){const s=this.flow,n=this.vars,r=this.declarations,i=this.cache,a=this.buildStage,u=this.stack,c={code:""};this.flow=c,this.vars={},this.declarations={},this.cache=new Wo,this.stack=hi();for(const l of Na)this.setBuildStage(l),c.result=e.build(this,t);return c.vars=this.getVars(this.shaderStage),this.flow=s,this.vars=n,this.declarations=r,this.cache=i,this.stack=u,this.setBuildStage(a),c}getFunctionOperator(){return null}buildFunctionCode(){console.warn("Abstract function.")}flowChildNode(e,t=null){const s=this.flow,n={code:""};return this.flow=n,n.result=e.build(this,t),this.flow=s,n}flowNodeFromShaderStage(e,t,s=null,n=null){const r=this.tab,i=this.cache,a=this.shaderStage,u=this.context;this.setShaderStage(e);const c={...this.context};delete c.nodeBlock,this.cache=this.globalCache,this.tab="	",this.context=c;let l=null;if(this.buildStage==="generate"){const d=this.flowChildNode(t,s);n!==null&&(d.code+=`${this.tab+n} = ${d.result};
`),this.flowCode[e]=this.flowCode[e]+d.code,l=d}else l=t.build(this);return this.setShaderStage(a),this.cache=i,this.tab=r,this.context=u,l}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t,s=null){return`${s!==null?this.generateArrayDeclaration(e,s):this.getType(e)} ${t}`}getVars(e){let t="";const s=this.vars[e];if(s!==void 0)for(const n of s)t+=`${this.getVar(n.type,n.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let s="";if(t!==void 0)for(const n of t)s+=n.code+`
`;return s}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}get subBuild(){return this.subBuildLayers[this.subBuildLayers.length-1]||null}addSubBuild(e){this.subBuildLayers.push(e)}removeSubBuild(){return this.subBuildLayers.pop()}getClosestSubBuild(e){let t;if(e&&e.isNode?e.isShaderCallNodeInternal?t=e.shaderNode.subBuilds:e.isStackNode?t=[e.subBuild]:t=this.getDataFromNode(e,"any").subBuilds:e instanceof Set?t=[...e]:t=e,!t)return null;const s=this.subBuildLayers;for(let n=t.length-1;n>=0;n--){const r=t[n];if(s.includes(r))return r}return null}getSubBuildOutput(e){return this.getSubBuildProperty("outputNode",e)}getSubBuildProperty(e="",t=null){let s;t!==null?s=this.getClosestSubBuild(t):s=this.subBuildFn;let n;return s?n=e?s+"_"+e:s:n=e,n}build(){const{object:e,material:t,renderer:s}=this;if(t!==null){let n=s.library.fromMaterial(t);n===null&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),n=new Se),n.build(this)}else this.addFlow("compute",e);for(const n of Na){this.setBuildStage(n),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const r of Sa){this.setShaderStage(r);const i=this.flowNodes[r];for(const a of i)n==="generate"?this.flowNode(a):a.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if(t==="float"||t==="int"||t==="uint")return new ZA(e);if(t==="vec2"||t==="ivec2"||t==="uvec2")return new JA(e);if(t==="vec3"||t==="ivec3"||t==="uvec3")return new ew(e);if(t==="vec4"||t==="ivec4"||t==="uvec4")return new tw(e);if(t==="color")return new sw(e);if(t==="mat2")return new nw(e);if(t==="mat3")return new rw(e);if(t==="mat4")return new iw(e);throw new Error(`Uniform "${t}" not declared.`)}format(e,t,s){if(t=this.getVectorType(t),s=this.getVectorType(s),t===s||s===null||this.isReference(s))return e;const n=this.getTypeLength(t),r=this.getTypeLength(s);return n===16&&r===9?`${this.getType(s)}( ${e}[ 0 ].xyz, ${e}[ 1 ].xyz, ${e}[ 2 ].xyz )`:n===9&&r===4?`${this.getType(s)}( ${e}[ 0 ].xy, ${e}[ 1 ].xy )`:n>4||r>4||r===0?e:n===r?`${this.getType(s)}( ${e} )`:n>r?(e=s==="bool"?`all( ${e} )`:`${e}.${"xyz".slice(0,r)}`,this.format(e,this.getTypeFromLength(r,this.getComponentType(t)),s)):r===4&&n>1?`${this.getType(s)}( ${this.format(e,t,"vec3")}, 1.0 )`:n===2?`${this.getType(s)}( ${this.format(e,t,"vec2")}, 0.0 )`:(n===1&&r>1&&t!==this.getComponentType(s)&&(e=`${this.getType(this.getComponentType(s))}( ${e} )`),`${this.getType(s)}( ${e} )`)}getSignature(){return`// Three.js r${nd} - Node System
`}*[Symbol.iterator](){}}class Ml{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let s=e.get(t);return s===void 0&&(s={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,s)),s}updateBeforeNode(e){const t=e.getUpdateBeforeType(),s=e.updateReference(this);if(t===q.FRAME){const{frameMap:n}=this._getMaps(this.updateBeforeMap,s);n.get(s)!==this.frameId&&e.updateBefore(this)!==!1&&n.set(s,this.frameId)}else if(t===q.RENDER){const{renderMap:n}=this._getMaps(this.updateBeforeMap,s);n.get(s)!==this.renderId&&e.updateBefore(this)!==!1&&n.set(s,this.renderId)}else t===q.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),s=e.updateReference(this);if(t===q.FRAME){const{frameMap:n}=this._getMaps(this.updateAfterMap,s);n.get(s)!==this.frameId&&e.updateAfter(this)!==!1&&n.set(s,this.frameId)}else if(t===q.RENDER){const{renderMap:n}=this._getMaps(this.updateAfterMap,s);n.get(s)!==this.renderId&&e.updateAfter(this)!==!1&&n.set(s,this.renderId)}else t===q.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),s=e.updateReference(this);if(t===q.FRAME){const{frameMap:n}=this._getMaps(this.updateMap,s);n.get(s)!==this.frameId&&e.update(this)!==!1&&n.set(s,this.frameId)}else if(t===q.RENDER){const{renderMap:n}=this._getMaps(this.updateMap,s);n.get(s)!==this.renderId&&e.update(this)!==!1&&n.set(s,this.renderId)}else t===q.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class Tc{constructor(e,t,s=null,n="",r=!1){this.type=e,this.name=t,this.count=s,this.qualifier=n,this.isConst=r}}Tc.isNodeFunctionInput=!0;class aw extends Js{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setupDirect(){const e=this.colorNode;return{lightDirection:pc(this.light),lightColor:e}}}const Ho=new Ue,Yr=new Ue;let Hn=null;class uw extends Js{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=k(new Y).setGroup($),this.halfWidth=k(new Y).setGroup($),this.updateType=q.RENDER}update(e){super.update(e);const{light:t}=this,s=e.camera.matrixWorldInverse;Yr.identity(),Ho.copy(t.matrixWorld),Ho.premultiply(s),Yr.extractRotation(Ho),this.halfWidth.value.set(t.width*.5,0,0),this.halfHeight.value.set(0,t.height*.5,0),this.halfWidth.value.applyMatrix4(Yr),this.halfHeight.value.applyMatrix4(Yr)}setupDirectRectArea(e){let t,s;e.isAvailable("float32Filterable")?(t=K(Hn.LTC_FLOAT_1),s=K(Hn.LTC_FLOAT_2)):(t=K(Hn.LTC_HALF_1),s=K(Hn.LTC_HALF_2));const{colorNode:n,light:r}=this,i=hc(r);return{lightColor:n,lightPosition:i,halfWidth:this.halfWidth,halfHeight:this.halfHeight,ltc_1:t,ltc_2:s}}static setLTC(e){Hn=e}}class _c extends Js{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=k(0).setGroup($),this.penumbraCosNode=k(0).setGroup($),this.cutoffDistanceNode=k(0).setGroup($),this.decayExponentNode=k(0).setGroup($),this.colorNode=k(this.color).setGroup($)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e,t){const{coneCosNode:s,penumbraCosNode:n}=this;return Vt(s,n,t)}getLightCoord(e){const t=e.getNodeProperties(this);let s=t.projectionUV;return s===void 0&&(s=Qm(this.light,e.context.positionWorld),t.projectionUV=s),s}setupDirect(e){const{colorNode:t,cutoffDistanceNode:s,decayExponentNode:n,light:r}=this,i=this.getLightVector(e),a=i.normalize(),u=a.dot(pc(r)),c=this.getSpotAttenuation(e,u),l=i.length(),d=gc({lightDistance:l,cutoffDistance:s,decayExponent:n});let p=t.mul(c).mul(d),f,m;return r.colorNode?(m=this.getLightCoord(e),f=r.colorNode(m)):r.map&&(m=this.getLightCoord(e),f=K(r.map,m.xy).onRenderUpdate(()=>r.map)),f&&(p=m.mul(2).sub(1).abs().lessThan(1).all().select(p.mul(f),p)),{lightColor:p,lightDirection:a}}}class cw extends _c{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e,t){const s=this.light.iesMap;let n=null;if(s&&s.isTexture===!0){const r=t.acos().mul(1/Math.PI);n=K(s,M(r,0),0).r}else n=super.getSpotAttenuation(t);return n}}const lw=N(([o,e])=>{const t=o.abs().sub(e);return Dt(Te(t,0)).add(Je(Te(t.x,t.y),0))});class dw extends _c{static get type(){return"ProjectorLightNode"}update(e){super.update(e);const t=this.light;if(this.penumbraCosNode.value=Math.min(Math.cos(t.angle*(1-t.penumbra)),.99999),t.aspect===null){let s=1;t.map!==null&&(s=t.map.width/t.map.height),t.shadow.aspect=s}else t.shadow.aspect=t.aspect}getSpotAttenuation(e){const t=g(0),s=this.penumbraCosNode,n=mo(this.light).mul(e.context.positionWorld||Ut);return W(n.w.greaterThan(0),()=>{const r=n.xyz.div(n.w),i=lw(r.xy.sub(M(.5)),M(.5)),a=at(-1,Q(1,bu(s)).sub(1));t.assign(wu(i.mul(-2).mul(a)))}),t}}class hw extends Js{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class pw extends Js{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=dc(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=k(new kt).setGroup($)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:s,lightDirectionNode:n}=this,i=_s.dot(n).mul(.5).add(.5),a=te(s,t,i);e.context.irradiance.addAssign(a)}}class fw extends Js{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let s=0;s<9;s++)t.push(new Y);this.lightProbe=ht(t)}update(e){const{light:t}=this;super.update(e);for(let s=0;s<9;s++)this.lightProbe.array[s].copy(t.sh.coefficients[s]).multiplyScalar(t.intensity)}setup(e){const t=Tg(_s,this.lightProbe);e.context.irradiance.addAssign(t)}}class Ng{parseFunction(){console.warn("Abstract function.")}}class bc{constructor(e,t,s="",n=""){this.type=e,this.inputs=t,this.name=s,this.precision=n}getCode(){console.warn("Abstract function.")}}bc.isNodeFunction=!0;const mw=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,gw=/[a-z_0-9]+/ig,Bl="#pragma main",yw=o=>{o=o.trim();const e=o.indexOf(Bl),t=e!==-1?o.slice(e+Bl.length):o,s=t.match(mw);if(s!==null&&s.length===5){const n=s[4],r=[];let i=null;for(;(i=gw.exec(n))!==null;)r.push(i);const a=[];let u=0;for(;u<r.length;){const m=r[u][0]==="const";m===!0&&u++;let y=r[u][0];y==="in"||y==="out"||y==="inout"?u++:y="";const T=r[u++][0];let S=Number.parseInt(r[u][0]);Number.isNaN(S)===!1?u++:S=null;const R=r[u++][0];a.push(new Tc(T,R,S,y,m))}const c=t.substring(s[0].length),l=s[3]!==void 0?s[3]:"",d=s[2],p=s[1]!==void 0?s[1]:"",f=e!==-1?o.slice(0,e):"";return{type:d,inputs:a,name:l,precision:p,inputsCode:n,blockCode:c,headerCode:f}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class xw extends bc{constructor(e){const{type:t,inputs:s,name:n,precision:r,inputsCode:i,blockCode:a,headerCode:u}=yw(e);super(t,s,n,r),this.inputsCode=i,this.blockCode=a,this.headerCode=u}getCode(e=this.name){let t;const s=this.blockCode;if(s!==""){const{type:n,inputsCode:r,headerCode:i,precision:a}=this;let u=`${n} ${e} ( ${r.trim()} )`;a!==""&&(u=`${a} ${u}`),t=i+u+s}else t="";return t}}class Tw extends Ng{parseFunction(e){return new xw(e)}}const Fl=new WeakMap,Bt=[],Cs=[];class _w extends bs{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new Ml,this.nodeBuilderCache=new Map,this.callHashCache=new Et,this.groupsData=new Et,this.cacheLib={}}updateGroup(e){const t=e.groupNode,s=t.name;if(s===gu.name)return!0;if(s===$.name){const r=this.get(e),i=this.nodeFrame.renderId;return r.renderId!==i?(r.renderId=i,!0):!1}if(s===hh.name){const r=this.get(e),i=this.nodeFrame.frameId;return r.frameId!==i?(r.frameId=i,!0):!1}Bt[0]=t,Bt[1]=e;let n=this.groupsData.get(Bt);return n===void 0&&this.groupsData.set(Bt,n={}),Bt.length=0,n.version!==t.version?(n.version=t.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let s=t.nodeBuilderState;if(s===void 0){const{nodeBuilderCache:n}=this,r=this.getForRenderCacheKey(e);if(s=n.get(r),s===void 0){const i=this.backend.createNodeBuilder(e.object,this.renderer);i.scene=e.scene,i.material=e.material,i.camera=e.camera,i.context.material=e.material,i.lightsNode=e.lightsNode,i.environmentNode=this.getEnvironmentNode(e.scene),i.fogNode=this.getFogNode(e.scene),i.clippingContext=e.clippingContext,this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview&&i.enableMultiview(),i.build(),s=this._createNodeBuilderState(i),n.set(r,s)}s.usedTimes++,t.nodeBuilderState=s}return s}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,t.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let s=t.nodeBuilderState;if(s===void 0){const n=this.backend.createNodeBuilder(e,this.renderer);n.build(),s=this._createNodeBuilderState(n),t.nodeBuilderState=s}return s}_createNodeBuilderState(e){return new VA(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.observer,e.transforms)}getEnvironmentNode(e){this.updateEnvironment(e);let t=null;if(e.environmentNode&&e.environmentNode.isNode)t=e.environmentNode;else{const s=this.get(e);s.environmentNode&&(t=s.environmentNode)}return t}getBackgroundNode(e){this.updateBackground(e);let t=null;if(e.backgroundNode&&e.backgroundNode.isNode)t=e.backgroundNode;else{const s=this.get(e);s.backgroundNode&&(t=s.backgroundNode)}return t}getFogNode(e){return this.updateFog(e),e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){Bt[0]=e,Bt[1]=t;const s=this.renderer.info.calls,n=this.callHashCache.get(Bt)||{};if(n.callId!==s){const r=this.getEnvironmentNode(e),i=this.getFogNode(e);t&&Cs.push(t.getCacheKey(!0)),r&&Cs.push(r.getCacheKey()),i&&Cs.push(i.getCacheKey()),Cs.push(this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview?1:0),Cs.push(this.renderer.shadowMap.enabled?1:0),n.callId=s,n.cacheKey=Gi(Cs),this.callHashCache.set(Bt,n),Cs.length=0}return Bt.length=0,n.cacheKey}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),s=e.background;if(s){const n=e.backgroundBlurriness===0&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&t.backgroundBlurriness===0;if(t.background!==s||n){const r=this.getCacheNode("background",s,()=>{if(s.isCubeTexture===!0||s.mapping===Qa||s.mapping===Za||s.mapping===ra){if(e.backgroundBlurriness>0||s.mapping===ra)return rc(s);{let i;return s.isCubeTexture===!0?i=wn(s):i=K(s),im(i)}}else{if(s.isTexture===!0)return K(s,Yt.flipY()).setUpdateMatrix(!0);s.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",s)}},n);t.backgroundNode=r,t.background=s,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}getCacheNode(e,t,s,n=!1){const r=this.cacheLib[e]||(this.cacheLib[e]=new WeakMap);let i=r.get(t);return(i===void 0||n)&&(i=s(),r.set(t,i)),i}updateFog(e){const t=this.get(e),s=e.fog;if(s){if(t.fog!==s){const n=this.getCacheNode("fog",s,()=>{if(s.isFogExp2){const r=le("color","color",s).setGroup($),i=le("density","float",s).setGroup($);return _r(r,cc(i))}else if(s.isFog){const r=le("color","color",s).setGroup($),i=le("near","float",s).setGroup($),a=le("far","float",s).setGroup($);return _r(r,uc(i,a))}else console.error("THREE.Renderer: Unsupported fog configuration.",s)});t.fogNode=n,t.fog=s}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),s=e.environment;if(s){if(t.environment!==s){const n=this.getCacheNode("environment",s,()=>{if(s.isCubeTexture===!0)return wn(s);if(s.isTexture===!0)return K(s);console.error("Nodes: Unsupported environment configuration.",s)});t.environmentNode=n,t.environment=s}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,s=null,n=null,r=null){const i=this.nodeFrame;return i.renderer=e,i.scene=t,i.object=s,i.camera=n,i.material=r,i}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace+","+e.xr.isPresenting}hasOutputChange(e){return Fl.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,s=this.getOutputCacheKey(),n=e.isArrayTexture?Vm(e,b(Yt,Er("gl_ViewID_OVR"))).renderOutput(t.toneMapping,t.currentColorSpace):K(e,Yt).renderOutput(t.toneMapping,t.currentColorSpace);return Fl.set(e,s),n}updateBefore(e){const t=e.getNodeBuilderState();for(const s of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(s)}updateAfter(e){const t=e.getNodeBuilderState();for(const s of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(s)}updateForCompute(e){const t=this.getNodeFrame(),s=this.getForCompute(e);for(const n of s.updateNodes)t.updateNode(n)}updateForRender(e){const t=this.getNodeFrameForRender(e),s=e.getNodeBuilderState();for(const n of s.updateNodes)t.updateNode(n)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new Ml,this.nodeBuilderCache=new Map,this.cacheLib={}}}const qo=new sd;class Di{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",this.shadowPass=!1,this.viewNormalMatrix=new Nr,this.clippingGroupContexts=new WeakMap,this.intersectionPlanes=[],this.unionPlanes=[],this.parentVersion=null,e!==null&&(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix)}projectPlanes(e,t,s){const n=e.length;for(let r=0;r<n;r++){qo.copy(e[r]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const i=t[s+r],a=qo.normal;i.x=-a.x,i.y=-a.y,i.z=-a.z,i.w=qo.constant}}updateGlobal(e,t){this.shadowPass=e.overrideMaterial!==null&&e.overrideMaterial.isShadowPassMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let s=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const n=t.clippingPlanes,r=n.length;let i,a;if(this.clipIntersection?(i=this.intersectionPlanes,a=e.intersectionPlanes.length):(i=this.unionPlanes,a=e.unionPlanes.length),i.length!==a+r){i.length=a+r;for(let u=0;u<r;u++)i[a+u]=new fe;s=!0}this.projectPlanes(n,i,a),s&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return t===void 0&&(t=new Di(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}}class bw{constructor(e,t){this.bundleGroup=e,this.camera=t}}const qn=[];class Nw{constructor(){this.bundles=new Et}get(e,t){const s=this.bundles;qn[0]=e,qn[1]=t;let n=s.get(qn);return n===void 0&&(n=new bw(e,t),s.set(qn,n)),qn.length=0,n}dispose(){this.bundles=new Et}}class Sg{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const s=this.getMaterialNodeClass(e.type);if(s!==null){t=new s;for(const n in e)t[n]=e[n]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,s){if(s.has(t)){console.warn(`Redefinition of node ${t}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t=="function"||typeof t=="object")throw new Error(`Base class ${t} is not a class.`);s.set(t,e)}addClass(e,t,s){if(s.has(t)){console.warn(`Redefinition of node ${t.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t!="function")throw new Error(`Base class ${t.name} is not a class.`);s.set(t,e)}}const Sw=new fc,Xn=[];class vw extends Et{constructor(){super()}createNode(e=[]){return new fc().setLights(e)}getNode(e,t){if(e.isQuadMesh)return Sw;Xn[0]=e,Xn[1]=t;let s=this.get(Xn);return s===void 0&&(s=this.createNode(),this.set(Xn,s)),Xn.length=0,s}}class Qn extends xs{constructor(e=1,t=1,s={}){super(e,t,s),this.isXRRenderTarget=!0,this._hasExternalTextures=!1,this._autoAllocateDepthBuffer=!0,this._isOpaqueFramebuffer=!1}copy(e){return super.copy(e),this._hasExternalTextures=e._hasExternalTextures,this._autoAllocateDepthBuffer=e._autoAllocateDepthBuffer,this._isOpaqueFramebuffer=e._isOpaqueFramebuffer,this}}const Pl=new Y,Ll=new Y;class Rw extends Ya{constructor(e,t=!1){super(),this.enabled=!1,this.isPresenting=!1,this.cameraAutoUpdate=!0,this._renderer=e,this._cameraL=new mi,this._cameraL.viewport=new fe,this._cameraR=new mi,this._cameraR.viewport=new fe,this._cameras=[this._cameraL,this._cameraR],this._cameraXR=new sy,this._currentDepthNear=null,this._currentDepthFar=null,this._controllers=[],this._controllerInputSources=[],this._xrRenderTarget=null,this._layers=[],this._supportsLayers=!1,this._supportsGlBinding=typeof XRWebGLBinding<"u",this._frameBufferTargets=null,this._createXRLayer=Bw.bind(this),this._gl=null,this._currentAnimationContext=null,this._currentAnimationLoop=null,this._currentPixelRatio=null,this._currentSize=new $e,this._onSessionEvent=Ew.bind(this),this._onSessionEnd=Cw.bind(this),this._onInputSourcesChange=Mw.bind(this),this._onAnimationFrame=Fw.bind(this),this._referenceSpace=null,this._referenceSpaceType="local-floor",this._customReferenceSpace=null,this._framebufferScaleFactor=1,this._foveation=1,this._session=null,this._glBaseLayer=null,this._glBinding=null,this._glProjLayer=null,this._xrFrame=null,this._useLayers=this._supportsGlBinding&&"createProjectionLayer"in XRWebGLBinding.prototype,this._useMultiviewIfPossible=t,this._useMultiview=!1}getController(e){return this._getController(e).getTargetRaySpace()}getControllerGrip(e){return this._getController(e).getGripSpace()}getHand(e){return this._getController(e).getHandSpace()}getFoveation(){if(!(this._glProjLayer===null&&this._glBaseLayer===null))return this._foveation}setFoveation(e){this._foveation=e,this._glProjLayer!==null&&(this._glProjLayer.fixedFoveation=e),this._glBaseLayer!==null&&this._glBaseLayer.fixedFoveation!==void 0&&(this._glBaseLayer.fixedFoveation=e)}getFramebufferScaleFactor(){return this._framebufferScaleFactor}setFramebufferScaleFactor(e){this._framebufferScaleFactor=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change framebuffer scale while presenting.")}getReferenceSpaceType(){return this._referenceSpaceType}setReferenceSpaceType(e){this._referenceSpaceType=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change reference space type while presenting.")}getReferenceSpace(){return this._customReferenceSpace||this._referenceSpace}setReferenceSpace(e){this._customReferenceSpace=e}getCamera(){return this._cameraXR}getEnvironmentBlendMode(){if(this._session!==null)return this._session.environmentBlendMode}getFrame(){return this._xrFrame}useMultiview(){return this._useMultiview}createQuadLayer(e,t,s,n,r,i,a,u={}){const c=new ny(e,t),l=new Qn(r,i,{format:At,type:it,depthTexture:new wt(r,i,u.stencil?ds:Ce,void 0,void 0,void 0,void 0,void 0,void 0,u.stencil?hs:ps),stencilBuffer:u.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});l._autoAllocateDepthBuffer=!0;const d=new Ps({color:16777215,side:xn});d.map=l.texture,d.map.offset.y=1,d.map.repeat.y=-1;const p=new gs(c,d);p.position.copy(s),p.quaternion.copy(n);const f={type:"quad",width:e,height:t,translation:s,quaternion:n,pixelwidth:r,pixelheight:i,plane:p,material:d,rendercall:a,renderTarget:l};if(this._layers.push(f),this._session!==null){f.plane.material=new Ps({color:16777215,side:xn}),f.plane.material.blending=Jn,f.plane.material.blendEquation=Xt,f.plane.material.blendSrc=rs,f.plane.material.blendDst=rs,f.xrlayer=this._createXRLayer(f);const m=this._session.renderState.layers;m.unshift(f.xrlayer),this._session.updateRenderState({layers:m})}else l.isXRRenderTarget=!1;return p}createCylinderLayer(e,t,s,n,r,i,a,u,c={}){const l=new ry(e,e,e*t/s,64,64,!0,Math.PI-t/2,t),d=new Qn(i,a,{format:At,type:it,depthTexture:new wt(i,a,c.stencil?ds:Ce,void 0,void 0,void 0,void 0,void 0,void 0,c.stencil?hs:ps),stencilBuffer:c.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});d._autoAllocateDepthBuffer=!0;const p=new Ps({color:16777215,side:Ze});p.map=d.texture,p.map.offset.y=1,p.map.repeat.y=-1;const f=new gs(l,p);f.position.copy(n),f.quaternion.copy(r);const m={type:"cylinder",radius:e,centralAngle:t,aspectratio:s,translation:n,quaternion:r,pixelwidth:i,pixelheight:a,plane:f,material:p,rendercall:u,renderTarget:d};if(this._layers.push(m),this._session!==null){m.plane.material=new Ps({color:16777215,side:Ze}),m.plane.material.blending=Jn,m.plane.material.blendEquation=Xt,m.plane.material.blendSrc=rs,m.plane.material.blendDst=rs,m.xrlayer=this._createXRLayer(m);const y=this._session.renderState.layers;y.unshift(m.xrlayer),this._session.updateRenderState({layers:y})}else d.isXRRenderTarget=!1;return f}renderLayers(){const e=new Y,t=new iy,s=this._renderer,n=this.isPresenting,r=s.getOutputRenderTarget(),i=s._frameBufferTarget;this.isPresenting=!1;const a=new $e;s.getSize(a);const u=s._quad;for(const c of this._layers)if(c.renderTarget.isXRRenderTarget=this._session!==null,c.renderTarget._hasExternalTextures=c.renderTarget.isXRRenderTarget,c.renderTarget.isXRRenderTarget&&this._supportsLayers){c.xrlayer.transform=new XRRigidTransform(c.plane.getWorldPosition(e),c.plane.getWorldQuaternion(t));const l=this._glBinding.getSubImage(c.xrlayer,this._xrFrame);s.backend.setXRRenderTargetTextures(c.renderTarget,l.colorTexture,void 0),s._setXRLayerSize(c.renderTarget.width,c.renderTarget.height),s.setOutputRenderTarget(c.renderTarget),s.setRenderTarget(null),s._frameBufferTarget=null,this._frameBufferTargets||(this._frameBufferTargets=new WeakMap);const{frameBufferTarget:d,quad:p}=this._frameBufferTargets.get(c.renderTarget)||{frameBufferTarget:null,quad:null};d?(s._frameBufferTarget=d,s._quad=p):(s._quad=new ho(new Se),this._frameBufferTargets.set(c.renderTarget,{frameBufferTarget:s._getFrameBufferTarget(),quad:s._quad})),c.rendercall(),s._frameBufferTarget=null}else s.setRenderTarget(c.renderTarget),c.rendercall();s.setRenderTarget(null),s.setOutputRenderTarget(r),s._frameBufferTarget=i,s._setXRLayerSize(a.x,a.y),s._quad=u,this.isPresenting=n}getSession(){return this._session}async setSession(e){const t=this._renderer,s=t.backend;this._gl=t.getContext();const n=this._gl,r=n.getContextAttributes();if(this._session=e,e!==null){if(s.isWebGPUBackend===!0)throw new Error('THREE.XRManager: XR is currently not supported with a WebGPU backend. Use WebGL by passing "{ forceWebGL: true }" to the constructor of the renderer.');if(e.addEventListener("select",this._onSessionEvent),e.addEventListener("selectstart",this._onSessionEvent),e.addEventListener("selectend",this._onSessionEvent),e.addEventListener("squeeze",this._onSessionEvent),e.addEventListener("squeezestart",this._onSessionEvent),e.addEventListener("squeezeend",this._onSessionEvent),e.addEventListener("end",this._onSessionEnd),e.addEventListener("inputsourceschange",this._onInputSourcesChange),await s.makeXRCompatible(),this._currentPixelRatio=t.getPixelRatio(),t.getSize(this._currentSize),this._currentAnimationContext=t._animation.getContext(),this._currentAnimationLoop=t._animation.getAnimationLoop(),t._animation.stop(),this._supportsGlBinding){const i=new XRWebGLBinding(e,n);this._glBinding=i}if(this._useLayers===!0){let i=null,a=null,u=null;t.depth&&(u=t.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,i=t.stencil?hs:ps,a=t.stencil?ds:Ce);const c={colorFormat:n.RGBA8,depthFormat:u,scaleFactor:this._framebufferScaleFactor,clearOnAccess:!1};this._useMultiviewIfPossible&&t.hasFeature("OVR_multiview2")&&(c.textureType="texture-array",this._useMultiview=!0);const l=this._glBinding.createProjectionLayer(c),d=[l];this._glProjLayer=l,t.setPixelRatio(1),t._setXRLayerSize(l.textureWidth,l.textureHeight);const p=this._useMultiview?2:1,f=new wt(l.textureWidth,l.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,i,p);if(this._xrRenderTarget=new Qn(l.textureWidth,l.textureHeight,{format:At,type:it,colorSpace:t.outputColorSpace,depthTexture:f,stencilBuffer:t.stencil,samples:r.antialias?4:0,resolveDepthBuffer:l.ignoreDepthValues===!1,resolveStencilBuffer:l.ignoreDepthValues===!1,depth:this._useMultiview?2:1,multiview:this._useMultiview}),this._xrRenderTarget._hasExternalTextures=!0,this._xrRenderTarget.depth=this._useMultiview?2:1,this._supportsLayers=e.enabledFeatures.includes("layers"),this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType()),this._supportsLayers)for(const m of this._layers)m.plane.material=new Ps({color:16777215,side:m.type==="cylinder"?Ze:xn}),m.plane.material.blending=Jn,m.plane.material.blendEquation=Xt,m.plane.material.blendSrc=rs,m.plane.material.blendDst=rs,m.xrlayer=this._createXRLayer(m),d.unshift(m.xrlayer);e.updateRenderState({layers:d})}else{const i={antialias:t.samples>0,alpha:!0,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:this.getFramebufferScaleFactor()},a=new XRWebGLLayer(e,n,i);this._glBaseLayer=a,e.updateRenderState({baseLayer:a}),t.setPixelRatio(1),t._setXRLayerSize(a.framebufferWidth,a.framebufferHeight),this._xrRenderTarget=new Qn(a.framebufferWidth,a.framebufferHeight,{format:At,type:it,colorSpace:t.outputColorSpace,stencilBuffer:t.stencil,resolveDepthBuffer:a.ignoreDepthValues===!1,resolveStencilBuffer:a.ignoreDepthValues===!1}),this._xrRenderTarget._isOpaqueFramebuffer=!0,this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType())}this.setFoveation(this.getFoveation()),t._animation.setAnimationLoop(this._onAnimationFrame),t._animation.setContext(e),t._animation.start(),this.isPresenting=!0,this.dispatchEvent({type:"sessionstart"})}}updateCamera(e){const t=this._session;if(t===null)return;const s=e.near,n=e.far,r=this._cameraXR,i=this._cameraL,a=this._cameraR;r.near=a.near=i.near=s,r.far=a.far=i.far=n,r.isMultiViewCamera=this._useMultiview,(this._currentDepthNear!==r.near||this._currentDepthFar!==r.far)&&(t.updateRenderState({depthNear:r.near,depthFar:r.far}),this._currentDepthNear=r.near,this._currentDepthFar=r.far),r.layers.mask=e.layers.mask|6,i.layers.mask=r.layers.mask&3,a.layers.mask=r.layers.mask&5;const u=e.parent,c=r.cameras;Dl(r,u);for(let l=0;l<c.length;l++)Dl(c[l],u);c.length===2?Aw(r,i,a):r.projectionMatrix.copy(i.projectionMatrix),ww(e,r,u)}_getController(e){let t=this._controllers[e];return t===void 0&&(t=new oy,this._controllers[e]=t),t}}function Aw(o,e,t){Pl.setFromMatrixPosition(e.matrixWorld),Ll.setFromMatrixPosition(t.matrixWorld);const s=Pl.distanceTo(Ll),n=e.projectionMatrix.elements,r=t.projectionMatrix.elements,i=n[14]/(n[10]-1),a=n[14]/(n[10]+1),u=(n[9]+1)/n[5],c=(n[9]-1)/n[5],l=(n[8]-1)/n[0],d=(r[8]+1)/r[0],p=i*l,f=i*d,m=s/(-l+d),y=m*-l;if(e.matrixWorld.decompose(o.position,o.quaternion,o.scale),o.translateX(y),o.translateZ(m),o.matrixWorld.compose(o.position,o.quaternion,o.scale),o.matrixWorldInverse.copy(o.matrixWorld).invert(),n[10]===-1)o.projectionMatrix.copy(e.projectionMatrix),o.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const T=i+m,S=a+m,R=p-y,w=f+(s-y),L=u*a/S*T,F=c*a/S*T;o.projectionMatrix.makePerspective(R,w,L,F,T,S),o.projectionMatrixInverse.copy(o.projectionMatrix).invert()}}function Dl(o,e){e===null?o.matrixWorld.copy(o.matrix):o.matrixWorld.multiplyMatrices(e.matrixWorld,o.matrix),o.matrixWorldInverse.copy(o.matrixWorld).invert()}function ww(o,e,t){t===null?o.matrix.copy(e.matrixWorld):(o.matrix.copy(t.matrixWorld),o.matrix.invert(),o.matrix.multiply(e.matrixWorld)),o.matrix.decompose(o.position,o.quaternion,o.scale),o.updateMatrixWorld(!0),o.projectionMatrix.copy(e.projectionMatrix),o.projectionMatrixInverse.copy(e.projectionMatrixInverse),o.isPerspectiveCamera&&(o.fov=Vy*2*Math.atan(1/o.projectionMatrix.elements[5]),o.zoom=1)}function Ew(o){const e=this._controllerInputSources.indexOf(o.inputSource);if(e===-1)return;const t=this._controllers[e];if(t!==void 0){const s=this.getReferenceSpace();t.update(o.inputSource,o.frame,s),t.dispatchEvent({type:o.type,data:o.inputSource})}}function Cw(){const o=this._session,e=this._renderer;o.removeEventListener("select",this._onSessionEvent),o.removeEventListener("selectstart",this._onSessionEvent),o.removeEventListener("selectend",this._onSessionEvent),o.removeEventListener("squeeze",this._onSessionEvent),o.removeEventListener("squeezestart",this._onSessionEvent),o.removeEventListener("squeezeend",this._onSessionEvent),o.removeEventListener("end",this._onSessionEnd),o.removeEventListener("inputsourceschange",this._onInputSourcesChange);for(let t=0;t<this._controllers.length;t++){const s=this._controllerInputSources[t];s!==null&&(this._controllerInputSources[t]=null,this._controllers[t].disconnect(s))}if(this._currentDepthNear=null,this._currentDepthFar=null,e._resetXRState(),this._session=null,this._xrRenderTarget=null,this._supportsLayers===!0)for(const t of this._layers)t.renderTarget=new Qn(t.pixelwidth,t.pixelheight,{format:At,type:it,depthTexture:new wt(t.pixelwidth,t.pixelheight,t.stencilBuffer?ds:Ce,void 0,void 0,void 0,void 0,void 0,void 0,t.stencilBuffer?hs:ps),stencilBuffer:t.stencilBuffer,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),t.renderTarget.isXRRenderTarget=!1,t.plane.material=t.material,t.material.map=t.renderTarget.texture,t.material.map.offset.y=1,t.material.map.repeat.y=-1,delete t.xrlayer;this.isPresenting=!1,this._useMultiview=!1,e._animation.stop(),e._animation.setAnimationLoop(this._currentAnimationLoop),e._animation.setContext(this._currentAnimationContext),e._animation.start(),e.setPixelRatio(this._currentPixelRatio),e.setSize(this._currentSize.width,this._currentSize.height,!1),this.dispatchEvent({type:"sessionend"})}function Mw(o){const e=this._controllers,t=this._controllerInputSources;for(let s=0;s<o.removed.length;s++){const n=o.removed[s],r=t.indexOf(n);r>=0&&(t[r]=null,e[r].disconnect(n))}for(let s=0;s<o.added.length;s++){const n=o.added[s];let r=t.indexOf(n);if(r===-1){for(let a=0;a<e.length;a++)if(a>=t.length){t.push(n),r=a;break}else if(t[a]===null){t[a]=n,r=a;break}if(r===-1)break}const i=e[r];i&&i.connect(n)}}function Bw(o){return o.type==="quad"?this._glBinding.createQuadLayer({transform:new XRRigidTransform(o.translation,o.quaternion),width:o.width/2,height:o.height/2,space:this._referenceSpace,viewPixelWidth:o.pixelwidth,viewPixelHeight:o.pixelheight,clearOnAccess:!1}):this._glBinding.createCylinderLayer({transform:new XRRigidTransform(o.translation,o.quaternion),radius:o.radius,centralAngle:o.centralAngle,aspectRatio:o.aspectRatio,space:this._referenceSpace,viewPixelWidth:o.pixelwidth,viewPixelHeight:o.pixelheight,clearOnAccess:!1})}function Fw(o,e){if(e===void 0)return;const t=this._cameraXR,s=this._renderer,n=s.backend,r=this._glBaseLayer,i=this.getReferenceSpace(),a=e.getViewerPose(i);if(this._xrFrame=e,a!==null){const u=a.views;this._glBaseLayer!==null&&n.setXRTarget(r.framebuffer);let c=!1;u.length!==t.cameras.length&&(t.cameras.length=0,c=!0);for(let l=0;l<u.length;l++){const d=u[l];let p;if(this._useLayers===!0){const m=this._glBinding.getViewSubImage(this._glProjLayer,d);p=m.viewport,l===0&&n.setXRRenderTargetTextures(this._xrRenderTarget,m.colorTexture,this._glProjLayer.ignoreDepthValues&&!this._useMultiview?void 0:m.depthStencilTexture)}else p=r.getViewport(d);let f=this._cameras[l];f===void 0&&(f=new mi,f.layers.enable(l),f.viewport=new fe,this._cameras[l]=f),f.matrix.fromArray(d.transform.matrix),f.matrix.decompose(f.position,f.quaternion,f.scale),f.projectionMatrix.fromArray(d.projectionMatrix),f.projectionMatrixInverse.copy(f.projectionMatrix).invert(),f.viewport.set(p.x,p.y,p.width,p.height),l===0&&(t.matrix.copy(f.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale)),c===!0&&t.cameras.push(f)}s.setOutputRenderTarget(this._xrRenderTarget)}for(let u=0;u<this._controllers.length;u++){const c=this._controllerInputSources[u],l=this._controllers[u];c!==null&&l!==void 0&&l.update(c,e,i)}this._currentAnimationLoop&&this._currentAnimationLoop(o,e),e.detectedPlanes&&this.dispatchEvent({type:"planesdetected",data:e}),this._xrFrame=null}const Ul=new ja,Qr=new $e,Xo=new fe,jo=new Og,Ko=new Gg,Zr=new Ue,ss=new fe;class Pw{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:s=!1,alpha:n=!0,depth:r=!0,stencil:i=!1,antialias:a=!1,samples:u=0,getFallback:c=null,colorBufferType:l=Ke,multiview:d=!1}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=u||a===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=n,this.logarithmicDepthBuffer=s,this.outputColorSpace=Jl,this.toneMapping=yn,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=r,this.stencil=i,this.info=new fN,this.overrideNodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new Sg,this.lighting=new vw,this._getFallback=c,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new fe(0,0,this._width,this._height),this._scissor=new fe(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new ho(new Se),this._quad.material.name="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const p=this.alpha===!0?0:1;this._clearColor=new ic(0,0,0,p),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._outputRenderTarget=null,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._colorBufferType=l,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:Vg},this.xr=new Rw(this,d),this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(f,m,y)=>{await this.compileAsync(f,m);const T=this._renderLists.get(f,m),S=this._renderContexts.get(f,m,this._renderTarget),R=f.overrideMaterial||y.material,w=this._objects.get(y,R,f,m,T.lightsNode,S,S.clippingContext),{fragmentShader:L,vertexShader:F}=w.getNodeBuilderState();return{fragmentShader:L,vertexShader:F}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,t)=>{let s=this.backend;try{await s.init(this)}catch(n){if(this._getFallback!==null)try{this.backend=s=this._getFallback(n),await s.init(this)}catch(r){t(r);return}else{t(n);return}}this._nodes=new _w(this,s),this._animation=new iN(this._nodes,this.info),this._attributes=new hN(s),this._background=new UA(this,this._nodes),this._geometries=new pN(this._attributes,this.info),this._textures=new CN(this,s,this.info),this._pipelines=new xN(s,this._nodes),this._bindings=new TN(s,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new cN(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new NN(this.lighting),this._bundles=new Nw,this._renderContexts=new wN,this._animation.start(),this._initialized=!0,e(this)}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,s=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();const n=this._nodes.nodeFrame,r=n.renderId,i=this._currentRenderContext,a=this._currentRenderObjectFunction,u=this._compilationPromises,c=e.isScene===!0?e:Ul;s===null&&(s=e);const l=this._renderTarget,d=this._renderContexts.get(s,t,l),p=this._activeMipmapLevel,f=[];this._currentRenderContext=d,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=f,n.renderId++,n.update(),d.depth=this.depth,d.stencil=this.stencil,d.clippingContext||(d.clippingContext=new Di),d.clippingContext.updateGlobal(c,t),c.onBeforeRender(this,e,t,l);const m=this._renderLists.get(e,t);if(m.begin(),this._projectObject(e,t,0,m,d.clippingContext),s!==e&&s.traverseVisible(function(w){w.isLight&&w.layers.test(t.layers)&&m.pushLight(w)}),m.finish(),l!==null){this._textures.updateRenderTarget(l,p);const w=this._textures.get(l);d.textures=w.textures,d.depthTexture=w.depthTexture}else d.textures=null,d.depthTexture=null;this._background.update(c,m,d);const y=m.opaque,T=m.transparent,S=m.transparentDoublePass,R=m.lightsNode;this.opaque===!0&&y.length>0&&this._renderObjects(y,t,c,R),this.transparent===!0&&T.length>0&&this._renderTransparents(T,S,t,c,R),n.renderId=r,this._currentRenderContext=i,this._currentRenderObjectFunction=a,this._compilationPromises=u,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(f)}async renderAsync(e,t){this._initialized===!1&&await this.init(),this._renderScene(e,t)}async waitForGPU(){await this.backend.waitForGPU()}set highPrecision(e){e===!0?(this.overrideNodes.modelViewMatrix=Ca,this.overrideNodes.modelNormalViewMatrix=Ma):this.highPrecision&&(this.overrideNodes.modelViewMatrix=null,this.overrideNodes.modelNormalViewMatrix=null)}get highPrecision(){return this.overrideNodes.modelViewMatrix===Ca&&this.overrideNodes.modelNormalViewMatrix===Ma}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getColorBufferType(){return this._colorBufferType}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:

Message: ${e.message}`;e.reason&&(t+=`
Reason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,s){const{bundleGroup:n,camera:r,renderList:i}=e,a=this._currentRenderContext,u=this._bundles.get(n,r),c=this.backend.get(u);c.renderContexts===void 0&&(c.renderContexts=new Set);const l=n.version!==c.version,d=c.renderContexts.has(a)===!1||l;if(c.renderContexts.add(a),d){this.backend.beginBundle(a),(c.renderObjects===void 0||l)&&(c.renderObjects=[]),this._currentRenderBundle=u;const{transparentDoublePass:p,transparent:f,opaque:m}=i;this.opaque===!0&&m.length>0&&this._renderObjects(m,r,t,s),this.transparent===!0&&f.length>0&&this._renderTransparents(f,p,r,t,s),this._currentRenderBundle=null,this.backend.finishBundle(a,u),c.version=n.version}else{const{renderObjects:p}=c;for(let f=0,m=p.length;f<m;f++){const y=p[f];this._nodes.needsRefresh(y)&&(this._nodes.updateBefore(y),this._nodes.updateForRender(y),this._bindings.updateForRender(y),this._nodes.updateAfter(y))}}this.backend.addBundle(a,u)}render(e,t){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this,s=e!==yn,n=t!==Ee.workingColorSpace;if(s===!1&&n===!1)return null;const{width:r,height:i}=this.getDrawingBufferSize(Qr),{depth:a,stencil:u}=this;let c=this._frameBufferTarget;c===null&&(c=new xs(r,i,{depthBuffer:a,stencilBuffer:u,type:this._colorBufferType,format:At,colorSpace:Ee.workingColorSpace,generateMipmaps:!1,minFilter:ot,magFilter:ot,samples:this.samples}),c.isPostProcessingRenderTarget=!0,this._frameBufferTarget=c);const l=this.getOutputRenderTarget();return c.depthBuffer=a,c.stencilBuffer=u,l!==null?c.setSize(l.width,l.height,l.depth):c.setSize(r,i,1),c.viewport.copy(this._viewport),c.scissor.copy(this._scissor),c.viewport.multiplyScalar(this._pixelRatio),c.scissor.multiplyScalar(this._pixelRatio),c.scissorTest=this._scissorTest,c.multiview=l!==null?l.multiview:!1,c.resolveDepthBuffer=l!==null?l.resolveDepthBuffer:!0,c._autoAllocateDepthBuffer=l!==null?l._autoAllocateDepthBuffer:!1,c}_renderScene(e,t,s=!0){if(this._isDeviceLost===!0)return;const n=s?this._getFrameBufferTarget():null,r=this._nodes.nodeFrame,i=r.renderId,a=this._currentRenderContext,u=this._currentRenderObjectFunction,c=e.isScene===!0?e:Ul,l=this._renderTarget||this._outputRenderTarget,d=this._activeCubeFace,p=this._activeMipmapLevel;let f;n!==null?(f=n,this.setRenderTarget(f)):f=l;const m=this._renderContexts.get(e,t,f);this._currentRenderContext=m,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,r.renderId=this.info.calls;const y=this.coordinateSystem,T=this.xr;if(t.coordinateSystem!==y&&T.isPresenting===!1&&(t.coordinateSystem=y,t.updateProjectionMatrix(),t.isArrayCamera))for(const pe of t.cameras)pe.coordinateSystem=y,pe.updateProjectionMatrix();e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld(),T.enabled===!0&&T.isPresenting===!0&&(T.cameraAutoUpdate===!0&&T.updateCamera(t),t=T.getCamera());let S=this._viewport,R=this._scissor,w=this._pixelRatio;f!==null&&(S=f.viewport,R=f.scissor,w=1),this.getDrawingBufferSize(Qr),Xo.set(0,0,Qr.width,Qr.height);const L=S.minDepth===void 0?0:S.minDepth,F=S.maxDepth===void 0?1:S.maxDepth;m.viewportValue.copy(S).multiplyScalar(w).floor(),m.viewportValue.width>>=p,m.viewportValue.height>>=p,m.viewportValue.minDepth=L,m.viewportValue.maxDepth=F,m.viewport=m.viewportValue.equals(Xo)===!1,m.scissorValue.copy(R).multiplyScalar(w).floor(),m.scissor=this._scissorTest&&m.scissorValue.equals(Xo)===!1,m.scissorValue.width>>=p,m.scissorValue.height>>=p,m.clippingContext||(m.clippingContext=new Di),m.clippingContext.updateGlobal(c,t),c.onBeforeRender(this,e,t,f);const P=t.isArrayCamera?Ko:jo;t.isArrayCamera||(Zr.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),P.setFromProjectionMatrix(Zr,t.coordinateSystem,t.reversedDepth));const B=this._renderLists.get(e,t);if(B.begin(),this._projectObject(e,t,0,B,m.clippingContext),B.finish(),this.sortObjects===!0&&B.sort(this._opaqueSort,this._transparentSort),f!==null){this._textures.updateRenderTarget(f,p);const pe=this._textures.get(f);m.textures=pe.textures,m.depthTexture=pe.depthTexture,m.width=pe.width,m.height=pe.height,m.renderTarget=f,m.depth=f.depthBuffer,m.stencil=f.stencilBuffer}else m.textures=null,m.depthTexture=null,m.width=this.domElement.width,m.height=this.domElement.height,m.depth=this.depth,m.stencil=this.stencil;m.width>>=p,m.height>>=p,m.activeCubeFace=d,m.activeMipmapLevel=p,m.occlusionQueryCount=B.occlusionQueryCount,this._background.update(c,B,m),m.camera=t,this.backend.beginRender(m);const{bundles:U,lightsNode:V,transparentDoublePass:ee,transparent:se,opaque:he}=B;return U.length>0&&this._renderBundles(U,c,V),this.opaque===!0&&he.length>0&&this._renderObjects(he,t,c,V),this.transparent===!0&&se.length>0&&this._renderTransparents(se,ee,t,c,V),this.backend.finishRender(m),r.renderId=i,this._currentRenderContext=a,this._currentRenderObjectFunction=u,n!==null&&(this.setRenderTarget(l,d,p),this._renderOutput(f)),c.onAfterRender(this,e,t,f),m}_setXRLayerSize(e,t){this._width=e,this._height=t,this.setViewport(0,0,e,t)}_renderOutput(e){const t=this._quad;this._nodes.hasOutputChange(e.texture)&&(t.material.fragmentNode=this._nodes.getOutputNode(e.texture),t.material.needsUpdate=!0);const s=this.autoClear,n=this.xr.enabled;this.autoClear=!1,this.xr.enabled=!1,this._renderScene(t,t.camera,!1),this.autoClear=s,this.xr.enabled=n}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,s){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this._pixelRatio=s,this.domElement.width=Math.floor(e*s),this.domElement.height=Math.floor(t*s),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setSize(e,t,s=!0){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),s===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,s,n){const r=this._scissor;e.isVector4?r.copy(e):r.set(e,t,s,n)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,s,n,r=0,i=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,s,n),a.minDepth=r,a.maxDepth=i}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,s=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,s);const n=this._renderTarget||this._getFrameBufferTarget();let r=null;if(n!==null){this._textures.updateRenderTarget(n);const i=this._textures.get(n);r=this._renderContexts.getForClear(n),r.textures=i.textures,r.depthTexture=i.depthTexture,r.width=i.width,r.height=i.height,r.renderTarget=n,r.depth=n.depthBuffer,r.stencil=n.stencilBuffer,r.clearColorValue=this.backend.getClearColor(),r.activeCubeFace=this.getActiveCubeFace(),r.activeMipmapLevel=this.getActiveMipmapLevel()}this.backend.clear(e,t,s,r),n!==null&&this._renderTarget===null&&this._renderOutput(n)}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,s=!0){this._initialized===!1&&await this.init(),this.clear(e,t,s)}async clearColorAsync(){this.clearAsync(!0,!1,!1)}async clearDepthAsync(){this.clearAsync(!1,!0,!1)}async clearStencilAsync(){this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this.isOutputTarget?this.toneMapping:yn}get currentColorSpace(){return this.isOutputTarget?this.outputColorSpace:Ee.workingColorSpace}get isOutputTarget(){return this._renderTarget===this._outputRenderTarget||this._renderTarget===null}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this._frameBufferTarget!==null&&this._frameBufferTarget.dispose(),Object.values(this.backend.timestampQueryPool).forEach(e=>{e!==null&&e.dispose()}),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,s=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=s}getRenderTarget(){return this._renderTarget}setOutputRenderTarget(e){this._outputRenderTarget=e}getOutputRenderTarget(){return this._outputRenderTarget}_resetXRState(){this.backend.setXRTarget(null),this.setOutputRenderTarget(null),this.setRenderTarget(null),this._frameBufferTarget.dispose(),this._frameBufferTarget=null}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e,t=null){if(this._isDeviceLost===!0)return;if(this._initialized===!1)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const s=this._nodes.nodeFrame,n=s.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,s.renderId=this.info.calls;const r=this.backend,i=this._pipelines,a=this._bindings,u=this._nodes,c=Array.isArray(e)?e:[e];if(c[0]===void 0||c[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");r.beginCompute(e);for(const l of c){if(i.has(l)===!1){const f=()=>{l.removeEventListener("dispose",f),i.delete(l),a.delete(l),u.delete(l)};l.addEventListener("dispose",f);const m=l.onInitFunction;m!==null&&m.call(l,{renderer:this})}u.updateForCompute(l),a.updateForCompute(l);const d=a.getForCompute(l),p=i.getForCompute(l,d);r.compute(e,l,d,p,t)}r.finishCompute(e),s.renderId=n}async computeAsync(e,t=null){this._initialized===!1&&await this.init(),this.compute(e,t)}async hasFeatureAsync(e){return this._initialized===!1&&await this.init(),this.backend.hasFeature(e)}async resolveTimestampsAsync(e="render"){return this._initialized===!1&&await this.init(),this.backend.resolveTimestampsAsync(e)}hasFeature(e){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){this._initialized===!1&&await this.init(),this._textures.updateTexture(e)}initTexture(e){this._initialized===!1&&console.warn("THREE.Renderer: .initTexture() called before the backend is initialized. Try using .initTextureAsync() instead."),this._textures.updateTexture(e)}copyFramebufferToTexture(e,t=null){if(t!==null)if(t.isVector2)t=ss.set(t.x,t.y,e.image.width,e.image.height).floor();else if(t.isVector4)t=ss.copy(t).floor();else{console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else t=ss.set(0,0,e.image.width,e.image.height);let s=this._currentRenderContext,n;s!==null?n=s.renderTarget:(n=this._renderTarget||this._getFrameBufferTarget(),n!==null&&(this._textures.updateRenderTarget(n),s=this._textures.get(n))),this._textures.updateTexture(e,{renderTarget:n}),this.backend.copyFramebufferToTexture(e,s,t)}copyTextureToTexture(e,t,s=null,n=null,r=0,i=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,s,n,r,i)}async readRenderTargetPixelsAsync(e,t,s,n,r,i=0,a=0){return this.backend.copyTextureToBuffer(e.textures[i],t,s,n,r,a)}_projectObject(e,t,s,n,r){if(e.visible===!1)return;if(e.layers.test(t.layers)){if(e.isGroup)s=e.renderOrder,e.isClippingGroup&&e.enabled&&(r=r.getGroupContext(e));else if(e.isLOD)e.autoUpdate===!0&&e.update(t);else if(e.isLight)n.pushLight(e);else if(e.isSprite){const u=t.isArrayCamera?Ko:jo;if(!e.frustumCulled||u.intersectsSprite(e,t)){this.sortObjects===!0&&ss.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Zr);const{geometry:c,material:l}=e;l.visible&&n.push(e,c,l,s,ss.z,null,r)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if(e.isMesh||e.isLine||e.isPoints){const u=t.isArrayCamera?Ko:jo;if(!e.frustumCulled||u.intersectsObject(e,t)){const{geometry:c,material:l}=e;if(this.sortObjects===!0&&(c.boundingSphere===null&&c.computeBoundingSphere(),ss.copy(c.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(Zr)),Array.isArray(l)){const d=c.groups;for(let p=0,f=d.length;p<f;p++){const m=d[p],y=l[m.materialIndex];y&&y.visible&&n.push(e,c,y,s,ss.z,m,r)}}else l.visible&&n.push(e,c,l,s,ss.z,null,r)}}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const u=n;n=this._renderLists.get(e,t),n.begin(),u.pushBundle({bundleGroup:e,camera:t,renderList:n}),n.finish()}const a=e.children;for(let u=0,c=a.length;u<c;u++)this._projectObject(a[u],t,s,n,r)}_renderBundles(e,t,s){for(const n of e)this._renderBundle(n,t,s)}_renderTransparents(e,t,s,n,r){if(t.length>0){for(const{material:i}of t)i.side=Ze;this._renderObjects(t,s,n,r,"backSide");for(const{material:i}of t)i.side=xn;this._renderObjects(e,s,n,r);for(const{material:i}of t)i.side=Os}else this._renderObjects(e,s,n,r)}_renderObjects(e,t,s,n,r=null){for(let i=0,a=e.length;i<a;i++){const{object:u,geometry:c,material:l,group:d,clippingContext:p}=e[i];this._currentRenderObjectFunction(u,s,t,c,l,d,n,p,r)}}renderObject(e,t,s,n,r,i,a,u=null,c=null){let l,d,p;if(e.onBeforeRender(this,t,s,n,r,i),r.allowOverride===!0&&t.overrideMaterial!==null){const f=t.overrideMaterial;r.positionNode&&r.positionNode.isNode&&(l=f.positionNode,f.positionNode=r.positionNode),f.alphaTest=r.alphaTest,f.alphaMap=r.alphaMap,f.transparent=r.transparent||r.transmission>0,f.isShadowPassMaterial&&(f.side=r.shadowSide===null?r.side:r.shadowSide,r.depthNode&&r.depthNode.isNode&&(p=f.depthNode,f.depthNode=r.depthNode),r.castShadowNode&&r.castShadowNode.isNode&&(d=f.colorNode,f.colorNode=r.castShadowNode),r.castShadowPositionNode&&r.castShadowPositionNode.isNode&&(l=f.positionNode,f.positionNode=r.castShadowPositionNode)),r=f}r.transparent===!0&&r.side===Os&&r.forceSinglePass===!1?(r.side=Ze,this._handleObjectFunction(e,r,t,s,a,i,u,"backSide"),r.side=xn,this._handleObjectFunction(e,r,t,s,a,i,u,c),r.side=Os):this._handleObjectFunction(e,r,t,s,a,i,u,c),l!==void 0&&(t.overrideMaterial.positionNode=l),p!==void 0&&(t.overrideMaterial.depthNode=p),d!==void 0&&(t.overrideMaterial.colorNode=d),e.onAfterRender(this,t,s,n,r,i)}_renderObjectDirect(e,t,s,n,r,i,a,u){const c=this._objects.get(e,t,s,n,r,this._currentRenderContext,a,u);c.drawRange=e.geometry.drawRange,c.group=i;const l=this._nodes.needsRefresh(c);l&&(this._nodes.updateBefore(c),this._geometries.updateForRender(c),this._nodes.updateForRender(c),this._bindings.updateForRender(c)),this._pipelines.updateForRender(c),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(c),c.bundle=this._currentRenderBundle.bundleGroup),this.backend.draw(c,this.info),l&&this._nodes.updateAfter(c)}_createObjectPipeline(e,t,s,n,r,i,a,u){const c=this._objects.get(e,t,s,n,r,this._currentRenderContext,a,u);c.drawRange=e.geometry.drawRange,c.group=i,this._nodes.updateBefore(c),this._geometries.updateForRender(c),this._nodes.updateForRender(c),this._bindings.updateForRender(c),this._pipelines.getForRender(c,this._compilationPromises),this._nodes.updateAfter(c)}get compile(){return this.compileAsync}}class vg{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function Lw(o){return o+(us-o%us)%us}class Rg extends vg{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return Lw(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class Ag extends Rg{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let Dw=0;class wg extends Ag{constructor(e,t){super("UniformBuffer_"+Dw++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class Uw extends Ag{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){const e=this.bytesPerElement;let t=0;for(let s=0,n=this.uniforms.length;s<n;s++){const r=this.uniforms[s],i=r.boundary,a=r.itemSize*e,u=t%us,c=u%i,l=u+c;t+=c,l!==0&&us-l<a&&(t+=us-l),r.offset=t/e,t+=a}return Math.ceil(t/us)*us}update(){let e=!1;for(const t of this.uniforms)this.updateByType(t)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset,i=e.getType();if(s[r]!==n){const a=this._getBufferForType(i);a[r]=s[r]=n,t=!0}return t}updateVector2(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset,i=e.getType();if(s[r+0]!==n.x||s[r+1]!==n.y){const a=this._getBufferForType(i);a[r+0]=s[r+0]=n.x,a[r+1]=s[r+1]=n.y,t=!0}return t}updateVector3(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset,i=e.getType();if(s[r+0]!==n.x||s[r+1]!==n.y||s[r+2]!==n.z){const a=this._getBufferForType(i);a[r+0]=s[r+0]=n.x,a[r+1]=s[r+1]=n.y,a[r+2]=s[r+2]=n.z,t=!0}return t}updateVector4(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset,i=e.getType();if(s[r+0]!==n.x||s[r+1]!==n.y||s[r+2]!==n.z||s[r+4]!==n.w){const a=this._getBufferForType(i);a[r+0]=s[r+0]=n.x,a[r+1]=s[r+1]=n.y,a[r+2]=s[r+2]=n.z,a[r+3]=s[r+3]=n.w,t=!0}return t}updateColor(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset;if(s[r+0]!==n.r||s[r+1]!==n.g||s[r+2]!==n.b){const i=this.buffer;i[r+0]=s[r+0]=n.r,i[r+1]=s[r+1]=n.g,i[r+2]=s[r+2]=n.b,t=!0}return t}updateMatrix3(e){let t=!1;const s=this.values,n=e.getValue().elements,r=e.offset;if(s[r+0]!==n[0]||s[r+1]!==n[1]||s[r+2]!==n[2]||s[r+4]!==n[3]||s[r+5]!==n[4]||s[r+6]!==n[5]||s[r+8]!==n[6]||s[r+9]!==n[7]||s[r+10]!==n[8]){const i=this.buffer;i[r+0]=s[r+0]=n[0],i[r+1]=s[r+1]=n[1],i[r+2]=s[r+2]=n[2],i[r+4]=s[r+4]=n[3],i[r+5]=s[r+5]=n[4],i[r+6]=s[r+6]=n[5],i[r+8]=s[r+8]=n[6],i[r+9]=s[r+9]=n[7],i[r+10]=s[r+10]=n[8],t=!0}return t}updateMatrix4(e){let t=!1;const s=this.values,n=e.getValue().elements,r=e.offset;return Vw(s,n,r)===!1&&(this.buffer.set(n,r),Iw(s,n,r),t=!0),t}_getBufferForType(e){return e==="int"||e==="ivec2"||e==="ivec3"||e==="ivec4"?new Int32Array(this.buffer.buffer):e==="uint"||e==="uvec2"||e==="uvec3"||e==="uvec4"?new Uint32Array(this.buffer.buffer):this.buffer}}function Iw(o,e,t){for(let s=0,n=e.length;s<n;s++)o[t+s]=e[s]}function Vw(o,e,t){for(let s=0,n=e.length;s<n;s++)if(o[t+s]!==e[s])return!1;return!0}let Gw=0;class Eg extends Uw{constructor(e,t){super(e),this.id=Gw++,this.groupNode=t,this.isNodeUniformsGroup=!0}}class Cg extends vg{constructor(e,t){super(e),this._onDisposeTexture=()=>{this.texture=null},this.texture=t,this.version=t?t.version:0,this.generation=null,this.isSampler=!0}set texture(e){this._texture!==e&&(this._texture&&this._texture.removeEventListener("dispose",this._onDisposeTexture),this._texture=e,this.generation=null,this.version=0,this._texture&&this._texture.addEventListener("dispose",this._onDisposeTexture))}get texture(){return this._texture}update(){const{texture:e,version:t}=this;return t!==e.version?(this.version=e.version,!0):!1}}let Ow=0;class kw extends Cg{constructor(e,t){super(e,t),this.id=Ow++,this.store=!1,this.isSampledTexture=!0}}class xo extends kw{constructor(e,t,s,n=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s,this.access=n}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class Mg extends xo{constructor(e,t,s,n=null){super(e,t,s,n),this.isSampledCubeTexture=!0}}class Wa extends xo{constructor(e,t,s,n=null){super(e,t,s,n),this.isSampledTexture3D=!0}}const zw={textureDimensions:"textureSize",equals:"equal"},$w={low:"lowp",medium:"mediump",high:"highp"},Il={swizzleAssign:!0,storageBuffer:!1},Vl={perspective:"smooth",linear:"noperspective"},Gl={centroid:"centroid"},Ol=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
precision lowp sampler2DArrayShadow;
precision lowp samplerCubeShadow;
`;class Ww extends bg{constructor(e,t){super(e,t,new Tw),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]}}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==vn}getMethod(e){return zw[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),n=[];for(const i of t.inputs)n.push(this.getType(i.type)+" "+i.name);return`${this.getType(t.type)} ${t.name}( ${n.join(", ")} ) {

	${s.vars}

${s.code}
	return ${s.result};

}`}setupPBO(e){const t=e.value;if(t.pbo===void 0){const s=t.array,n=t.count*t.itemSize,{itemSize:r}=t,i=t.array.constructor.name.toLowerCase().includes("int");let a=i?su:tu;r===2?a=i?nu:Us:r===3?a=i?ox:eu:r===4&&(a=i?ru:At);const u={Float32Array:dt,Uint8Array:it,Uint16Array:hn,Uint32Array:Ce,Int8Array:er,Int16Array:tr,Int32Array:qe,Uint8ClampedArray:it},c=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(n/r))));let l=Math.ceil(n/r/c);c*l*r<n&&l++;const d=c*l*r,p=new s.constructor(d);p.set(s,0),t.array=p;const f=new yy(t.array,c,l,a,u[t.array.constructor.name]||dt);f.needsUpdate=!0,f.isPBOTexture=!0;const m=new Gt(f,null,null);m.setPrecision("high"),t.pboNode=m,t.pbo=m.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.nodeName)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:s}=e,n=t.value;if(this.renderer.backend.has(n)){const l=this.renderer.backend.get(n);l.pbo=n.pbo}const r=this.getUniformFromNode(n.pboNode,"texture",this.shaderStage,this.context.nodeName),i=this.getPropertyName(r);this.increaseUsage(s);const a=s.build(this,"uint"),u=this.getDataFromNode(e);let c=u.propertyName;if(c===void 0){const l=this.getVarFromNode(e);c=this.getPropertyName(l);const d=this.getDataFromNode(t);let p=d.propertySizeName;p===void 0&&(p=c+"Size",this.getVarFromNode(t,p,"uint"),this.addLineFlowCode(`${p} = uint( textureSize( ${i}, 0 ).x )`,e),d.propertySizeName=p);const{itemSize:f}=n,m="."+Ks.join("").slice(0,f),y=`ivec2(${a} % ${p}, ${a} / ${p})`,T=this.generateTextureLoad(null,i,y,null,"0");let S="vec4";n.pbo.type===Ce?S="uvec4":n.pbo.type===qe&&(S="ivec4"),this.addLineFlowCode(`${c} = ${S}(${T})${m}`,e),u.propertyName=c}return c}generateTextureLoad(e,t,s,n,r="0"){return n?`texelFetch( ${t}, ivec3( ${s}, ${n} ), ${r} )`:`texelFetch( ${t}, ${s}, ${r} )`}generateTexture(e,t,s,n){return e.isDepthTexture?(n&&(s=`vec4( ${s}, ${n} )`),`texture( ${t}, ${s} ).x`):(n&&(s=`vec3( ${s}, ${n} )`),`texture( ${t}, ${s} )`)}generateTextureLevel(e,t,s,n){return`textureLod( ${t}, ${s}, ${n} )`}generateTextureBias(e,t,s,n){return`texture( ${t}, ${s}, ${n} )`}generateTextureGrad(e,t,s,n){return`textureGrad( ${t}, ${s}, ${n[0]}, ${n[1]} )`}generateTextureCompare(e,t,s,n,r,i=this.shaderStage){if(i==="fragment")return r?`texture( ${t}, vec4( ${s}, ${r}, ${n} ) )`:`texture( ${t}, vec3( ${s}, ${n} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${i} shader.`)}getVars(e){const t=[],s=this.vars[e];if(s!==void 0)for(const n of s)t.push(`${this.getVar(n.type,n.name,n.count)};`);return t.join(`
	`)}getUniforms(e){const t=this.uniforms[e],s=[],n={};for(const i of t){let a=null,u=!1;if(i.type==="texture"||i.type==="texture3D"){const l=i.node.value;let d="";(l.isDataTexture===!0||l.isData3DTexture===!0)&&(l.type===Ce?d="u":l.type===qe&&(d="i")),i.type==="texture3D"&&l.isArrayTexture===!1?a=`${d}sampler3D ${i.name};`:l.compareFunction?l.isArrayTexture===!0?a=`sampler2DArrayShadow ${i.name};`:a=`sampler2DShadow ${i.name};`:l.isArrayTexture===!0||l.isDataArrayTexture===!0||l.isCompressedArrayTexture===!0?a=`${d}sampler2DArray ${i.name};`:a=`${d}sampler2D ${i.name};`}else if(i.type==="cubeTexture")a=`samplerCube ${i.name};`;else if(i.type==="buffer"){const l=i.node,d=this.getType(l.bufferType),p=l.bufferCount,f=p>0?p:"";a=`${l.name} {
	${d} ${i.name}[${f}];
};
`}else a=`${this.getVectorType(i.type)} ${this.getPropertyName(i,e)};`,u=!0;const c=i.node.precision;if(c!==null&&(a=$w[c]+" "+a),u){a="	"+a;const l=i.groupNode.name;(n[l]||(n[l]=[])).push(a)}else a="uniform "+a,s.push(a)}let r="";for(const i in n){const a=n[i];r+=this._getGLSLUniformStruct(e+"_"+i,a.join(`
`))+`
`}return r+=s.join(`
`),r}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==qe){let s=e;e.isInterleavedBufferAttribute&&(s=e.data);const n=s.array;n instanceof Uint32Array||n instanceof Int32Array||(t=t.slice(1))}return t}getAttributes(e){let t="";if(e==="vertex"||e==="compute"){const s=this.getAttributesArray();let n=0;for(const r of s)t+=`layout( location = ${n++} ) in ${r.type} ${r.name};
`}return t}getStructMembers(e){const t=[];for(const s of e.members)t.push(`	${s.type} ${s.name};`);return t.join(`
`)}getStructs(e){const t=[],s=this.structs[e],n=[];for(const r of s)if(r.output)for(const i of r.members)n.push(`layout( location = ${i.index} ) out ${i.type} ${i.name};`);else{let i="struct "+r.name+` {
`;i+=this.getStructMembers(r),i+=`
};
`,t.push(i)}return n.length===0&&n.push("layout( location = 0 ) out vec4 fragColor;"),`
`+n.join(`
`)+`

`+t.join(`
`)}getVaryings(e){let t="";const s=this.varyings;if(e==="vertex"||e==="compute")for(const n of s){e==="compute"&&(n.needsInterpolation=!0);const r=this.getType(n.type);if(n.needsInterpolation)if(n.interpolationType){const i=Vl[n.interpolationType]||n.interpolationType,a=Gl[n.interpolationSampling]||"";t+=`${i} ${a} out ${r} ${n.name};
`}else{const i=r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":"";t+=`${i}out ${r} ${n.name};
`}else t+=`${r} ${n.name};
`}else if(e==="fragment"){for(const n of s)if(n.needsInterpolation){const r=this.getType(n.type);if(n.interpolationType){const i=Vl[n.interpolationType]||n.interpolationType,a=Gl[n.interpolationSampling]||"";t+=`${i} ${a} in ${r} ${n.name};
`}else{const i=r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":"";t+=`${i}in ${r} ${n.name};
`}}}for(const n of this.builtins[e])t+=`${n};
`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((s,n)=>s*n,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,s=this.shaderStage){const n=this.extensions[s]||(this.extensions[s]=new Map);n.has(e)===!1&&n.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if(e==="vertex"){const n=this.renderer.backend.extensions;this.object.isBatchedMesh&&n.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const s=this.extensions[e];if(s!==void 0)for(const{name:n,behavior:r}of s.values())t.push(`#extension ${n} : ${r}`);return t.join(`
`)}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=Il[e];if(t===void 0){let s;switch(t=!1,e){case"float32Filterable":s="OES_texture_float_linear";break;case"clipDistance":s="WEBGL_clip_cull_distance";break}if(s!==void 0){const n=this.renderer.backend.extensions;n.has(s)&&(n.get(s),t=!0)}Il[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}enableMultiview(){this.enableExtension("GL_OVR_multiview2","require","fragment"),this.enableExtension("GL_OVR_multiview2","require","vertex"),this.builtins.vertex.push("layout(num_views = 2) in")}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let s=0;s<e.length;s++){const n=e[s],r=this.getPropertyName(n.attributeNode);r&&(t+=`${n.varyingName} = ${r};
	`)}return t}_getGLSLUniformStruct(e,t){return`
layout( std140 ) uniform ${e} {
${t}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions
${e.extensions}

// precision
${Ol}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// extensions
${e.extensions}

// precision
${Ol}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

// structs
${e.structs}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let s=`// code

`;s+=this.flowCode[t];const n=this.flowNodes[t],r=n[n.length-1];for(const a of n){const u=this.getFlowData(a),c=a.name;c&&(s.length>0&&(s+=`
`),s+=`	// flow -> ${c}
	`),s+=`${u.code}
	`,a===r&&t!=="compute"&&(s+=`// result
	`,t==="vertex"?(s+="gl_Position = ",s+=`${u.result};`):t==="fragment"&&(a.outputNode.isOutputStructNode||(s+="fragColor = ",s+=`${u.result};`)))}const i=e[t];i.extensions=this.getExtensions(t),i.uniforms=this.getUniforms(t),i.attributes=this.getAttributes(t),i.varyings=this.getVaryings(t),i.vars=this.getVars(t),i.structs=this.getStructs(t),i.codes=this.getCodes(t),i.transforms=this.getTransforms(t),i.flow=s}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,s,n=null){const r=super.getUniformFromNode(e,t,s,n),i=this.getDataFromNode(e,s,this.globalCache);let a=i.uniformGPU;if(a===void 0){const u=e.groupNode,c=u.name,l=this.getBindGroupArray(c,s);if(t==="texture")a=new xo(r.name,r.node,u),l.push(a);else if(t==="cubeTexture")a=new Mg(r.name,r.node,u),l.push(a);else if(t==="texture3D")a=new Wa(r.name,r.node,u),l.push(a);else if(t==="buffer"){e.name=`NodeBuffer_${e.id}`,r.name=`buffer${e.id}`;const d=new wg(e,u);d.name=e.name,l.push(d),a=d}else{const d=this.uniformGroups[s]||(this.uniformGroups[s]={});let p=d[c];p===void 0&&(p=new Eg(s+"_"+c,u),d[c]=p,l.push(p)),a=this.getNodeUniform(r,t),p.addUniform(a)}i.uniformGPU=a}return r}}let Yo=null,an=null;class Bg{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null,this.timestampQueryPool={render:null,compute:null},this.trackTimestamp=e.trackTimestamp===!0}async init(e){this.renderer=e}get coordinateSystem(){}beginRender(){}finishRender(){}beginCompute(){}finishCompute(){}draw(){}compute(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}updateBinding(){}createRenderPipeline(){}createComputePipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}destroySampler(){}createDefaultTexture(){}createTexture(){}updateTexture(){}generateMipmaps(){}destroyTexture(){}async copyTextureToBuffer(){}copyTextureToTexture(){}copyFramebufferToTexture(){}createAttribute(){}createIndexAttribute(){}createStorageAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}updateViewport(){}isOccluded(){}async resolveTimestampsAsync(e="render"){if(!this.trackTimestamp){ls("WebGPURenderer: Timestamp tracking is disabled.");return}const t=this.timestampQueryPool[e];if(!t){ls(`WebGPURenderer: No timestamp query pool for type '${e}' found.`);return}const s=await t.resolveQueriesAsync();return this.renderer.info[e].timestamp=s,s}async waitForGPU(){}async getArrayBufferAsync(){}async hasFeatureAsync(){}hasFeature(){}getMaxAnisotropy(){}getDrawingBufferSize(){return Yo=Yo||new $e,this.renderer.getDrawingBufferSize(Yo)}setScissorTest(){}getClearColor(){const e=this.renderer;return an=an||new ic,e.getClearColor(an),an.getRGB(an),an}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:cy(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${nd} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let Hw=0;class qw{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class Xw{constructor(e){this.backend=e}createAttribute(e,t){const s=this.backend,{gl:n}=s,r=e.array,i=e.usage||n.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,u=s.get(a);let c=u.bufferGPU;c===void 0&&(c=this._createBuffer(n,t,r,i),u.bufferGPU=c,u.bufferType=t,u.version=a.version);let l;if(r instanceof Float32Array)l=n.FLOAT;else if(typeof Float16Array<"u"&&r instanceof Float16Array)l=n.HALF_FLOAT;else if(r instanceof Uint16Array)e.isFloat16BufferAttribute?l=n.HALF_FLOAT:l=n.UNSIGNED_SHORT;else if(r instanceof Int16Array)l=n.SHORT;else if(r instanceof Uint32Array)l=n.UNSIGNED_INT;else if(r instanceof Int32Array)l=n.INT;else if(r instanceof Int8Array)l=n.BYTE;else if(r instanceof Uint8Array)l=n.UNSIGNED_BYTE;else if(r instanceof Uint8ClampedArray)l=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+r);let d={bufferGPU:c,bufferType:t,type:l,byteLength:r.byteLength,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:l===n.INT||l===n.UNSIGNED_INT||e.gpuType===qe,id:Hw++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const p=this._createBuffer(n,t,r,i);d=new qw(d,p)}s.set(e,d)}updateAttribute(e){const t=this.backend,{gl:s}=t,n=e.array,r=e.isInterleavedBufferAttribute?e.data:e,i=t.get(r),a=i.bufferType,u=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(s.bindBuffer(a,i.bufferGPU),u.length===0)s.bufferSubData(a,0,n);else{for(let c=0,l=u.length;c<l;c++){const d=u[c];s.bufferSubData(a,d.start*n.BYTES_PER_ELEMENT,n,d.start,d.count)}r.clearUpdateRanges()}s.bindBuffer(a,null),i.version=r.version}destroyAttribute(e){const t=this.backend,{gl:s}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const n=t.get(e);s.deleteBuffer(n.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:s}=t,n=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:r}=t.get(n),i=e.array,a=i.byteLength;s.bindBuffer(s.COPY_READ_BUFFER,r);const u=s.createBuffer();s.bindBuffer(s.COPY_WRITE_BUFFER,u),s.bufferData(s.COPY_WRITE_BUFFER,a,s.STREAM_READ),s.copyBufferSubData(s.COPY_READ_BUFFER,s.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const c=new e.array.constructor(i.length);return s.bindBuffer(s.COPY_WRITE_BUFFER,u),s.getBufferSubData(s.COPY_WRITE_BUFFER,0,c),s.deleteBuffer(u),s.bindBuffer(s.COPY_READ_BUFFER,null),s.bindBuffer(s.COPY_WRITE_BUFFER,null),c.buffer}_createBuffer(e,t,s,n){const r=e.createBuffer();return e.bindBuffer(t,r),e.bufferData(t,s,n),e.bindBuffer(t,null),r}}let Qo,jn;class jw{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentVAO=null,this.currentIndex=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},this._init()}_init(){const e=this.gl;Qo={[Xt]:e.FUNC_ADD,[pd]:e.FUNC_SUBTRACT,[hd]:e.FUNC_REVERSE_SUBTRACT},jn={[rs]:e.ZERO,[Sd]:e.ONE,[Nd]:e.SRC_COLOR,[bd]:e.SRC_ALPHA,[_d]:e.SRC_ALPHA_SATURATE,[Td]:e.DST_COLOR,[xd]:e.DST_ALPHA,[yd]:e.ONE_MINUS_SRC_COLOR,[gd]:e.ONE_MINUS_SRC_ALPHA,[md]:e.ONE_MINUS_DST_COLOR,[fd]:e.ONE_MINUS_DST_ALPHA};const t=e.getParameter(e.SCISSOR_BOX),s=e.getParameter(e.VIEWPORT);this.currentScissor=new fe().fromArray(t),this.currentViewport=new fe().fromArray(s),this._tempVec4=new fe}enable(e){const{enabled:t}=this;t[e]!==!0&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;t[e]!==!1&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==ly?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===dy?t.cullFace(t.BACK):e===hy?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:s}=this;e!==t&&(s.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,s,n,r,i,a,u){const{gl:c}=this;if(e===lr){this.currentBlendingEnabled===!0&&(this.disable(c.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(c.BLEND),this.currentBlendingEnabled=!0),e!==Jn){if(e!==this.currentBlending||u!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==Xt||this.currentBlendEquationAlpha!==Xt)&&(c.blendEquation(c.FUNC_ADD),this.currentBlendEquation=Xt,this.currentBlendEquationAlpha=Xt),u)switch(e){case ks:c.blendFuncSeparate(c.ONE,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case xi:c.blendFunc(c.ONE,c.ONE);break;case yi:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case gi:c.blendFuncSeparate(c.DST_COLOR,c.ONE_MINUS_SRC_ALPHA,c.ZERO,c.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case ks:c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case xi:c.blendFuncSeparate(c.SRC_ALPHA,c.ONE,c.ONE,c.ONE);break;case yi:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case gi:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=u}return}r=r||t,i=i||s,a=a||n,(t!==this.currentBlendEquation||r!==this.currentBlendEquationAlpha)&&(c.blendEquationSeparate(Qo[t],Qo[r]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=r),(s!==this.currentBlendSrc||n!==this.currentBlendDst||i!==this.currentBlendSrcAlpha||a!==this.currentBlendDstAlpha)&&(c.blendFuncSeparate(jn[s],jn[n],jn[i],jn[a]),this.currentBlendSrc=s,this.currentBlendDst=n,this.currentBlendSrcAlpha=i,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case Bd:t.depthFunc(t.NEVER);break;case Md:t.depthFunc(t.ALWAYS);break;case Cd:t.depthFunc(t.LESS);break;case Ed:t.depthFunc(t.LEQUAL);break;case wd:t.depthFunc(t.EQUAL);break;case Ad:t.depthFunc(t.GEQUAL);break;case Rd:t.depthFunc(t.GREATER);break;case vd:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}scissor(e,t,s,n){const r=this._tempVec4.set(e,t,s,n);if(this.currentScissor.equals(r)===!1){const{gl:i}=this;i.scissor(r.x,r.y,r.z,r.w),this.currentScissor.copy(r)}}viewport(e,t,s,n){const r=this._tempVec4.set(e,t,s,n);if(this.currentViewport.equals(r)===!1){const{gl:i}=this;i.viewport(r.x,r.y,r.z,r.w),this.currentViewport.copy(r)}}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,s){(this.currentStencilFunc!==e||this.currentStencilRef!==t||this.currentStencilFuncMask!==s)&&(this.gl.stencilFunc(e,t,s),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=s)}setStencilOp(e,t,s){(this.currentStencilFail!==e||this.currentStencilZFail!==t||this.currentStencilZPass!==s)&&(this.gl.stencilOp(e,t,s),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=s)}setMaterial(e,t,s){const{gl:n}=this;e.side===Os?this.disable(n.CULL_FACE):this.enable(n.CULL_FACE);let r=e.side===Ze;t&&(r=!r),this.setFlipSided(r),e.blending===ks&&e.transparent===!1?this.setBlending(lr):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const i=e.stencilWrite;if(this.setStencilTest(i),i&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(n.SAMPLE_ALPHA_TO_COVERAGE):this.disable(n.SAMPLE_ALPHA_TO_COVERAGE),s>0&&this.currentClippingPlanes!==s)for(let u=0;u<8;u++)u<s?this.enable(12288+u):this.disable(12288+u)}setPolygonOffset(e,t,s){const{gl:n}=this;e?(this.enable(n.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==t||this.currentPolygonOffsetUnits!==s)&&(n.polygonOffset(t,s),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=s)):this.disable(n.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}setVertexState(e,t=null){const s=this.gl;return this.currentVAO!==e||this.currentIndex!==t?(s.bindVertexArray(e),t!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t),this.currentVAO=e,this.currentIndex=t,!0):!1}resetVertexState(){const e=this.gl;e.bindVertexArray(null),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),this.currentVAO=null,this.currentIndex=null}bindFramebuffer(e,t){const{gl:s,currentBoundFramebuffers:n}=this;return n[e]!==t?(s.bindFramebuffer(e,t),n[e]=t,e===s.DRAW_FRAMEBUFFER&&(n[s.FRAMEBUFFER]=t),e===s.FRAMEBUFFER&&(n[s.DRAW_FRAMEBUFFER]=t),!0):!1}drawBuffers(e,t){const{gl:s}=this;let n=[],r=!1;if(e.textures!==null){n=this.currentDrawbuffers.get(t),n===void 0&&(n=[],this.currentDrawbuffers.set(t,n));const i=e.textures;if(n.length!==i.length||n[0]!==s.COLOR_ATTACHMENT0){for(let a=0,u=i.length;a<u;a++)n[a]=s.COLOR_ATTACHMENT0+a;n.length=i.length,r=!0}}else n[0]!==s.BACK&&(n[0]=s.BACK,r=!0);r&&s.drawBuffers(n)}activeTexture(e){const{gl:t,currentTextureSlot:s,maxTextures:n}=this;e===void 0&&(e=t.TEXTURE0+n-1),s!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,s){const{gl:n,currentTextureSlot:r,currentBoundTextures:i,maxTextures:a}=this;s===void 0&&(r===null?s=n.TEXTURE0+a-1:s=r);let u=i[s];u===void 0&&(u={type:void 0,texture:void 0},i[s]=u),(u.type!==e||u.texture!==t)&&(r!==s&&(n.activeTexture(s),this.currentTextureSlot=s),n.bindTexture(e,t),u.type=e,u.texture=t)}bindBufferBase(e,t,s){const{gl:n}=this,r=`${e}-${t}`;return this.currentBoundBufferBases[r]!==s?(n.bindBufferBase(e,t,s),this.currentBoundBufferBases[r]=s,!0):!1}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:s}=this,n=s[t];n!==void 0&&n.type!==void 0&&(e.bindTexture(n.type,null),n.type=void 0,n.texture=void 0)}}class Kw{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=vn){const{gl:s,extensions:n}=this;let r;const i=Ee.getTransfer(t);if(e===it)return s.UNSIGNED_BYTE;if(e===py)return s.UNSIGNED_SHORT_4_4_4_4;if(e===fy)return s.UNSIGNED_SHORT_5_5_5_1;if(e===Fd)return s.UNSIGNED_INT_5_9_9_9_REV;if(e===er)return s.BYTE;if(e===tr)return s.SHORT;if(e===hn)return s.UNSIGNED_SHORT;if(e===qe)return s.INT;if(e===Ce)return s.UNSIGNED_INT;if(e===dt)return s.FLOAT;if(e===Ke)return s.HALF_FLOAT;if(e===my)return s.ALPHA;if(e===eu)return s.RGB;if(e===At)return s.RGBA;if(e===ps)return s.DEPTH_COMPONENT;if(e===hs)return s.DEPTH_STENCIL;if(e===tu)return s.RED;if(e===su)return s.RED_INTEGER;if(e===Us)return s.RG;if(e===nu)return s.RG_INTEGER;if(e===ru)return s.RGBA_INTEGER;if(e===To||e===ri||e===ii||e===oi)if(i===j)if(r=n.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(e===To)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===ri)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===ii)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===oi)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=n.get("WEBGL_compressed_texture_s3tc"),r!==null){if(e===To)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===ri)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===ii)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===oi)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===Ac||e===wc||e===Ec||e===Cc)if(r=n.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(e===Ac)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===wc)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Ec)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Cc)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===Mc||e===oa||e===aa)if(r=n.get("WEBGL_compressed_texture_etc"),r!==null){if(e===Mc||e===oa)return i===j?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(e===aa)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===ua||e===ca||e===la||e===da||e===ha||e===pa||e===fa||e===ma||e===ga||e===ya||e===xa||e===Ta||e===_a||e===ba)if(r=n.get("WEBGL_compressed_texture_astc"),r!==null){if(e===ua)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===ca)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===la)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===da)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===ha)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===pa)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===fa)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===ma)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===ga)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===ya)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===xa)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===Ta)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===_a)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===ba)return i===j?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===_o)if(r=n.get("EXT_texture_compression_bptc"),r!==null){if(e===_o)return i===j?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===gy||e===Bc||e===Fc||e===Pc)if(r=n.get("EXT_texture_compression_rgtc"),r!==null){if(e===_o)return r.COMPRESSED_RED_RGTC1_EXT;if(e===Bc)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===Fc)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Pc)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===ds?s.UNSIGNED_INT_24_8:s[e]!==void 0?s[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((s,n)=>{function r(){const i=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(i===e.WAIT_FAILED){e.deleteSync(t),n();return}if(i===e.TIMEOUT_EXPIRED){requestAnimationFrame(r);return}e.deleteSync(t),s()}r()})}}let kl=!1,Jr,Zo,zl;class Yw{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},kl===!1&&(this._init(),kl=!0)}_init(){const e=this.gl;Jr={[Vi]:e.REPEAT,[Ii]:e.CLAMP_TO_EDGE,[Ui]:e.MIRRORED_REPEAT},Zo={[Rt]:e.NEAREST,[rd]:e.NEAREST_MIPMAP_NEAREST,[cr]:e.NEAREST_MIPMAP_LINEAR,[ot]:e.LINEAR,[ia]:e.LINEAR_MIPMAP_NEAREST,[zs]:e.LINEAR_MIPMAP_LINEAR},zl={[dd]:e.NEVER,[ld]:e.ALWAYS,[Ja]:e.LESS,[cd]:e.LEQUAL,[ud]:e.EQUAL,[ad]:e.GEQUAL,[od]:e.GREATER,[id]:e.NOTEQUAL}}getGLTextureType(e){const{gl:t}=this;let s;return e.isCubeTexture===!0?s=t.TEXTURE_CUBE_MAP:e.isArrayTexture===!0||e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?s=t.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?s=t.TEXTURE_3D:s=t.TEXTURE_2D,s}getInternalFormat(e,t,s,n,r=!1){const{gl:i,extensions:a}=this;if(e!==null){if(i[e]!==void 0)return i[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let u=t;if(t===i.RED&&(s===i.FLOAT&&(u=i.R32F),s===i.HALF_FLOAT&&(u=i.R16F),s===i.UNSIGNED_BYTE&&(u=i.R8),s===i.UNSIGNED_SHORT&&(u=i.R16),s===i.UNSIGNED_INT&&(u=i.R32UI),s===i.BYTE&&(u=i.R8I),s===i.SHORT&&(u=i.R16I),s===i.INT&&(u=i.R32I)),t===i.RED_INTEGER&&(s===i.UNSIGNED_BYTE&&(u=i.R8UI),s===i.UNSIGNED_SHORT&&(u=i.R16UI),s===i.UNSIGNED_INT&&(u=i.R32UI),s===i.BYTE&&(u=i.R8I),s===i.SHORT&&(u=i.R16I),s===i.INT&&(u=i.R32I)),t===i.RG&&(s===i.FLOAT&&(u=i.RG32F),s===i.HALF_FLOAT&&(u=i.RG16F),s===i.UNSIGNED_BYTE&&(u=i.RG8),s===i.UNSIGNED_SHORT&&(u=i.RG16),s===i.UNSIGNED_INT&&(u=i.RG32UI),s===i.BYTE&&(u=i.RG8I),s===i.SHORT&&(u=i.RG16I),s===i.INT&&(u=i.RG32I)),t===i.RG_INTEGER&&(s===i.UNSIGNED_BYTE&&(u=i.RG8UI),s===i.UNSIGNED_SHORT&&(u=i.RG16UI),s===i.UNSIGNED_INT&&(u=i.RG32UI),s===i.BYTE&&(u=i.RG8I),s===i.SHORT&&(u=i.RG16I),s===i.INT&&(u=i.RG32I)),t===i.RGB){const c=r?Rc:Ee.getTransfer(n);s===i.FLOAT&&(u=i.RGB32F),s===i.HALF_FLOAT&&(u=i.RGB16F),s===i.UNSIGNED_BYTE&&(u=i.RGB8),s===i.UNSIGNED_SHORT&&(u=i.RGB16),s===i.UNSIGNED_INT&&(u=i.RGB32UI),s===i.BYTE&&(u=i.RGB8I),s===i.SHORT&&(u=i.RGB16I),s===i.INT&&(u=i.RGB32I),s===i.UNSIGNED_BYTE&&(u=c===j?i.SRGB8:i.RGB8),s===i.UNSIGNED_SHORT_5_6_5&&(u=i.RGB565),s===i.UNSIGNED_SHORT_5_5_5_1&&(u=i.RGB5_A1),s===i.UNSIGNED_SHORT_4_4_4_4&&(u=i.RGB4),s===i.UNSIGNED_INT_5_9_9_9_REV&&(u=i.RGB9_E5)}if(t===i.RGB_INTEGER&&(s===i.UNSIGNED_BYTE&&(u=i.RGB8UI),s===i.UNSIGNED_SHORT&&(u=i.RGB16UI),s===i.UNSIGNED_INT&&(u=i.RGB32UI),s===i.BYTE&&(u=i.RGB8I),s===i.SHORT&&(u=i.RGB16I),s===i.INT&&(u=i.RGB32I)),t===i.RGBA){const c=r?Rc:Ee.getTransfer(n);s===i.FLOAT&&(u=i.RGBA32F),s===i.HALF_FLOAT&&(u=i.RGBA16F),s===i.UNSIGNED_BYTE&&(u=i.RGBA8),s===i.UNSIGNED_SHORT&&(u=i.RGBA16),s===i.UNSIGNED_INT&&(u=i.RGBA32UI),s===i.BYTE&&(u=i.RGBA8I),s===i.SHORT&&(u=i.RGBA16I),s===i.INT&&(u=i.RGBA32I),s===i.UNSIGNED_BYTE&&(u=c===j?i.SRGB8_ALPHA8:i.RGBA8),s===i.UNSIGNED_SHORT_4_4_4_4&&(u=i.RGBA4),s===i.UNSIGNED_SHORT_5_5_5_1&&(u=i.RGB5_A1)}return t===i.RGBA_INTEGER&&(s===i.UNSIGNED_BYTE&&(u=i.RGBA8UI),s===i.UNSIGNED_SHORT&&(u=i.RGBA16UI),s===i.UNSIGNED_INT&&(u=i.RGBA32UI),s===i.BYTE&&(u=i.RGBA8I),s===i.SHORT&&(u=i.RGBA16I),s===i.INT&&(u=i.RGBA32I)),t===i.DEPTH_COMPONENT&&(s===i.UNSIGNED_SHORT&&(u=i.DEPTH_COMPONENT16),s===i.UNSIGNED_INT&&(u=i.DEPTH_COMPONENT24),s===i.FLOAT&&(u=i.DEPTH_COMPONENT32F)),t===i.DEPTH_STENCIL&&s===i.UNSIGNED_INT_24_8&&(u=i.DEPTH24_STENCIL8),(u===i.R16F||u===i.R32F||u===i.RG16F||u===i.RG32F||u===i.RGBA16F||u===i.RGBA32F)&&a.get("EXT_color_buffer_float"),u}setTextureParameters(e,t){const{gl:s,extensions:n,backend:r}=this,i=Ee.getPrimaries(Ee.workingColorSpace),a=t.colorSpace===vn?null:Ee.getPrimaries(t.colorSpace),u=t.colorSpace===vn||i===a?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,t.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,t.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,u),s.texParameteri(e,s.TEXTURE_WRAP_S,Jr[t.wrapS]),s.texParameteri(e,s.TEXTURE_WRAP_T,Jr[t.wrapT]),(e===s.TEXTURE_3D||e===s.TEXTURE_2D_ARRAY)&&(t.isArrayTexture||s.texParameteri(e,s.TEXTURE_WRAP_R,Jr[t.wrapR])),s.texParameteri(e,s.TEXTURE_MAG_FILTER,Zo[t.magFilter]);const c=t.mipmaps!==void 0&&t.mipmaps.length>0,l=t.minFilter===ot&&c?zs:t.minFilter;if(s.texParameteri(e,s.TEXTURE_MIN_FILTER,Zo[l]),t.compareFunction&&(s.texParameteri(e,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(e,s.TEXTURE_COMPARE_FUNC,zl[t.compareFunction])),n.has("EXT_texture_filter_anisotropic")===!0){if(t.magFilter===Rt||t.minFilter!==cr&&t.minFilter!==zs||t.type===dt&&n.has("OES_texture_float_linear")===!1)return;if(t.anisotropy>1){const d=n.get("EXT_texture_filter_anisotropic");s.texParameterf(e,d.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,r.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:s,defaultTextures:n}=this,r=this.getGLTextureType(e);let i=n[r];i===void 0&&(i=t.createTexture(),s.state.bindTexture(r,i),t.texParameteri(r,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(r,t.TEXTURE_MAG_FILTER,t.NEAREST),n[r]=i),s.set(e,{textureGPU:i,glTextureType:r,isDefault:!0})}createTexture(e,t){const{gl:s,backend:n}=this,{levels:r,width:i,height:a,depth:u}=t,c=n.utils.convert(e.format,e.colorSpace),l=n.utils.convert(e.type),d=this.getInternalFormat(e.internalFormat,c,l,e.colorSpace,e.isVideoTexture),p=s.createTexture(),f=this.getGLTextureType(e);n.state.bindTexture(f,p),this.setTextureParameters(f,e),e.isArrayTexture||e.isDataArrayTexture||e.isCompressedArrayTexture?s.texStorage3D(s.TEXTURE_2D_ARRAY,r,d,i,a,u):e.isData3DTexture?s.texStorage3D(s.TEXTURE_3D,r,d,i,a,u):e.isVideoTexture||s.texStorage2D(f,r,d,i,a),n.set(e,{textureGPU:p,glTextureType:f,glFormat:c,glType:l,glInternalFormat:d})}copyBufferToTexture(e,t){const{gl:s,backend:n}=this,{textureGPU:r,glTextureType:i,glFormat:a,glType:u}=n.get(t),{width:c,height:l}=t.source.data;s.bindBuffer(s.PIXEL_UNPACK_BUFFER,e),n.state.bindTexture(i,r),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,!1),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),s.texSubImage2D(i,0,0,0,c,l,a,u,0),s.bindBuffer(s.PIXEL_UNPACK_BUFFER,null),n.state.unbindTexture()}updateTexture(e,t){const{gl:s}=this,{width:n,height:r}=t,{textureGPU:i,glTextureType:a,glFormat:u,glType:c,glInternalFormat:l}=this.backend.get(e);if(!(e.isRenderTargetTexture||i===void 0))if(this.backend.state.bindTexture(a,i),this.setTextureParameters(a,e),e.isCompressedTexture){const d=e.mipmaps,p=t.image;for(let f=0;f<d.length;f++){const m=d[f];e.isCompressedArrayTexture?e.format!==s.RGBA?u!==null?s.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,f,0,0,0,m.width,m.height,p.depth,u,m.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):s.texSubImage3D(s.TEXTURE_2D_ARRAY,f,0,0,0,m.width,m.height,p.depth,u,c,m.data):u!==null?s.compressedTexSubImage2D(s.TEXTURE_2D,f,0,0,m.width,m.height,u,m.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const d=t.images;for(let p=0;p<6;p++){const f=$l(d[p]);s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+p,0,0,0,n,r,u,c,f)}}else if(e.isDataArrayTexture||e.isArrayTexture){const d=t.image;s.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,u,c,d.data)}else if(e.isData3DTexture){const d=t.image;s.texSubImage3D(s.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,u,c,d.data)}else if(e.isVideoTexture)e.update(),s.texImage2D(a,0,l,u,c,t.image);else{const d=$l(t.image);s.texSubImage2D(a,0,0,0,n,r,u,c,d)}}generateMipmaps(e){const{gl:t,backend:s}=this,{textureGPU:n,glTextureType:r}=s.get(e);s.state.bindTexture(r,n),t.generateMipmap(r)}deallocateRenderBuffers(e){const{gl:t,backend:s}=this;if(e){const n=s.get(e);if(n.renderBufferStorageSetup=void 0,n.framebuffers){for(const r in n.framebuffers)t.deleteFramebuffer(n.framebuffers[r]);delete n.framebuffers}if(n.depthRenderbuffer&&(t.deleteRenderbuffer(n.depthRenderbuffer),delete n.depthRenderbuffer),n.stencilRenderbuffer&&(t.deleteRenderbuffer(n.stencilRenderbuffer),delete n.stencilRenderbuffer),n.msaaFrameBuffer&&(t.deleteFramebuffer(n.msaaFrameBuffer),delete n.msaaFrameBuffer),n.msaaRenderbuffers){for(let r=0;r<n.msaaRenderbuffers.length;r++)t.deleteRenderbuffer(n.msaaRenderbuffers[r]);delete n.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:s}=this,{textureGPU:n,renderTarget:r}=s.get(e);this.deallocateRenderBuffers(r),t.deleteTexture(n),s.delete(e)}copyTextureToTexture(e,t,s=null,n=null,r=0,i=0){const{gl:a,backend:u}=this,{state:c}=this.backend,{textureGPU:l,glTextureType:d,glType:p,glFormat:f}=u.get(t);c.bindTexture(d,l);let m,y,T,S,R,w,L,F,P;const B=e.isCompressedTexture?e.mipmaps[i]:e.image;if(s!==null)m=s.max.x-s.min.x,y=s.max.y-s.min.y,T=s.isBox3?s.max.z-s.min.z:1,S=s.min.x,R=s.min.y,w=s.isBox3?s.min.z:0;else{const Ve=Math.pow(2,-r);m=Math.floor(B.width*Ve),y=Math.floor(B.height*Ve),e.isDataArrayTexture||e.isArrayTexture?T=B.depth:e.isData3DTexture?T=Math.floor(B.depth*Ve):T=1,S=0,R=0,w=0}n!==null?(L=n.x,F=n.y,P=n.z):(L=0,F=0,P=0),a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,t.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,t.unpackAlignment);const U=a.getParameter(a.UNPACK_ROW_LENGTH),V=a.getParameter(a.UNPACK_IMAGE_HEIGHT),ee=a.getParameter(a.UNPACK_SKIP_PIXELS),se=a.getParameter(a.UNPACK_SKIP_ROWS),he=a.getParameter(a.UNPACK_SKIP_IMAGES);a.pixelStorei(a.UNPACK_ROW_LENGTH,B.width),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,B.height),a.pixelStorei(a.UNPACK_SKIP_PIXELS,S),a.pixelStorei(a.UNPACK_SKIP_ROWS,R),a.pixelStorei(a.UNPACK_SKIP_IMAGES,w);const pe=t.isDataArrayTexture||t.isData3DTexture||t.isArrayTexture;if(e.isRenderTargetTexture||e.isDepthTexture){const Ve=u.get(e),bt=u.get(t),Xe=u.get(Ve.renderTarget),ts=u.get(bt.renderTarget),tt=Xe.framebuffers[Ve.cacheKey],Nt=ts.framebuffers[bt.cacheKey];c.bindFramebuffer(a.READ_FRAMEBUFFER,tt),c.bindFramebuffer(a.DRAW_FRAMEBUFFER,Nt);let vs=a.COLOR_BUFFER_BIT;e.isDepthTexture&&(vs=a.DEPTH_BUFFER_BIT),a.blitFramebuffer(S,R,m,y,L,F,m,y,vs,a.NEAREST),c.bindFramebuffer(a.READ_FRAMEBUFFER,null),c.bindFramebuffer(a.DRAW_FRAMEBUFFER,null)}else pe?e.isDataTexture||e.isData3DTexture?a.texSubImage3D(d,i,L,F,P,m,y,T,f,p,B.data):t.isCompressedArrayTexture?a.compressedTexSubImage3D(d,i,L,F,P,m,y,T,f,B.data):a.texSubImage3D(d,i,L,F,P,m,y,T,f,p,B):e.isDataTexture?a.texSubImage2D(d,i,L,F,m,y,f,p,B.data):e.isCompressedTexture?a.compressedTexSubImage2D(d,i,L,F,B.width,B.height,f,B.data):a.texSubImage2D(d,i,L,F,m,y,f,p,B);a.pixelStorei(a.UNPACK_ROW_LENGTH,U),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,V),a.pixelStorei(a.UNPACK_SKIP_PIXELS,ee),a.pixelStorei(a.UNPACK_SKIP_ROWS,se),a.pixelStorei(a.UNPACK_SKIP_IMAGES,he),i===0&&t.generateMipmaps&&a.generateMipmap(d),c.unbindTexture()}copyFramebufferToTexture(e,t,s){const{gl:n}=this,{state:r}=this.backend,{textureGPU:i}=this.backend.get(e),{x:a,y:u,z:c,w:l}=s,d=e.isDepthTexture===!0||t.renderTarget&&t.renderTarget.samples>0,p=t.renderTarget?t.renderTarget.height:this.backend.getDrawingBufferSize().y;if(d){const f=a!==0||u!==0;let m,y;if(e.isDepthTexture===!0?(m=n.DEPTH_BUFFER_BIT,y=n.DEPTH_ATTACHMENT,t.stencil&&(m|=n.STENCIL_BUFFER_BIT)):(m=n.COLOR_BUFFER_BIT,y=n.COLOR_ATTACHMENT0),f){const T=this.backend.get(t.renderTarget),S=T.framebuffers[t.getCacheKey()],R=T.msaaFrameBuffer;r.bindFramebuffer(n.DRAW_FRAMEBUFFER,S),r.bindFramebuffer(n.READ_FRAMEBUFFER,R);const w=p-u-l;n.blitFramebuffer(a,w,a+c,w+l,a,w,a+c,w+l,m,n.NEAREST),r.bindFramebuffer(n.READ_FRAMEBUFFER,S),r.bindTexture(n.TEXTURE_2D,i),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,w,c,l),r.unbindTexture()}else{const T=n.createFramebuffer();r.bindFramebuffer(n.DRAW_FRAMEBUFFER,T),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,y,n.TEXTURE_2D,i,0),n.blitFramebuffer(0,0,c,l,0,0,c,l,m,n.NEAREST),n.deleteFramebuffer(T)}}else r.bindTexture(n.TEXTURE_2D,i),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,p-l-u,c,l),r.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t,s,n=!1){const{gl:r}=this,i=t.renderTarget,{depthTexture:a,depthBuffer:u,stencilBuffer:c,width:l,height:d}=i;if(r.bindRenderbuffer(r.RENDERBUFFER,e),u&&!c){let p=r.DEPTH_COMPONENT24;n===!0?this.extensions.get("WEBGL_multisampled_render_to_texture").renderbufferStorageMultisampleEXT(r.RENDERBUFFER,i.samples,p,l,d):s>0?(a&&a.isDepthTexture&&a.type===r.FLOAT&&(p=r.DEPTH_COMPONENT32F),r.renderbufferStorageMultisample(r.RENDERBUFFER,s,p,l,d)):r.renderbufferStorage(r.RENDERBUFFER,p,l,d),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,e)}else u&&c&&(s>0?r.renderbufferStorageMultisample(r.RENDERBUFFER,s,r.DEPTH24_STENCIL8,l,d):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,l,d),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,e));r.bindRenderbuffer(r.RENDERBUFFER,null)}async copyTextureToBuffer(e,t,s,n,r,i){const{backend:a,gl:u}=this,{textureGPU:c,glFormat:l,glType:d}=this.backend.get(e),p=u.createFramebuffer();u.bindFramebuffer(u.READ_FRAMEBUFFER,p);const f=e.isCubeTexture?u.TEXTURE_CUBE_MAP_POSITIVE_X+i:u.TEXTURE_2D;u.framebufferTexture2D(u.READ_FRAMEBUFFER,u.COLOR_ATTACHMENT0,f,c,0);const m=this._getTypedArrayType(d),y=this._getBytesPerTexel(d,l),S=n*r*y,R=u.createBuffer();u.bindBuffer(u.PIXEL_PACK_BUFFER,R),u.bufferData(u.PIXEL_PACK_BUFFER,S,u.STREAM_READ),u.readPixels(t,s,n,r,l,d,0),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const w=new m(S/m.BYTES_PER_ELEMENT);return u.bindBuffer(u.PIXEL_PACK_BUFFER,R),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,w),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),u.deleteFramebuffer(p),w}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:s}=this;let n=0;if(e===s.UNSIGNED_BYTE&&(n=1),(e===s.UNSIGNED_SHORT_4_4_4_4||e===s.UNSIGNED_SHORT_5_5_5_1||e===s.UNSIGNED_SHORT_5_6_5||e===s.UNSIGNED_SHORT||e===s.HALF_FLOAT)&&(n=2),(e===s.UNSIGNED_INT||e===s.FLOAT)&&(n=4),t===s.RGBA)return n*4;if(t===s.RGB)return n*3;if(t===s.ALPHA)return n}}function $l(o){return o.isDataTexture?o.image.data:typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&o instanceof ImageBitmap||typeof OffscreenCanvas<"u"&&o instanceof OffscreenCanvas?o:o.data}class Qw{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return t===void 0&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class Zw{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(t.has("EXT_texture_filter_anisotropic")===!0){const s=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(s.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const Wl={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query",OVR_multiview2:"OVR_multiview2"};class Jw{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:s,mode:n,object:r,type:i,info:a,index:u}=this;u!==0?s.drawElements(n,t,i,e):s.drawArrays(n,e,t),a.update(r,t,1)}renderInstances(e,t,s){const{gl:n,mode:r,type:i,index:a,object:u,info:c}=this;s!==0&&(a!==0?n.drawElementsInstanced(r,t,i,e,s):n.drawArraysInstanced(r,e,t,s),c.update(u,t,s))}renderMultiDraw(e,t,s){const{extensions:n,mode:r,object:i,info:a}=this;if(s===0)return;const u=n.get("WEBGL_multi_draw");if(u===null)for(let c=0;c<s;c++)this.render(e[c],t[c]);else{this.index!==0?u.multiDrawElementsWEBGL(r,t,0,this.type,e,0,s):u.multiDrawArraysWEBGL(r,e,0,t,0,s);let c=0;for(let l=0;l<s;l++)c+=t[l];a.update(i,c,1)}}renderMultiDrawInstances(e,t,s,n){const{extensions:r,mode:i,object:a,info:u}=this;if(s===0)return;const c=r.get("WEBGL_multi_draw");if(c===null)for(let l=0;l<s;l++)this.renderInstances(e[l],t[l],n[l]);else{this.index!==0?c.multiDrawElementsInstancedWEBGL(i,t,0,this.type,e,0,n,0,s):c.multiDrawArraysInstancedWEBGL(i,e,0,t,0,n,0,s);let l=0;for(let d=0;d<s;d++)l+=t[d]*n[d];u.update(a,l,1)}}}class Fg{constructor(e=256){this.trackTimestamp=!0,this.maxQueries=e,this.currentQueryIndex=0,this.queryOffsets=new Map,this.isDisposed=!1,this.lastValue=0,this.pendingResolve=!1}allocateQueriesForContext(){}async resolveQueriesAsync(){}dispose(){}}class eE extends Fg{constructor(e,t,s=2048){if(super(s),this.gl=e,this.type=t,this.ext=e.getExtension("EXT_disjoint_timer_query_webgl2")||e.getExtension("EXT_disjoint_timer_query"),!this.ext){console.warn("EXT_disjoint_timer_query not supported; timestamps will be disabled."),this.trackTimestamp=!1;return}this.queries=[];for(let n=0;n<this.maxQueries;n++)this.queries.push(e.createQuery());this.activeQuery=null,this.queryStates=new Map}allocateQueriesForContext(e){if(!this.trackTimestamp)return null;if(this.currentQueryIndex+2>this.maxQueries)return ls(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryStates.set(t,"inactive"),this.queryOffsets.set(e.id,t),t}beginQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e.id);if(t==null||this.activeQuery!==null)return;const s=this.queries[t];if(s)try{this.queryStates.get(t)==="inactive"&&(this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,s),this.activeQuery=t,this.queryStates.set(t,"started"))}catch(n){console.error("Error in beginQuery:",n),this.activeQuery=null,this.queryStates.set(t,"inactive")}}endQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e.id);if(t!=null&&this.activeQuery===t)try{this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.queryStates.set(t,"ended"),this.activeQuery=null}catch(s){console.error("Error in endQuery:",s),this.queryStates.set(t,"inactive"),this.activeQuery=null}}async resolveQueriesAsync(){if(!this.trackTimestamp||this.pendingResolve)return this.lastValue;this.pendingResolve=!0;try{const e=[];for(const[n,r]of this.queryStates)if(r==="ended"){const i=this.queries[n];e.push(this.resolveQuery(i))}if(e.length===0)return this.lastValue;const s=(await Promise.all(e)).reduce((n,r)=>n+r,0);return this.lastValue=s,this.currentQueryIndex=0,this.queryOffsets.clear(),this.queryStates.clear(),this.activeQuery=null,s}catch(e){return console.error("Error resolving queries:",e),this.lastValue}finally{this.pendingResolve=!1}}async resolveQuery(e){return new Promise(t=>{if(this.isDisposed){t(this.lastValue);return}let s,n=!1;const r=()=>{s&&(clearTimeout(s),s=null)},i=u=>{n||(n=!0,r(),t(u))},a=()=>{if(this.isDisposed){i(this.lastValue);return}try{if(this.gl.getParameter(this.ext.GPU_DISJOINT_EXT)){i(this.lastValue);return}if(!this.gl.getQueryParameter(e,this.gl.QUERY_RESULT_AVAILABLE)){s=setTimeout(a,1);return}const l=this.gl.getQueryParameter(e,this.gl.QUERY_RESULT);t(Number(l)/1e6)}catch(u){console.error("Error checking query:",u),t(this.lastValue)}};a()})}dispose(){if(!this.isDisposed&&(this.isDisposed=!0,!!this.trackTimestamp)){for(const e of this.queries)this.gl.deleteQuery(e);this.queries=[],this.queryStates.clear(),this.queryOffsets.clear(),this.lastValue=0,this.activeQuery=null}}}class Hl extends Bg{constructor(e={}){super(e),this.isWebGLBackend=!0,this.attributeUtils=null,this.extensions=null,this.capabilities=null,this.textureUtils=null,this.bufferRenderer=null,this.gl=null,this.state=null,this.utils=null,this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.disjoint=null,this.parallel=null,this._currentContext=null,this._knownBindings=new WeakSet,this._supportsInvalidateFramebuffer=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),this._xrFramebuffer=null}init(e){super.init(e);const t=this.parameters,s={antialias:e.samples>0,alpha:!0,depth:e.depth,stencil:e.stencil},n=t.context!==void 0?t.context:e.domElement.getContext("webgl2",s);function r(i){i.preventDefault();const a={api:"WebGL",message:i.statusMessage||"Unknown reason",reason:null,originalEvent:i};e.onDeviceLost(a)}this._onContextLost=r,e.domElement.addEventListener("webglcontextlost",r,!1),this.gl=n,this.extensions=new Qw(this),this.capabilities=new Zw(this),this.attributeUtils=new Xw(this),this.textureUtils=new Yw(this),this.bufferRenderer=new Jw(this),this.state=new jw(this),this.utils=new Kw(this),this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.extensions.get("OVR_multiview2"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile")}get coordinateSystem(){return ur}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}async makeXRCompatible(){this.gl.getContextAttributes().xrCompatible!==!0&&await this.gl.makeXRCompatible()}setXRTarget(e){this._xrFramebuffer=e}setXRRenderTargetTextures(e,t,s=null){const n=this.gl;if(this.set(e.texture,{textureGPU:t,glInternalFormat:n.RGBA8}),s!==null){const r=e.stencilBuffer?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24;this.set(e.depthTexture,{textureGPU:s,glInternalFormat:r}),this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e._autoAllocateDepthBuffer===!0&&e.multiview===!1&&console.warn("THREE.WebGLBackend: Render-to-texture extension was disabled because an external texture was provided"),e._autoAllocateDepthBuffer=!1}}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t]||(this.timestampQueryPool[t]=new eE(this.gl,t,2048));const s=this.timestampQueryPool[t];s.allocateQueriesForContext(e)!==null&&s.beginQuery(e)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t].endQuery(e)}getContext(){return this.gl}beginRender(e){const{state:t}=this,s=this.get(e);if(e.viewport)this.updateViewport(e);else{const{width:r,height:i}=this.getDrawingBufferSize();t.viewport(0,0,r,i)}if(e.scissor){const{x:r,y:i,width:a,height:u}=e.scissorValue;t.scissor(r,e.height-u-i,a,u)}this.initTimestampQuery(e),s.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1);const n=e.occlusionQueryCount;n>0&&(s.currentOcclusionQueries=s.occlusionQueries,s.currentOcclusionQueryObjects=s.occlusionQueryObjects,s.lastOcclusionObject=null,s.occlusionQueries=new Array(n),s.occlusionQueryObjects=new Array(n),s.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:s}=this,n=this.get(e),r=n.previousContext;s.resetVertexState();const i=e.occlusionQueryCount;i>0&&(i>n.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(a!==null)for(let c=0;c<a.length;c++){const l=a[c];l.generateMipmaps&&this.generateMipmaps(l)}this._currentContext=r;const u=e.renderTarget;if(e.textures!==null&&u){const c=this.get(u);if(u.samples>0&&this._useMultisampledExtension(u)===!1){const l=c.framebuffers[e.getCacheKey()];let d=t.COLOR_BUFFER_BIT;u.resolveDepthBuffer&&(u.depthBuffer&&(d|=t.DEPTH_BUFFER_BIT),u.stencilBuffer&&u.resolveStencilBuffer&&(d|=t.STENCIL_BUFFER_BIT));const p=c.msaaFrameBuffer,f=c.msaaRenderbuffers,m=e.textures,y=m.length>1;if(s.bindFramebuffer(t.READ_FRAMEBUFFER,p),s.bindFramebuffer(t.DRAW_FRAMEBUFFER,l),y)for(let T=0;T<m.length;T++)t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0+T,t.RENDERBUFFER,null),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+T,t.TEXTURE_2D,null,0);for(let T=0;T<m.length;T++){if(y){const{textureGPU:S}=this.get(m[T]);t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,f[T]),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,S,0)}if(e.scissor){const{x:S,y:R,width:w,height:L}=e.scissorValue,F=e.height-L-R;t.blitFramebuffer(S,F,S+w,F+L,S,F,S+w,F+L,d,t.NEAREST)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,d,t.NEAREST)}if(y)for(let T=0;T<m.length;T++){const{textureGPU:S}=this.get(m[T]);t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0+T,t.RENDERBUFFER,f[T]),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+T,t.TEXTURE_2D,S,0)}this._supportsInvalidateFramebuffer===!0&&t.invalidateFramebuffer(t.READ_FRAMEBUFFER,c.invalidationArray)}else if(u.resolveDepthBuffer===!1&&c.framebuffers){const l=c.framebuffers[e.getCacheKey()];s.bindFramebuffer(t.DRAW_FRAMEBUFFER,l),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,c.depthInvalidationArray)}}if(r!==null)if(this._setFramebuffer(r),r.viewport)this.updateViewport(r);else{const{width:c,height:l}=this.getDrawingBufferSize();s.viewport(0,0,c,l)}this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:s,currentOcclusionQueryObjects:n}=t;if(s&&n){const r=new WeakSet,{gl:i}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const a=()=>{let u=0;for(let c=0;c<s.length;c++){const l=s[c];l!==null&&i.getQueryParameter(l,i.QUERY_RESULT_AVAILABLE)&&(i.getQueryParameter(l,i.QUERY_RESULT)===0&&r.add(n[c]),s[c]=null,i.deleteQuery(l),u++)}u<s.length?requestAnimationFrame(a):t.occluded=r};a()}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}updateViewport(e){const{state:t}=this,{x:s,y:n,width:r,height:i}=e.viewportValue;t.viewport(s,e.height-i-n,r,i)}setScissorTest(e){this.state.setScissorTest(e)}getClearColor(){const e=super.getClearColor();return e.r*=e.a,e.g*=e.a,e.b*=e.a,e}clear(e,t,s,n=null,r=!0){const{gl:i,renderer:a}=this;n===null&&(n={textures:null,clearColorValue:this.getClearColor()});let u=0;if(e&&(u|=i.COLOR_BUFFER_BIT),t&&(u|=i.DEPTH_BUFFER_BIT),s&&(u|=i.STENCIL_BUFFER_BIT),u!==0){let c;n.clearColorValue?c=n.clearColorValue:c=this.getClearColor();const l=a.getClearDepth(),d=a.getClearStencil();if(t&&this.state.setDepthMask(!0),n.textures===null)i.clearColor(c.r,c.g,c.b,c.a),i.clear(u);else{if(r&&this._setFramebuffer(n),e)for(let p=0;p<n.textures.length;p++)p===0?i.clearBufferfv(i.COLOR,p,[c.r,c.g,c.b,c.a]):i.clearBufferfv(i.COLOR,p,[0,0,0,1]);t&&s?i.clearBufferfi(i.DEPTH_STENCIL,0,l,d):t?i.clearBufferfv(i.DEPTH,0,[l]):s&&i.clearBufferiv(i.STENCIL,0,[d])}}}beginCompute(e){const{state:t,gl:s}=this;t.bindFramebuffer(s.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,s,n,r=null){const{state:i,gl:a}=this;this.discard===!1&&(a.enable(a.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:u,transformBuffers:c,attributes:l}=this.get(n),d=this._getVaoKey(l),p=this.vaoCache[d];p===void 0?this.vaoCache[d]=this._createVao(l):i.setVertexState(p),i.useProgram(u),this._bindUniforms(s);const f=this._getTransformFeedback(c);a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,f),a.beginTransformFeedback(a.POINTS),r=r!==null?r:t.count,Array.isArray(r)&&(ls("WebGLBackend.compute(): The count parameter must be a single number, not an array."),r=r[0]),l[0].isStorageInstancedBufferAttribute?a.drawArraysInstanced(a.POINTS,0,1,r):a.drawArrays(a.POINTS,0,r),a.endTransformFeedback(),a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,null);for(let m=0;m<c.length;m++){const y=c[m];y.pbo&&this.has(y.pbo)&&this.textureUtils.copyBufferToTexture(y.transformBuffer,y.pbo),y.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e),this._currentContext&&this._setFramebuffer(this._currentContext)}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.isArrayTexture&&e.camera.isArrayCamera}draw(e){const{object:t,pipeline:s,material:n,context:r,hardwareClippingPlanes:i}=e,{programGPU:a}=this.get(s),{gl:u,state:c}=this,l=this.get(r),d=e.getDrawParameters();if(d===null)return;this._bindUniforms(e.getBindings());const p=t.isMesh&&t.matrixWorld.determinant()<0;c.setMaterial(n,p,i),c.useProgram(a);const f=e.getAttributes(),m=this.get(f);let y=m.vaoGPU;if(y===void 0){const U=this._getVaoKey(f);y=this.vaoCache[U],y===void 0&&(y=this._createVao(f),this.vaoCache[U]=y,m.vaoGPU=y)}const T=e.getIndex(),S=T!==null?this.get(T).bufferGPU:null;c.setVertexState(y,S);const R=l.lastOcclusionObject;if(R!==t&&R!==void 0){if(R!==null&&R.occlusionTest===!0&&(u.endQuery(u.ANY_SAMPLES_PASSED),l.occlusionQueryIndex++),t.occlusionTest===!0){const U=u.createQuery();u.beginQuery(u.ANY_SAMPLES_PASSED,U),l.occlusionQueries[l.occlusionQueryIndex]=U,l.occlusionQueryObjects[l.occlusionQueryIndex]=t}l.lastOcclusionObject=t}const w=this.bufferRenderer;t.isPoints?w.mode=u.POINTS:t.isLineSegments?w.mode=u.LINES:t.isLine?w.mode=u.LINE_STRIP:t.isLineLoop?w.mode=u.LINE_LOOP:n.wireframe===!0?(c.setLineWidth(n.wireframeLinewidth*this.renderer.getPixelRatio()),w.mode=u.LINES):w.mode=u.TRIANGLES;const{vertexCount:L,instanceCount:F}=d;let{firstVertex:P}=d;if(w.object=t,T!==null){P*=T.array.BYTES_PER_ELEMENT;const U=this.get(T);w.index=T.count,w.type=U.type}else w.index=0;const B=()=>{t.isBatchedMesh?t._multiDrawInstances!==null?(ls("THREE.WebGLBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),w.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances)):this.hasFeature("WEBGL_multi_draw")?w.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):ls("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):F>1?w.renderInstances(P,L,F):w.render(P,L)};if(e.camera.isArrayCamera===!0&&e.camera.cameras.length>0&&e.camera.isMultiViewCamera===!1){const U=this.get(e.camera),V=e.camera.cameras,ee=e.getBindingGroup("cameraIndex").bindings[0];if(U.indexesGPU===void 0||U.indexesGPU.length!==V.length){const Xe=new Uint32Array([0,0,0,0]),ts=[];for(let tt=0,Nt=V.length;tt<Nt;tt++){const vs=u.createBuffer();Xe[0]=tt,u.bindBuffer(u.UNIFORM_BUFFER,vs),u.bufferData(u.UNIFORM_BUFFER,Xe,u.STATIC_DRAW),ts.push(vs)}U.indexesGPU=ts}const se=this.get(ee),he=this.renderer.getPixelRatio(),pe=this._currentContext.renderTarget,Ve=this._isRenderCameraDepthArray(this._currentContext),bt=this._currentContext.activeCubeFace;if(Ve){const Xe=this.get(pe.depthTexture);if(Xe.clearedRenderId!==this.renderer._nodes.nodeFrame.renderId){Xe.clearedRenderId=this.renderer._nodes.nodeFrame.renderId;const{stencilBuffer:ts}=pe;for(let tt=0,Nt=V.length;tt<Nt;tt++)this.renderer._activeCubeFace=tt,this._currentContext.activeCubeFace=tt,this._setFramebuffer(this._currentContext),this.clear(!1,!0,ts,this._currentContext,!1);this.renderer._activeCubeFace=bt,this._currentContext.activeCubeFace=bt}}for(let Xe=0,ts=V.length;Xe<ts;Xe++){const tt=V[Xe];if(t.layers.test(tt.layers)){Ve&&(this.renderer._activeCubeFace=Xe,this._currentContext.activeCubeFace=Xe,this._setFramebuffer(this._currentContext));const Nt=tt.viewport;if(Nt!==void 0){const vs=Nt.x*he,Ug=Nt.y*he,Ig=Nt.width*he,Sc=Nt.height*he;c.viewport(Math.floor(vs),Math.floor(e.context.height-Sc-Ug),Math.floor(Ig),Math.floor(Sc))}c.bindBufferBase(u.UNIFORM_BUFFER,se.index,U.indexesGPU[Xe]),B()}this._currentContext.activeCubeFace=bt,this.renderer._activeCubeFace=bt}}else B()}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,s,n,r,i){return this.textureUtils.copyTextureToBuffer(e,t,s,n,r,i)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new Ww(e,t)}createProgram(e){const t=this.gl,{stage:s,code:n}=e,r=s==="fragment"?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(r,n),t.compileShader(r),this.set(e,{shaderGPU:r})}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){const s=this.gl,n=e.pipeline,{fragmentProgram:r,vertexProgram:i}=n,a=s.createProgram(),u=this.get(r).shaderGPU,c=this.get(i).shaderGPU;if(s.attachShader(a,u),s.attachShader(a,c),s.linkProgram(a),this.set(n,{programGPU:a,fragmentShader:u,vertexShader:c}),t!==null&&this.parallel){const l=new Promise(d=>{const p=this.parallel,f=()=>{s.getProgramParameter(a,p.COMPLETION_STATUS_KHR)?(this._completeCompile(e,n),d()):requestAnimationFrame(f)};f()});t.push(l);return}this._completeCompile(e,n)}_handleSource(e,t){const s=e.split(`
`),n=[],r=Math.max(t-6,0),i=Math.min(t+6,s.length);for(let a=r;a<i;a++){const u=a+1;n.push(`${u===t?">":" "} ${u}: ${s[a]}`)}return n.join(`
`)}_getShaderErrors(e,t,s){const n=e.getShaderParameter(t,e.COMPILE_STATUS),i=(e.getShaderInfoLog(t)||"").trim();if(n&&i==="")return"";const a=/ERROR: 0:(\d+)/.exec(i);if(a){const u=parseInt(a[1]);return s.toUpperCase()+`

`+i+`

`+this._handleSource(e.getShaderSource(t),u)}else return i}_logProgramError(e,t,s){if(this.renderer.debug.checkShaderErrors){const n=this.gl,i=(n.getProgramInfoLog(e)||"").trim();if(n.getProgramParameter(e,n.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(n,e,s,t);else{const a=this._getShaderErrors(n,s,"vertex"),u=this._getShaderErrors(n,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(e,n.VALIDATE_STATUS)+`

Program Info Log: `+i+`
`+a+`
`+u)}else i!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",i)}}_completeCompile(e,t){const{state:s,gl:n}=this,r=this.get(t),{programGPU:i,fragmentShader:a,vertexShader:u}=r;n.getProgramParameter(i,n.LINK_STATUS)===!1&&this._logProgramError(i,a,u),s.useProgram(i);const c=e.getBindings();this._setupBindings(c,i),this.set(t,{programGPU:i})}createComputePipeline(e,t){const{state:s,gl:n}=this,r={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(r);const{computeProgram:i}=e,a=n.createProgram(),u=this.get(r).shaderGPU,c=this.get(i).shaderGPU,l=i.transforms,d=[],p=[];for(let T=0;T<l.length;T++){const S=l[T];d.push(S.varyingName),p.push(S.attributeNode)}n.attachShader(a,u),n.attachShader(a,c),n.transformFeedbackVaryings(a,d,n.SEPARATE_ATTRIBS),n.linkProgram(a),n.getProgramParameter(a,n.LINK_STATUS)===!1&&this._logProgramError(a,u,c),s.useProgram(a),this._setupBindings(t,a);const f=i.attributes,m=[],y=[];for(let T=0;T<f.length;T++){const S=f[T].node.attribute;m.push(S),this.has(S)||this.attributeUtils.createAttribute(S,n.ARRAY_BUFFER)}for(let T=0;T<p.length;T++){const S=p[T].attribute;this.has(S)||this.attributeUtils.createAttribute(S,n.ARRAY_BUFFER);const R=this.get(S);y.push(R)}this.set(e,{programGPU:a,transformBuffers:y,attributes:m})}createBindings(e,t){if(this._knownBindings.has(t)===!1){this._knownBindings.add(t);let s=0,n=0;for(const r of t){this.set(r,{textures:n,uniformBuffers:s});for(const i of r.bindings)i.isUniformBuffer&&s++,i.isSampledTexture&&n++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,s=this.get(e);let n=s.uniformBuffers,r=s.textures;for(const i of e.bindings)if(i.isUniformsGroup||i.isUniformBuffer){const a=i.buffer,u=t.createBuffer();t.bindBuffer(t.UNIFORM_BUFFER,u),t.bufferData(t.UNIFORM_BUFFER,a,t.DYNAMIC_DRAW),this.set(i,{index:n++,bufferGPU:u})}else if(i.isSampledTexture){const{textureGPU:a,glTextureType:u}=this.get(i.texture);this.set(i,{index:r++,textureGPU:a,glTextureType:u})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const n=this.get(e).bufferGPU,r=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,n),t.bufferData(t.UNIFORM_BUFFER,r,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}hasFeature(e){const t=Object.keys(Wl).filter(n=>Wl[n]===e),s=this.extensions;for(let n=0;n<t.length;n++)if(s.has(t[n]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,s=null,n=null,r=0,i=0){this.textureUtils.copyTextureToTexture(e,t,s,n,r,i)}copyFramebufferToTexture(e,t,s){this.textureUtils.copyFramebufferToTexture(e,t,s)}_setFramebuffer(e){const{gl:t,state:s}=this;let n=null;if(e.textures!==null){const r=e.renderTarget,i=this.get(r),{samples:a,depthBuffer:u,stencilBuffer:c}=r,l=r.isWebGLCubeRenderTarget===!0,d=r.isRenderTarget3D===!0,p=r.depth>1,f=r.isXRRenderTarget===!0,m=f===!0&&r._hasExternalTextures===!0;let y=i.msaaFrameBuffer,T=i.depthRenderbuffer;const S=this.extensions.get("WEBGL_multisampled_render_to_texture"),R=this.extensions.get("OVR_multiview2"),w=this._useMultisampledExtension(r),L=Rm(e);let F;if(l?(i.cubeFramebuffers||(i.cubeFramebuffers={}),F=i.cubeFramebuffers[L]):f&&m===!1?F=this._xrFramebuffer:(i.framebuffers||(i.framebuffers={}),F=i.framebuffers[L]),F===void 0){F=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,F);const P=e.textures,B=[];if(l){i.cubeFramebuffers[L]=F;const{textureGPU:V}=this.get(P[0]),ee=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+ee,V,0)}else{i.framebuffers[L]=F;for(let V=0;V<P.length;V++){const ee=P[V],se=this.get(ee);se.renderTarget=e.renderTarget,se.cacheKey=L;const he=t.COLOR_ATTACHMENT0+V;if(r.multiview)R.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,he,se.textureGPU,0,a,0,2);else if(d||p){const pe=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,he,se.textureGPU,0,pe)}else w?S.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,he,t.TEXTURE_2D,se.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,he,t.TEXTURE_2D,se.textureGPU,0)}}const U=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(r._autoAllocateDepthBuffer===!0){const V=t.createRenderbuffer();this.textureUtils.setupRenderBufferStorage(V,e,0,w),i.xrDepthRenderbuffer=V,B.push(c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT),t.bindRenderbuffer(t.RENDERBUFFER,V),t.framebufferRenderbuffer(t.FRAMEBUFFER,U,t.RENDERBUFFER,V)}else if(e.depthTexture!==null){B.push(c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT);const V=this.get(e.depthTexture);if(V.renderTarget=e.renderTarget,V.cacheKey=L,r.multiview)R.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,U,V.textureGPU,0,a,0,2);else if(m&&w)S.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,U,t.TEXTURE_2D,V.textureGPU,0,a);else if(e.depthTexture.isArrayTexture){const ee=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,U,V.textureGPU,0,ee)}else t.framebufferTexture2D(t.FRAMEBUFFER,U,t.TEXTURE_2D,V.textureGPU,0)}i.depthInvalidationArray=B}else{if(this._isRenderCameraDepthArray(e)){s.bindFramebuffer(t.FRAMEBUFFER,F);const B=this.renderer._activeCubeFace,U=this.get(e.depthTexture),V=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.framebufferTextureLayer(t.FRAMEBUFFER,V,U.textureGPU,0,B)}if((f||w||r.multiview)&&r._isOpaqueFramebuffer!==!0){s.bindFramebuffer(t.FRAMEBUFFER,F);const B=this.get(e.textures[0]);r.multiview?R.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,B.textureGPU,0,a,0,2):w?S.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,B.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,B.textureGPU,0);const U=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(r._autoAllocateDepthBuffer===!0){const V=i.xrDepthRenderbuffer;t.bindRenderbuffer(t.RENDERBUFFER,V),t.framebufferRenderbuffer(t.FRAMEBUFFER,U,t.RENDERBUFFER,V)}else{const V=this.get(e.depthTexture);r.multiview?R.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,U,V.textureGPU,0,a,0,2):w?S.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,U,t.TEXTURE_2D,V.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,U,t.TEXTURE_2D,V.textureGPU,0)}}}if(a>0&&w===!1&&!r.multiview){if(y===void 0){const P=[];y=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,y);const B=[],U=e.textures;for(let V=0;V<U.length;V++){B[V]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,B[V]),P.push(t.COLOR_ATTACHMENT0+V);const ee=e.textures[V],se=this.get(ee);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,se.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+V,t.RENDERBUFFER,B[V])}if(t.bindRenderbuffer(t.RENDERBUFFER,null),i.msaaFrameBuffer=y,i.msaaRenderbuffers=B,u&&T===void 0){T=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(T,e,a),i.depthRenderbuffer=T;const V=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;P.push(V)}i.invalidationArray=P}n=i.msaaFrameBuffer}else n=F;s.drawBuffers(e,F)}s.bindFramebuffer(t.FRAMEBUFFER,n)}_getVaoKey(e){let t="";for(let s=0;s<e.length;s++){const n=this.get(e[s]);t+=":"+n.id}return t}_createVao(e){const{gl:t}=this,s=t.createVertexArray();t.bindVertexArray(s);for(let n=0;n<e.length;n++){const r=e[n],i=this.get(r);t.bindBuffer(t.ARRAY_BUFFER,i.bufferGPU),t.enableVertexAttribArray(n);let a,u;r.isInterleavedBufferAttribute===!0?(a=r.data.stride*i.bytesPerElement,u=r.offset*i.bytesPerElement):(a=0,u=0),i.isInteger?t.vertexAttribIPointer(n,r.itemSize,i.type,a,u):t.vertexAttribPointer(n,r.itemSize,i.type,r.normalized,a,u),r.isInstancedBufferAttribute&&!r.isInterleavedBufferAttribute?t.vertexAttribDivisor(n,r.meshPerAttribute):r.isInterleavedBufferAttribute&&r.data.isInstancedInterleavedBuffer&&t.vertexAttribDivisor(n,r.data.meshPerAttribute)}return t.bindBuffer(t.ARRAY_BUFFER,null),s}_getTransformFeedback(e){let t="";for(let r=0;r<e.length;r++)t+=":"+e[r].id;let s=this.transformFeedbackCache[t];if(s!==void 0)return s;const{gl:n}=this;s=n.createTransformFeedback(),n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,s);for(let r=0;r<e.length;r++){const i=e[r];n.bindBufferBase(n.TRANSFORM_FEEDBACK_BUFFER,r,i.transformBuffer)}return n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=s,s}_setupBindings(e,t){const s=this.gl;for(const n of e)for(const r of n.bindings){const a=this.get(r).index;if(r.isUniformsGroup||r.isUniformBuffer){const u=s.getUniformBlockIndex(t,r.name);s.uniformBlockBinding(t,u,a)}else if(r.isSampledTexture){const u=s.getUniformLocation(t,r.name);s.uniform1i(u,a)}}}_bindUniforms(e){const{gl:t,state:s}=this;for(const n of e)for(const r of n.bindings){const i=this.get(r),a=i.index;r.isUniformsGroup||r.isUniformBuffer?s.bindBufferBase(t.UNIFORM_BUFFER,a,i.bufferGPU):r.isSampledTexture&&s.bindTexture(i.glTextureType,i.textureGPU,t.TEXTURE0+a)}}_useMultisampledExtension(e){return e.multiview===!0?!0:e.samples>0&&this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e._autoAllocateDepthBuffer!==!1}dispose(){const e=this.extensions.get("WEBGL_lose_context");e&&e.loseContext(),this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}const gn={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},Ge={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},He={Store:"store"},re={Load:"load",Clear:"clear"},Jo={CCW:"ccw"},ea={None:"none",Front:"front",Back:"back"},Cn={Uint16:"uint16",Uint32:"uint32"},_={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10UFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},ta={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},Ds={Linear:"linear",Nearest:"nearest"},J={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDst:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},Ms={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},ql={None:0,All:15},ns={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},sa={Storage:"storage",ReadOnlyStorage:"read-only-storage"},na={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},Xl={NonFiltering:"non-filtering",Comparison:"comparison"},Bs={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},jl={TwoD:"2d",ThreeD:"3d"},we={TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",ThreeD:"3d"},tE={All:"all"},ei={Vertex:"vertex",Instance:"instance"},Ha={CoreFeaturesAndLimits:"core-features-and-limits",DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionBCSliced3D:"texture-compression-bc-sliced-3d",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TextureCompressionASTCSliced3D:"texture-compression-astc-sliced-3d",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",Float32Blendable:"float32-blendable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups",TextureFormatsTier1:"texture-formats-tier1",TextureFormatsTier2:"texture-formats-tier2"};class sE extends Cg{constructor(e,t,s){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s}update(){this.texture=this.textureNode.value}}class nE extends Rg{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let rE=0;class iE extends nE{constructor(e,t){super("StorageBuffer_"+rE++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:Oe.READ_WRITE,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class oE extends bs{constructor(e){super(),this.device=e;const t=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,s=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,n=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:Ds.Linear}),this.flipYSampler=e.createSampler({minFilter:Ds.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:t}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:s}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:n})}getTransferPipeline(e){let t=this.transferPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:gn.TriangleStrip,stripIndexFormat:Cn.Uint32},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:gn.TriangleStrip,stripIndexFormat:Cn.Uint32},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,s=0){const n=t.format,{width:r,height:i}=t.size,a=this.getTransferPipeline(n),u=this.getFlipYPipeline(n),c=this.device.createTexture({size:{width:r,height:i,depthOrArrayLayers:1},format:n,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),l=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:we.TwoD,baseArrayLayer:s}),d=c.createView({baseMipLevel:0,mipLevelCount:1,dimension:we.TwoD,baseArrayLayer:0}),p=this.device.createCommandEncoder({}),f=(m,y,T)=>{const S=m.getBindGroupLayout(0),R=this.device.createBindGroup({layout:S,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:y}]}),w=p.beginRenderPass({colorAttachments:[{view:T,loadOp:re.Clear,storeOp:He.Store,clearValue:[0,0,0,0]}]});w.setPipeline(m),w.setBindGroup(0,R),w.draw(4,1,0,0),w.end()};f(a,l,d),f(u,d,l),this.device.queue.submit([p.finish()]),c.destroy()}generateMipmaps(e,t,s=0){const n=this.get(e);n.useCount===void 0&&(n.useCount=0,n.layers=[]);const r=n.layers[s]||this._mipmapCreateBundles(e,t,s),i=this.device.createCommandEncoder({});this._mipmapRunBundles(i,r),this.device.queue.submit([i.finish()]),n.useCount!==0&&(n.layers[s]=r),n.useCount++}_mipmapCreateBundles(e,t,s){const n=this.getTransferPipeline(t.format),r=n.getBindGroupLayout(0);let i=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:we.TwoD,baseArrayLayer:s});const a=[];for(let u=1;u<t.mipLevelCount;u++){const c=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:i}]}),l=e.createView({baseMipLevel:u,mipLevelCount:1,dimension:we.TwoD,baseArrayLayer:s}),d={colorAttachments:[{view:l,loadOp:re.Clear,storeOp:He.Store,clearValue:[0,0,0,0]}]},p=this.device.createRenderBundleEncoder({colorFormats:[t.format]});p.setPipeline(n),p.setBindGroup(0,c),p.draw(4,1,0,0),a.push({renderBundles:[p.finish()],passDescriptor:d}),i=l}return a}_mipmapRunBundles(e,t){const s=t.length;for(let n=0;n<s;n++){const r=t[n],i=e.beginRenderPass(r.passDescriptor);i.executeBundles(r.renderBundles),i.end()}}}const aE={[dd]:"never",[Ja]:"less",[ud]:"equal",[cd]:"less-equal",[od]:"greater",[ad]:"greater-equal",[ld]:"always",[id]:"not-equal"},uE=[0,1,3,2,4,5];class cE{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new wt,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,s=t.device,n=t.get(e),r={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};r.magFilter===Ds.Linear&&r.minFilter===Ds.Linear&&r.mipmapFilter===Ds.Linear&&(r.maxAnisotropy=e.anisotropy),e.isDepthTexture&&e.compareFunction!==null&&(r.compare=aE[e.compareFunction]),n.sampler=s.createSampler(r)}createDefaultTexture(e){let t;const s=qa(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(s):t=this._getDefaultTextureGPU(s),this.backend.get(e).texture=t}createTexture(e,t={}){const s=this.backend,n=s.get(e);if(n.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");t.needsMipmaps===void 0&&(t.needsMipmaps=!1),t.levels===void 0&&(t.levels=1),t.depth===void 0&&(t.depth=1);const{width:r,height:i,depth:a,levels:u}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const c=this._getDimension(e),l=e.internalFormat||t.format||qa(e,s.device);n.format=l;const{samples:d,primarySamples:p,isMSAA:f}=s.utils.getTextureSampleData(e);let m=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(m|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&(m|=GPUTextureUsage.RENDER_ATTACHMENT);const y={label:e.name,size:{width:r,height:i,depthOrArrayLayers:a},mipLevelCount:u,sampleCount:p,dimension:c,format:l,usage:m};if(l===void 0){console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);return}if(e.isCubeTexture&&(y.textureBindingViewDimension=we.Cube),n.texture=s.device.createTexture(y),f){const T=Object.assign({},y);T.label=T.label+"-msaa",T.sampleCount=d,n.msaaTexture=s.device.createTexture(T)}n.initialized=!0,n.textureDescriptorGPU=y}destroyTexture(e){const t=this.backend,s=t.get(e);s.texture!==void 0&&s.texture.destroy(),s.msaaTexture!==void 0&&s.msaaTexture.destroy(),t.delete(e)}destroySampler(e){const s=this.backend.get(e);delete s.sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let s=0;s<6;s++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,s);else{const s=e.image.depth||1;for(let n=0;n<s;n++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,n)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:s}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:s,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const s=this.backend,{width:n,height:r}=s.getDrawingBufferSize(),i=this.depthTexture,a=s.get(i).texture;let u,c;if(t?(u=hs,c=ds):e&&(u=ps,c=Ce),a!==void 0){if(i.image.width===n&&i.image.height===r&&i.format===u&&i.type===c)return a;this.destroyTexture(i)}return i.name="depthBuffer",i.format=u,i.type=c,i.image.width=n,i.image.height=r,this.createTexture(i,{width:n,height:r}),s.get(i).texture}updateTexture(e,t){const s=this.backend.get(e),{textureDescriptorGPU:n}=s;if(!(e.isRenderTargetTexture||n===void 0)){if(e.isDataTexture)this._copyBufferToTexture(t.image,s.texture,n,0,e.flipY);else if(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)for(let r=0;r<t.image.depth;r++)this._copyBufferToTexture(t.image,s.texture,n,r,e.flipY,r);else e.isCompressedTexture||e.isCompressedArrayTexture?this._copyCompressedBufferToTexture(e.mipmaps,s.texture,n):e.isCubeTexture?this._copyCubeMapToTexture(t.images,s.texture,n,e.flipY,e.premultiplyAlpha):this._copyImageToTexture(t.image,s.texture,n,0,e.flipY,e.premultiplyAlpha);s.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,s,n,r,i){const a=this.backend.device,u=this.backend.get(e),c=u.texture,l=u.textureDescriptorGPU.format,d=this._getBytesPerTexel(l);let p=n*d;p=Math.ceil(p/256)*256;const f=a.createBuffer({size:n*r*d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),m=a.createCommandEncoder();m.copyTextureToBuffer({texture:c,origin:{x:t,y:s,z:i}},{buffer:f,bytesPerRow:p},{width:n,height:r});const y=this._getTypedArrayType(l);a.queue.submit([m.finish()]),await f.mapAsync(GPUMapMode.READ);const T=f.getMappedRange();return new y(T)}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const s=new br;s.minFilter=Rt,s.magFilter=Rt,this.createTexture(s,{width:1,height:1,format:e}),this.defaultTexture[e]=t=s}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const s=new Xa;s.minFilter=Rt,s.magFilter=Rt,this.createTexture(s,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=s}return this.backend.get(t).texture}_copyCubeMapToTexture(e,t,s,n,r){for(let i=0;i<6;i++){const a=e[i],u=n===!0?uE[i]:i;a.isDataTexture?this._copyBufferToTexture(a.image,t,s,u,n):this._copyImageToTexture(a,t,s,u,n,r)}}_copyImageToTexture(e,t,s,n,r,i){this.backend.device.queue.copyExternalImageToTexture({source:e,flipY:r},{texture:t,mipLevel:0,origin:{x:0,y:0,z:n},premultipliedAlpha:i},{width:s.size.width,height:s.size.height,depthOrArrayLayers:1})}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new oE(this.backend.device)),e}_generateMipmaps(e,t,s=0){this._getPassUtils().generateMipmaps(e,t,s)}_flipY(e,t,s=0){this._getPassUtils().flipY(e,t,s)}_copyBufferToTexture(e,t,s,n,r,i=0){const a=this.backend.device,u=e.data,c=this._getBytesPerTexel(s.format),l=e.width*c;a.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},u,{offset:e.width*e.height*c*i,bytesPerRow:l},{width:e.width,height:e.height,depthOrArrayLayers:1}),r===!0&&this._flipY(t,s,n)}_copyCompressedBufferToTexture(e,t,s){const n=this.backend.device,r=this._getBlockData(s.format),i=s.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const u=e[a],c=u.width,l=u.height,d=i?s.size.depthOrArrayLayers:1,p=Math.ceil(c/r.width)*r.byteLength,f=p*Math.ceil(l/r.height);for(let m=0;m<d;m++)n.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:m}},u.data,{offset:m*f,bytesPerRow:p,rowsPerImage:Math.ceil(l/r.height)},{width:Math.ceil(c/r.width)*r.width,height:Math.ceil(l/r.height)*r.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===_.BC1RGBAUnorm||e===_.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===_.BC2RGBAUnorm||e===_.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===_.BC3RGBAUnorm||e===_.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===_.BC4RUnorm||e===_.BC4RSnorm)return{byteLength:8,width:4,height:4};if(e===_.BC5RGUnorm||e===_.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===_.BC6HRGBUFloat||e===_.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===_.BC7RGBAUnorm||e===_.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===_.ETC2RGB8Unorm||e===_.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===_.ETC2RGB8A1Unorm||e===_.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===_.ETC2RGBA8Unorm||e===_.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===_.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===_.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===_.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===_.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===_.ASTC4x4Unorm||e===_.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===_.ASTC5x4Unorm||e===_.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===_.ASTC5x5Unorm||e===_.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===_.ASTC6x5Unorm||e===_.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===_.ASTC6x6Unorm||e===_.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===_.ASTC8x5Unorm||e===_.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===_.ASTC8x6Unorm||e===_.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===_.ASTC8x8Unorm||e===_.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===_.ASTC10x5Unorm||e===_.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===_.ASTC10x6Unorm||e===_.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===_.ASTC10x8Unorm||e===_.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===_.ASTC10x10Unorm||e===_.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===_.ASTC12x10Unorm||e===_.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===_.ASTC12x12Unorm||e===_.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let t=ta.ClampToEdge;return e===Vi?t=ta.Repeat:e===Ui&&(t=ta.MirrorRepeat),t}_convertFilterMode(e){let t=Ds.Linear;return(e===Rt||e===rd||e===cr)&&(t=Ds.Nearest),t}_getBytesPerTexel(e){if(e===_.R8Unorm||e===_.R8Snorm||e===_.R8Uint||e===_.R8Sint)return 1;if(e===_.R16Uint||e===_.R16Sint||e===_.R16Float||e===_.RG8Unorm||e===_.RG8Snorm||e===_.RG8Uint||e===_.RG8Sint)return 2;if(e===_.R32Uint||e===_.R32Sint||e===_.R32Float||e===_.RG16Uint||e===_.RG16Sint||e===_.RG16Float||e===_.RGBA8Unorm||e===_.RGBA8UnormSRGB||e===_.RGBA8Snorm||e===_.RGBA8Uint||e===_.RGBA8Sint||e===_.BGRA8Unorm||e===_.BGRA8UnormSRGB||e===_.RGB9E5UFloat||e===_.RGB10A2Unorm||e===_.RG11B10UFloat||e===_.Depth32Float||e===_.Depth24Plus||e===_.Depth24PlusStencil8||e===_.Depth32FloatStencil8)return 4;if(e===_.RG32Uint||e===_.RG32Sint||e===_.RG32Float||e===_.RGBA16Uint||e===_.RGBA16Sint||e===_.RGBA16Float)return 8;if(e===_.RGBA32Uint||e===_.RGBA32Sint||e===_.RGBA32Float)return 16}_getTypedArrayType(e){if(e===_.R8Uint)return Uint8Array;if(e===_.R8Sint)return Int8Array;if(e===_.R8Unorm)return Uint8Array;if(e===_.R8Snorm)return Int8Array;if(e===_.RG8Uint)return Uint8Array;if(e===_.RG8Sint)return Int8Array;if(e===_.RG8Unorm)return Uint8Array;if(e===_.RG8Snorm)return Int8Array;if(e===_.RGBA8Uint)return Uint8Array;if(e===_.RGBA8Sint)return Int8Array;if(e===_.RGBA8Unorm)return Uint8Array;if(e===_.RGBA8Snorm)return Int8Array;if(e===_.R16Uint)return Uint16Array;if(e===_.R16Sint)return Int16Array;if(e===_.RG16Uint)return Uint16Array;if(e===_.RG16Sint)return Int16Array;if(e===_.RGBA16Uint)return Uint16Array;if(e===_.RGBA16Sint)return Int16Array;if(e===_.R16Float||e===_.RG16Float||e===_.RGBA16Float)return Uint16Array;if(e===_.R32Uint)return Uint32Array;if(e===_.R32Sint)return Int32Array;if(e===_.R32Float)return Float32Array;if(e===_.RG32Uint)return Uint32Array;if(e===_.RG32Sint)return Int32Array;if(e===_.RG32Float)return Float32Array;if(e===_.RGBA32Uint)return Uint32Array;if(e===_.RGBA32Sint)return Int32Array;if(e===_.RGBA32Float)return Float32Array;if(e===_.BGRA8Unorm||e===_.BGRA8UnormSRGB)return Uint8Array;if(e===_.RGB10A2Unorm||e===_.RGB9E5UFloat||e===_.RG11B10UFloat)return Uint32Array;if(e===_.Depth32Float)return Float32Array;if(e===_.Depth24Plus||e===_.Depth24PlusStencil8)return Uint32Array;if(e===_.Depth32FloatStencil8)return Float32Array}_getDimension(e){let t;return e.is3DTexture||e.isData3DTexture?t=jl.ThreeD:t=jl.TwoD,t}}function qa(o,e=null){const t=o.format,s=o.type,n=o.colorSpace,r=Ee.getTransfer(n);let i;if(o.isCompressedTexture===!0||o.isCompressedArrayTexture===!0)switch(t){case ri:i=r===j?_.BC1RGBAUnormSRGB:_.BC1RGBAUnorm;break;case ii:i=r===j?_.BC2RGBAUnormSRGB:_.BC2RGBAUnorm;break;case oi:i=r===j?_.BC3RGBAUnormSRGB:_.BC3RGBAUnorm;break;case oa:i=r===j?_.ETC2RGB8UnormSRGB:_.ETC2RGB8Unorm;break;case aa:i=r===j?_.ETC2RGBA8UnormSRGB:_.ETC2RGBA8Unorm;break;case ua:i=r===j?_.ASTC4x4UnormSRGB:_.ASTC4x4Unorm;break;case ca:i=r===j?_.ASTC5x4UnormSRGB:_.ASTC5x4Unorm;break;case la:i=r===j?_.ASTC5x5UnormSRGB:_.ASTC5x5Unorm;break;case da:i=r===j?_.ASTC6x5UnormSRGB:_.ASTC6x5Unorm;break;case ha:i=r===j?_.ASTC6x6UnormSRGB:_.ASTC6x6Unorm;break;case pa:i=r===j?_.ASTC8x5UnormSRGB:_.ASTC8x5Unorm;break;case fa:i=r===j?_.ASTC8x6UnormSRGB:_.ASTC8x6Unorm;break;case ma:i=r===j?_.ASTC8x8UnormSRGB:_.ASTC8x8Unorm;break;case ga:i=r===j?_.ASTC10x5UnormSRGB:_.ASTC10x5Unorm;break;case ya:i=r===j?_.ASTC10x6UnormSRGB:_.ASTC10x6Unorm;break;case xa:i=r===j?_.ASTC10x8UnormSRGB:_.ASTC10x8Unorm;break;case Ta:i=r===j?_.ASTC10x10UnormSRGB:_.ASTC10x10Unorm;break;case _a:i=r===j?_.ASTC12x10UnormSRGB:_.ASTC12x10Unorm;break;case ba:i=r===j?_.ASTC12x12UnormSRGB:_.ASTC12x12Unorm;break;case At:i=r===j?_.RGBA8UnormSRGB:_.RGBA8Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}else switch(t){case At:switch(s){case er:i=_.RGBA8Snorm;break;case tr:i=_.RGBA16Sint;break;case hn:i=_.RGBA16Uint;break;case Ce:i=_.RGBA32Uint;break;case qe:i=_.RGBA32Sint;break;case it:i=r===j?_.RGBA8UnormSRGB:_.RGBA8Unorm;break;case Ke:i=_.RGBA16Float;break;case dt:i=_.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",s)}break;case eu:switch(s){case Fd:i=_.RGB9E5UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",s)}break;case tu:switch(s){case er:i=_.R8Snorm;break;case tr:i=_.R16Sint;break;case hn:i=_.R16Uint;break;case Ce:i=_.R32Uint;break;case qe:i=_.R32Sint;break;case it:i=_.R8Unorm;break;case Ke:i=_.R16Float;break;case dt:i=_.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",s)}break;case Us:switch(s){case er:i=_.RG8Snorm;break;case tr:i=_.RG16Sint;break;case hn:i=_.RG16Uint;break;case Ce:i=_.RG32Uint;break;case qe:i=_.RG32Sint;break;case it:i=_.RG8Unorm;break;case Ke:i=_.RG16Float;break;case dt:i=_.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",s)}break;case ps:switch(s){case hn:i=_.Depth16Unorm;break;case Ce:i=_.Depth24Plus;break;case dt:i=_.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",s)}break;case hs:switch(s){case ds:i=_.Depth24PlusStencil8;break;case dt:e&&e.features.has(Ha.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),i=_.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",s)}break;case su:switch(s){case qe:i=_.R32Sint;break;case Ce:i=_.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",s)}break;case nu:switch(s){case qe:i=_.RG32Sint;break;case Ce:i=_.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",s)}break;case ru:switch(s){case qe:i=_.RGBA32Sint;break;case Ce:i=_.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",s)}break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}return i}const lE=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,dE=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,Kl={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_depth_2d_array:"depthTexture",texture_depth_multisampled_2d:"depthTexture",texture_depth_cube:"depthTexture",texture_depth_cube_array:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},hE=o=>{o=o.trim();const e=o.match(lE);if(e!==null&&e.length===4){const t=e[2],s=[];let n=null;for(;(n=dE.exec(t))!==null;)s.push({name:n[1],type:n[2]});const r=[];for(let l=0;l<s.length;l++){const{name:d,type:p}=s[l];let f=p;f.startsWith("ptr")?f="pointer":(f.startsWith("texture")&&(f=p.split("<")[0]),f=Kl[f]),r.push(new Tc(f,d))}const i=o.substring(e[0].length),a=e[3]||"void",u=e[1]!==void 0?e[1]:"";return{type:Kl[a]||a,inputs:r,name:u,inputsCode:t,blockCode:i,outputType:a}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class pE extends bc{constructor(e){const{type:t,inputs:s,name:n,inputsCode:r,blockCode:i,outputType:a}=hE(e);super(t,s,n),this.inputsCode=r,this.blockCode=i,this.outputType=a}getCode(e=this.name){const t=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class fE extends Ng{parseFunction(e){return new pE(e)}}const un=typeof self<"u"?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},mE={[Oe.READ_ONLY]:"read",[Oe.WRITE_ONLY]:"write",[Oe.READ_WRITE]:"read_write"},Yl={[Vi]:"repeat",[Ii]:"clamp",[Ui]:"mirror"},ti={vertex:un?un.VERTEX:1,fragment:un?un.FRAGMENT:2,compute:un?un.COMPUTE:4},Ql={instance:!0,swizzleAssign:!1,storageBuffer:!0},gE={"^^":"tsl_xor"},yE={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},Zl={},lt={tsl_xor:new Ae("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new Ae("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new Ae("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new Ae("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new Ae("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new Ae("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new Ae("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new Ae("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new Ae("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new Ae("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new Ae("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new Ae("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new Ae(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {

	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},Zn={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};typeof navigator<"u"&&/Windows/g.test(navigator.userAgent)&&(lt.pow_float=new Ae("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),lt.pow_vec2=new Ae("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[lt.pow_float]),lt.pow_vec3=new Ae("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[lt.pow_float]),lt.pow_vec4=new Ae("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[lt.pow_float]),Zn.pow_float="tsl_pow_float",Zn.pow_vec2="tsl_pow_vec2",Zn.pow_vec3="tsl_pow_vec3",Zn.pow_vec4="tsl_pow_vec4");let Pg="";(typeof navigator<"u"&&/Firefox|Deno/g.test(navigator.userAgent))!==!0&&(Pg+=`diagnostic( off, derivative_uniformity );
`);class xE extends bg{constructor(e,t){super(e,t,new fE),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}_generateTextureSample(e,t,s,n,r=this.shaderStage){return r==="fragment"?n?`textureSample( ${t}, ${t}_sampler, ${s}, ${n} )`:`textureSample( ${t}, ${t}_sampler, ${s} )`:this.generateTextureSampleLevel(e,t,s,"0",n)}generateTextureSampleLevel(e,t,s,n,r){return this.isUnfilterable(e)===!1?`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s,n):this.generateTextureLod(e,t,s,r,n)}generateWrapFunction(e){const t=`tsl_coord_${Yl[e.wrapS]}S_${Yl[e.wrapT]}_${e.isData3DTexture?"3d":"2d"}T`;let s=Zl[t];if(s===void 0){const n=[],r=e.isData3DTexture?"vec3f":"vec2f";let i=`fn ${t}( coord : ${r} ) -> ${r} {

	return ${r}(
`;const a=(u,c)=>{u===Vi?(n.push(lt.repeatWrapping_float),i+=`		tsl_repeatWrapping_float( coord.${c} )`):u===Ii?(n.push(lt.clampWrapping_float),i+=`		tsl_clampWrapping_float( coord.${c} )`):u===Ui?(n.push(lt.mirrorWrapping_float),i+=`		tsl_mirrorWrapping_float( coord.${c} )`):(i+=`		coord.${c}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${u}" for vertex shader.`))};a(e.wrapS,"x"),i+=`,
`,a(e.wrapT,"y"),e.isData3DTexture&&(i+=`,
`,a(e.wrapR,"z")),i+=`
	);

}
`,Zl[t]=s=new Ae(i,n)}return s.build(this),t}generateArrayDeclaration(e,t){return`array< ${this.getType(e)}, ${t} >`}generateTextureDimension(e,t,s){const n=this.getDataFromNode(e,this.shaderStage,this.globalCache);n.dimensionsSnippet===void 0&&(n.dimensionsSnippet={});let r=n.dimensionsSnippet[s];if(n.dimensionsSnippet[s]===void 0){let i,a;const{primarySamples:u}=this.renderer.backend.utils.getTextureSampleData(e),c=u>1;e.isData3DTexture?a="vec3<u32>":a="vec2<u32>",c||e.isStorageTexture?i=t:i=`${t}${s?`, u32( ${s} )`:""}`,r=new ui(new ci(`textureDimensions( ${i} )`,a)),n.dimensionsSnippet[s]=r,(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)&&(n.arrayLayerCount=new ui(new ci(`textureNumLayers(${t})`,"u32"))),e.isTextureCube&&(n.cubeFaceCount=new ui(new ci("6u","u32")))}return r.build(this)}generateFilteredTexture(e,t,s,n="0u"){this._include("biquadraticTexture");const r=this.generateWrapFunction(e),i=this.generateTextureDimension(e,t,n);return`tsl_biquadraticTexture( ${t}, ${r}( ${s} ), ${i}, u32( ${n} ) )`}generateTextureLod(e,t,s,n,r="0u"){const i=this.generateWrapFunction(e),a=this.generateTextureDimension(e,t,r),u=e.isData3DTexture?"vec3":"vec2",c=`${u}<u32>( ${i}( ${s} ) * ${u}<f32>( ${a} ) )`;return this.generateTextureLoad(e,t,c,n,r)}generateTextureLoad(e,t,s,n,r="0u"){let i;return n?i=`textureLoad( ${t}, ${s}, ${n}, u32( ${r} ) )`:(i=`textureLoad( ${t}, ${s}, u32( ${r} ) )`,this.renderer.backend.compatibilityMode&&e.isDepthTexture&&(i+=".x")),i}generateTextureStore(e,t,s,n,r){let i;return n?i=`textureStore( ${t}, ${s}, ${n}, ${r} )`:i=`textureStore( ${t}, ${s}, ${r} )`,i}isSampleCompare(e){return e.isDepthTexture===!0&&e.compareFunction!==null}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===dt||this.isSampleCompare(e)===!1&&e.minFilter===Rt&&e.magFilter===Rt||this.renderer.backend.utils.getTextureSampleData(e).primarySamples>1}generateTexture(e,t,s,n,r=this.shaderStage){let i=null;return this.isUnfilterable(e)?i=this.generateTextureLod(e,t,s,n,"0",r):i=this._generateTextureSample(e,t,s,n,r),i}generateTextureGrad(e,t,s,n,r,i=this.shaderStage){if(i==="fragment")return`textureSampleGrad( ${t}, ${t}_sampler, ${s},  ${n[0]}, ${n[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${i} shader.`)}generateTextureCompare(e,t,s,n,r,i=this.shaderStage){if(i==="fragment")return e.isDepthTexture===!0&&e.isArrayTexture===!0?`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${r}, ${n} )`:`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${n} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${i} shader.`)}generateTextureLevel(e,t,s,n,r){return this.isUnfilterable(e)===!1?`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s,n):this.generateTextureLod(e,t,s,r,n)}generateTextureBias(e,t,s,n,r,i=this.shaderStage){if(i==="fragment")return`textureSampleBias( ${t}, ${t}_sampler, ${s}, ${n} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${i} shader.`)}getPropertyName(e,t=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(t==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){const s=e.name,n=e.type;return n==="texture"||n==="cubeTexture"||n==="storageTexture"||n==="texture3D"?s:n==="buffer"||n==="storageBuffer"||n==="indirectStorageBuffer"?this.isCustomStruct(e)?s:s+".value":e.groupNode.name+"."+s}return super.getPropertyName(e)}getOutputStructName(){return"output"}getFunctionOperator(e){const t=gE[e];return t!==void 0?(this._include(t),t):null}getNodeAccess(e,t){return t!=="compute"?e.isAtomic===!0?(console.warn("WebGPURenderer: Atomic operations are only supported in compute shaders."),Oe.READ_WRITE):Oe.READ_ONLY:e.access}getStorageAccess(e,t){return mE[this.getNodeAccess(e,t)]}getUniformFromNode(e,t,s,n=null){const r=super.getUniformFromNode(e,t,s,n),i=this.getDataFromNode(e,s,this.globalCache);if(i.uniformGPU===void 0){let a;const u=e.groupNode,c=u.name,l=this.getBindGroupArray(c,s);if(t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="texture3D"){let d=null;const p=this.getNodeAccess(e,s);if(t==="texture"||t==="storageTexture"?e.value.is3DTexture===!0?d=new Wa(r.name,r.node,u,p):d=new xo(r.name,r.node,u,p):t==="cubeTexture"?d=new Mg(r.name,r.node,u,p):t==="texture3D"&&(d=new Wa(r.name,r.node,u,p)),d.store=e.isStorageTextureNode===!0,d.setVisibility(ti[s]),this.isUnfilterable(e.value)===!1&&d.store===!1){const f=new sE(`${r.name}_sampler`,r.node,u);f.setVisibility(ti[s]),l.push(f,d),a=[f,d]}else l.push(d),a=[d]}else if(t==="buffer"||t==="storageBuffer"||t==="indirectStorageBuffer"){const d=t==="buffer"?wg:iE,p=new d(e,u);p.setVisibility(ti[s]),l.push(p),a=p,r.name=n||"NodeBuffer_"+r.id}else{const d=this.uniformGroups[s]||(this.uniformGroups[s]={});let p=d[c];p===void 0&&(p=new Eg(c,u),p.setVisibility(ti[s]),d[c]=p,l.push(p)),a=this.getNodeUniform(r,t),p.addUniform(a)}i.uniformGPU=a}return r}getBuiltin(e,t,s,n=this.shaderStage){const r=this.builtins[n]||(this.builtins[n]=new Map);return r.has(e)===!1&&r.set(e,{name:e,property:t,type:s}),t}hasBuiltin(e,t=this.shaderStage){return this.builtins[t]!==void 0&&this.builtins[t].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),n=[];for(const i of t.inputs)n.push(i.name+" : "+this.getType(i.type));let r=`fn ${t.name}( ${n.join(", ")} ) -> ${this.getType(t.type)} {
${s.vars}
${s.code}
`;return s.result&&(r+=`	return ${s.result};
`),r+=`
}
`,r}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],s=this.directives[e];if(s!==void 0)for(const n of s)t.push(`enable ${n};`);return t.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const t=[],s=this.builtins[e];if(s!==void 0)for(const{name:n,property:r,type:i}of s.values())t.push(`@builtin( ${n} ) ${r} : ${i}`);return t.join(`,
	`)}getScopedArray(e,t,s,n){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:s,bufferCount:n}),e}getScopedArrays(e){if(e!=="compute")return;const t=[];for(const{name:s,scope:n,bufferType:r,bufferCount:i}of this.scopedArrays.values()){const a=this.getType(r);t.push(`var<${n}> ${s}: array< ${a}, ${i} >;`)}return t.join(`
`)}getAttributes(e){const t=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","globalId","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){const s=this.getBuiltins("attribute");s&&t.push(s);const n=this.getAttributesArray();for(let r=0,i=n.length;r<i;r++){const a=n[r],u=a.name,c=this.getType(a.type);t.push(`@location( ${r} ) ${u} : ${c}`)}}return t.join(`,
	`)}getStructMembers(e){const t=[];for(const s of e.members){const n=e.output?"@location( "+s.index+" ) ":"";let r=this.getType(s.type);s.atomic&&(r="atomic< "+r+" >"),t.push(`	${n+s.name} : ${r}`)}return e.output&&t.push(`	${this.getBuiltins("output")}`),t.join(`,
`)}getStructs(e){let t="";const s=this.structs[e];if(s.length>0){const n=[];for(const r of s){let i=`struct ${r.name} {
`;i+=this.getStructMembers(r),i+=`
};`,n.push(i)}t=`
`+n.join(`

`)+`
`}return t}getVar(e,t,s=null){let n=`var ${t} : `;return s!==null?n+=this.generateArrayDeclaration(e,s):n+=this.getType(e),n}getVars(e){const t=[],s=this.vars[e];if(s!==void 0)for(const n of s)t.push(`	${this.getVar(n.type,n.name,n.count)};`);return`
${t.join(`
`)}
`}getVaryings(e){const t=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){const r=this.varyings,i=this.vars[e];for(let a=0;a<r.length;a++){const u=r[a];if(u.needsInterpolation){let c=`@location( ${a} )`;if(u.interpolationType){const l=u.interpolationSampling!==null?`, ${u.interpolationSampling} )`:" )";c+=` @interpolate( ${u.interpolationType}${l}`}else/^(int|uint|ivec|uvec)/.test(u.type)&&(c+=` @interpolate( ${this.renderer.backend.compatibilityMode?"flat, either":"flat"} )`);t.push(`${c} ${u.name} : ${this.getType(u.type)}`)}else e==="vertex"&&i.includes(u)===!1&&i.push(u)}}const s=this.getBuiltins(e);s&&t.push(s);const n=t.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+n):n}isCustomStruct(e){const t=e.value,s=e.node,n=(t.isBufferAttribute||t.isInstancedBufferAttribute)&&s.structTypeNode!==null,r=s.value&&s.value.array&&typeof s.value.itemSize=="number"&&s.value.array.length>s.value.itemSize;return n&&!r}getUniforms(e){const t=this.uniforms[e],s=[],n=[],r=[],i={};for(const u of t){const c=u.groupNode.name,l=this.bindingsIndexes[c];if(u.type==="texture"||u.type==="cubeTexture"||u.type==="storageTexture"||u.type==="texture3D"){const d=u.node.value;this.isUnfilterable(d)===!1&&u.node.isStorageTextureNode!==!0&&(this.isSampleCompare(d)?s.push(`@binding( ${l.binding++} ) @group( ${l.group} ) var ${u.name}_sampler : sampler_comparison;`):s.push(`@binding( ${l.binding++} ) @group( ${l.group} ) var ${u.name}_sampler : sampler;`));let p,f="";const{primarySamples:m}=this.renderer.backend.utils.getTextureSampleData(d);if(m>1&&(f="_multisampled"),d.isCubeTexture===!0)p="texture_cube<f32>";else if(d.isDepthTexture===!0)this.renderer.backend.compatibilityMode&&d.compareFunction===null?p=`texture${f}_2d<f32>`:p=`texture_depth${f}_2d${d.isArrayTexture===!0?"_array":""}`;else if(u.node.isStorageTextureNode===!0){const y=qa(d),T=this.getStorageAccess(u.node,e),S=u.node.value.is3DTexture,R=u.node.value.isArrayTexture;p=`texture_storage_${S?"3d":`2d${R?"_array":""}`}<${y}, ${T}>`}else if(d.isArrayTexture===!0||d.isDataArrayTexture===!0||d.isCompressedArrayTexture===!0)p="texture_2d_array<f32>";else if(d.is3DTexture===!0||d.isData3DTexture===!0)p="texture_3d<f32>";else{const y=this.getComponentTypeFromTexture(d).charAt(0);p=`texture${f}_2d<${y}32>`}s.push(`@binding( ${l.binding++} ) @group( ${l.group} ) var ${u.name} : ${p};`)}else if(u.type==="buffer"||u.type==="storageBuffer"||u.type==="indirectStorageBuffer"){const d=u.node,p=this.getType(d.getNodeType(this)),f=d.bufferCount,m=f>0&&u.type==="buffer"?", "+f:"",y=d.isStorageBufferNode?`storage, ${this.getStorageAccess(d,e)}`:"uniform";if(this.isCustomStruct(u))n.push(`@binding( ${l.binding++} ) @group( ${l.group} ) var<${y}> ${u.name} : ${p};`);else{const S=`	value : array< ${d.isAtomic?`atomic<${p}>`:`${p}`}${m} >`;n.push(this._getWGSLStructBinding(u.name,S,y,l.binding++,l.group))}}else{const d=this.getType(this.getVectorType(u.type)),p=u.groupNode.name;(i[p]||(i[p]={index:l.binding++,id:l.group,snippets:[]})).snippets.push(`	${u.name} : ${d}`)}}for(const u in i){const c=i[u];r.push(this._getWGSLStructBinding(u,c.snippets.join(`,
`),"uniform",c.index,c.id))}let a=s.join(`
`);return a+=n.join(`
`),a+=r.join(`
`),a}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){this.shaderStage=t;const s=e[t];s.uniforms=this.getUniforms(t),s.attributes=this.getAttributes(t),s.varyings=this.getVaryings(t),s.structs=this.getStructs(t),s.vars=this.getVars(t),s.codes=this.getCodes(t),s.directives=this.getDirectives(t),s.scopedArrays=this.getScopedArrays(t);let n=`// code

`;n+=this.flowCode[t];const r=this.flowNodes[t],i=r[r.length-1],a=i.outputNode,u=a!==void 0&&a.isOutputStructNode===!0;for(const c of r){const l=this.getFlowData(c),d=c.name;if(d&&(n.length>0&&(n+=`
`),n+=`	// flow -> ${d}
`),n+=`${l.code}
	`,c===i&&t!=="compute"){if(n+=`// result

	`,t==="vertex")n+=`varyings.Vertex = ${l.result};`;else if(t==="fragment")if(u)s.returnType=a.getNodeType(this),s.structs+="var<private> output : "+s.returnType+";",n+=`return ${l.result};`;else{let p="	@location(0) color: vec4<f32>";const f=this.getBuiltins("output");f&&(p+=`,
	`+f),s.returnType="OutputStruct",s.structs+=this._getWGSLStruct("OutputStruct",p),s.structs+=`
var<private> output : OutputStruct;`,n+=`output.color = ${l.result};

	return output;`}}}s.flow=n}if(this.shaderStage=null,this.material!==null)this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment);else{const t=this.object.workgroupSize;this.computeShader=this._getWGSLComputeCode(e.compute,t)}}getMethod(e,t=null){let s;return t!==null&&(s=this._getWGSLMethod(e+"_"+t)),s===void 0&&(s=this._getWGSLMethod(e)),s||e}getType(e){return yE[e]||e}isAvailable(e){let t=Ql[e];return t===void 0&&(e==="float32Filterable"?t=this.renderer.hasFeature("float32-filterable"):e==="clipDistance"&&(t=this.renderer.hasFeature("clip-distances")),Ql[e]=t),t}_getWGSLMethod(e){return lt[e]!==void 0&&this._include(e),Zn[e]}_include(e){const t=lt[e];return t.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// structs
${e.structs}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${Pg}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,t){const[s,n,r]=t;return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${s}, ${n}, ${r} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = globalId.x
		+ globalId.y * ( ${s} * numWorkgroups.x )
		+ globalId.z * ( ${s} * numWorkgroups.x ) * ( ${n} * numWorkgroups.y );

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,t){return`
struct ${e} {
${t}
};`}_getWGSLStructBinding(e,t,s,n=0,r=0){const i=e+"Struct";return`${this._getWGSLStruct(i,t)}
@binding( ${n} ) @group( ${r} )
var<${s}> ${e} : ${i};`}}class TE{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return e.depthTexture!==null?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=_.Depth24PlusStencil8:e.depth&&(t=_.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getTextureSampleData(e){let t;if(e.isFramebufferTexture)t=1;else if(e.isDepthTexture&&!e.renderTarget){const r=this.backend.renderer,i=r.getRenderTarget();t=i?i.samples:r.samples}else e.renderTarget&&(t=e.renderTarget.samples);t=t||1;const s=t>1&&e.renderTarget!==null&&e.isDepthTexture!==!0&&e.isFramebufferTexture!==!0;return{samples:t,primarySamples:s?1:t,isMSAA:s}}getCurrentColorFormat(e){let t;return e.textures!==null?t=this.getTextureFormatGPU(e.textures[0]):t=this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){if(e.isPoints)return gn.PointList;if(e.isLineSegments||e.isMesh&&t.wireframe===!0)return gn.LineList;if(e.isLine)return gn.LineStrip;if(e.isMesh)return gn.TriangleList}getSampleCount(e){return e>=4?4:1}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){const e=this.backend.parameters.outputType;if(e===void 0)return navigator.gpu.getPreferredCanvasFormat();if(e===it)return _.BGRA8Unorm;if(e===Ke)return _.RGBA16Float;throw new Error("Unsupported outputType")}}const Lg=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]);typeof Float16Array<"u"&&Lg.set(Float16Array,["float16"]);const _E=new Map([[Id,["float16"]]]),bE=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class NE{constructor(e){this.backend=e}createAttribute(e,t){const s=this._getBufferAttribute(e),n=this.backend,r=n.get(s);let i=r.buffer;if(i===void 0){const a=n.device;let u=s.array;if(e.normalized===!1){if(u.constructor===Int16Array||u.constructor===Int8Array)u=new Int32Array(u);else if((u.constructor===Uint16Array||u.constructor===Uint8Array)&&(u=new Uint32Array(u),t&GPUBufferUsage.INDEX))for(let d=0;d<u.length;d++)u[d]===65535&&(u[d]=4294967295)}if(s.array=u,(s.isStorageBufferAttribute||s.isStorageInstancedBufferAttribute)&&s.itemSize===3){u=new u.constructor(s.count*4);for(let d=0;d<s.count;d++)u.set(s.array.subarray(d*3,d*3+3),d*4);s.itemSize=4,s.array=u,r._force3to4BytesAlignment=!0}const c=u.byteLength,l=c+(4-c%4)%4;i=a.createBuffer({label:s.name,size:l,usage:t,mappedAtCreation:!0}),new u.constructor(i.getMappedRange()).set(u),i.unmap(),r.buffer=i}}updateAttribute(e){const t=this._getBufferAttribute(e),s=this.backend,n=s.device,r=s.get(t),i=s.get(t).buffer;let a=t.array;if(r._force3to4BytesAlignment===!0){a=new a.constructor(t.count*4);for(let l=0;l<t.count;l++)a.set(t.array.subarray(l*3,l*3+3),l*4);t.array=a}const u=this._isTypedArray(a),c=t.updateRanges;if(c.length===0)n.queue.writeBuffer(i,0,a,0);else{const l=u?1:a.BYTES_PER_ELEMENT;for(let d=0,p=c.length;d<p;d++){const f=c[d];let m,y;if(r._force3to4BytesAlignment===!0){const S=Math.floor(f.start/3),R=Math.ceil(f.count/3);m=S*4*l,y=R*4*l}else m=f.start*l,y=f.count*l;const T=m*(u?a.BYTES_PER_ELEMENT:1);n.queue.writeBuffer(i,T,a,m,y)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),s=new Map;for(let n=0;n<t.length;n++){const r=t[n],i=r.array.BYTES_PER_ELEMENT,a=this._getBufferAttribute(r);let u=s.get(a);if(u===void 0){let d,p;r.isInterleavedBufferAttribute===!0?(d=r.data.stride*i,p=r.data.isInstancedInterleavedBuffer?ei.Instance:ei.Vertex):(d=r.itemSize*i,p=r.isInstancedBufferAttribute?ei.Instance:ei.Vertex),r.normalized===!1&&(r.array.constructor===Int16Array||r.array.constructor===Uint16Array)&&(d=4),u={arrayStride:d,attributes:[],stepMode:p},s.set(a,u)}const c=this._getVertexFormat(r),l=r.isInterleavedBufferAttribute===!0?r.offset*i:0;u.attributes.push({shaderLocation:n,offset:l,format:c})}return Array.from(s.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,s=t.device,r=t.get(this._getBufferAttribute(e)).buffer,i=r.size,a=s.createBuffer({label:`${e.name}_readback`,size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),u=s.createCommandEncoder({label:`readback_encoder_${e.name}`});u.copyBufferToBuffer(r,0,a,0,i);const c=u.finish();s.queue.submit([c]),await a.mapAsync(GPUMapMode.READ);const l=a.getMappedRange(),d=new e.array.constructor(l.slice(0));return a.unmap(),d.buffer}_getVertexFormat(e){const{itemSize:t,normalized:s}=e,n=e.array.constructor,r=e.constructor;let i;if(t===1)i=bE.get(n);else{const u=(_E.get(r)||Lg.get(n))[s?1:0];if(u){const c=n.BYTES_PER_ELEMENT*t,d=Math.floor((c+3)/4)*4/n.BYTES_PER_ELEMENT;if(d%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");i=`${u}x${d}`}}return i||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),i}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class SE{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const t=this.backend,s=t.device,n=[];let r=0;for(const i of e.bindings){const a={binding:r++,visibility:i.visibility};if(i.isUniformBuffer||i.isStorageBuffer){const u={};i.isStorageBuffer&&(i.visibility&4&&(i.access===Oe.READ_WRITE||i.access===Oe.WRITE_ONLY)?u.type=sa.Storage:u.type=sa.ReadOnlyStorage),a.buffer=u}else if(i.isSampledTexture&&i.store){const u={};u.format=this.backend.get(i.texture).texture.format;const c=i.access;c===Oe.READ_WRITE?u.access=na.ReadWrite:c===Oe.WRITE_ONLY?u.access=na.WriteOnly:u.access=na.ReadOnly,i.texture.isArrayTexture?u.viewDimension=we.TwoDArray:i.texture.is3DTexture&&(u.viewDimension=we.ThreeD),a.storageTexture=u}else if(i.isSampledTexture){const u={},{primarySamples:c}=t.utils.getTextureSampleData(i.texture);if(c>1&&(u.multisampled=!0,i.texture.isDepthTexture||(u.sampleType=Bs.UnfilterableFloat)),i.texture.isDepthTexture)t.compatibilityMode&&i.texture.compareFunction===null?u.sampleType=Bs.UnfilterableFloat:u.sampleType=Bs.Depth;else if(i.texture.isDataTexture||i.texture.isDataArrayTexture||i.texture.isData3DTexture){const l=i.texture.type;l===qe?u.sampleType=Bs.SInt:l===Ce?u.sampleType=Bs.UInt:l===dt&&(this.backend.hasFeature("float32-filterable")?u.sampleType=Bs.Float:u.sampleType=Bs.UnfilterableFloat)}i.isSampledCubeTexture?u.viewDimension=we.Cube:i.texture.isArrayTexture||i.texture.isDataArrayTexture||i.texture.isCompressedArrayTexture?u.viewDimension=we.TwoDArray:i.isSampledTexture3D&&(u.viewDimension=we.ThreeD),a.texture=u}else if(i.isSampler){const u={};i.texture.isDepthTexture&&(i.texture.compareFunction!==null?u.type=Xl.Comparison:t.compatibilityMode&&(u.type=Xl.NonFiltering)),a.sampler=u}else console.error(`WebGPUBindingUtils: Unsupported binding "${i}".`);n.push(a)}return s.createBindGroupLayout({entries:n})}createBindings(e,t,s,n=0){const{backend:r,bindGroupLayoutCache:i}=this,a=r.get(e);let u=i.get(e.bindingsReference);u===void 0&&(u=this.createBindingsLayout(e),i.set(e.bindingsReference,u));let c;s>0&&(a.groups===void 0&&(a.groups=[],a.versions=[]),a.versions[s]===n&&(c=a.groups[s])),c===void 0&&(c=this.createBindGroup(e,u),s>0&&(a.groups[s]=c,a.versions[s]=n)),a.group=c,a.layout=u}updateBinding(e){const t=this.backend,s=t.device,n=e.buffer,r=t.get(e).buffer;s.queue.writeBuffer(r,0,n,0)}createBindGroupIndex(e,t){const n=this.backend.device,r=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,i=e[0],a=n.createBuffer({label:"bindingCameraIndex_"+i,size:16,usage:r});n.queue.writeBuffer(a,0,e,0);const u=[{binding:0,resource:{buffer:a}}];return n.createBindGroup({label:"bindGroupCameraIndex_"+i,layout:t,entries:u})}createBindGroup(e,t){const s=this.backend,n=s.device;let r=0;const i=[];for(const a of e.bindings){if(a.isUniformBuffer){const u=s.get(a);if(u.buffer===void 0){const c=a.byteLength,l=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,d=n.createBuffer({label:"bindingBuffer_"+a.name,size:c,usage:l});u.buffer=d}i.push({binding:r,resource:{buffer:u.buffer}})}else if(a.isStorageBuffer){const u=s.get(a);if(u.buffer===void 0){const c=a.attribute;u.buffer=s.get(c).buffer}i.push({binding:r,resource:{buffer:u.buffer}})}else if(a.isSampledTexture){const u=s.get(a.texture);let c;if(u.externalTexture!==void 0)c=n.importExternalTexture({source:u.externalTexture});else{const l=a.store?1:u.texture.mipLevelCount;let d=`view-${u.texture.width}-${u.texture.height}`;if(u.texture.depthOrArrayLayers>1&&(d+=`-${u.texture.depthOrArrayLayers}`),d+=`-${l}`,c=u[d],c===void 0){const p=tE.All;let f;a.isSampledCubeTexture?f=we.Cube:a.isSampledTexture3D?f=we.ThreeD:a.texture.isArrayTexture||a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?f=we.TwoDArray:f=we.TwoD,c=u[d]=u.texture.createView({aspect:p,dimension:f,mipLevelCount:l})}}i.push({binding:r,resource:c})}else if(a.isSampler){const u=s.get(a.texture);i.push({binding:r,resource:u.sampler})}r++}return n.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:i})}}class vE{constructor(e){this.backend=e,this._activePipelines=new WeakMap}setPipeline(e,t){this._activePipelines.get(e)!==t&&(e.setPipeline(t),this._activePipelines.set(e,t))}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:s,material:n,geometry:r,pipeline:i}=e,{vertexProgram:a,fragmentProgram:u}=i,c=this.backend,l=c.device,d=c.utils,p=c.get(i),f=[];for(const pe of e.getBindings()){const Ve=c.get(pe);f.push(Ve.layout)}const m=c.attributeUtils.createShaderVertexBuffers(e);let y;n.blending!==lr&&(n.blending!==ks||n.transparent!==!1)&&(y=this._getBlending(n));let T={};n.stencilWrite===!0&&(T={compare:this._getStencilCompare(n),failOp:this._getStencilOperation(n.stencilFail),depthFailOp:this._getStencilOperation(n.stencilZFail),passOp:this._getStencilOperation(n.stencilZPass)});const S=this._getColorWriteMask(n),R=[];if(e.context.textures!==null){const pe=e.context.textures;for(let Ve=0;Ve<pe.length;Ve++){const bt=d.getTextureFormatGPU(pe[Ve]);R.push({format:bt,blend:y,writeMask:S})}}else{const pe=d.getCurrentColorFormat(e.context);R.push({format:pe,blend:y,writeMask:S})}const w=c.get(a).module,L=c.get(u).module,F=this._getPrimitiveState(s,r,n),P=this._getDepthCompare(n),B=d.getCurrentDepthStencilFormat(e.context),U=this._getSampleCount(e.context),V={label:`renderPipeline_${n.name||n.type}_${n.id}`,vertex:Object.assign({},w,{buffers:m}),fragment:Object.assign({},L,{targets:R}),primitive:F,multisample:{count:U,alphaToCoverageEnabled:n.alphaToCoverage&&U>1},layout:l.createPipelineLayout({bindGroupLayouts:f})},ee={},se=e.context.depth,he=e.context.stencil;if((se===!0||he===!0)&&(se===!0&&(ee.format=B,ee.depthWriteEnabled=n.depthWrite,ee.depthCompare=P),he===!0&&(ee.stencilFront=T,ee.stencilBack={},ee.stencilReadMask=n.stencilFuncMask,ee.stencilWriteMask=n.stencilWriteMask),n.polygonOffset===!0&&(ee.depthBias=n.polygonOffsetUnits,ee.depthBiasSlopeScale=n.polygonOffsetFactor,ee.depthBiasClamp=0),V.depthStencil=ee),t===null)p.pipeline=l.createRenderPipeline(V);else{const pe=new Promise(Ve=>{l.createRenderPipelineAsync(V).then(bt=>{p.pipeline=bt,Ve()})});t.push(pe)}}createBundleEncoder(e,t="renderBundleEncoder"){const s=this.backend,{utils:n,device:r}=s,i=n.getCurrentDepthStencilFormat(e),a=n.getCurrentColorFormat(e),u=this._getSampleCount(e),c={label:t,colorFormats:[a],depthStencilFormat:i,sampleCount:u};return r.createRenderBundleEncoder(c)}createComputePipeline(e,t){const s=this.backend,n=s.device,r=s.get(e.computeProgram).module,i=s.get(e),a=[];for(const u of t){const c=s.get(u);a.push(c.layout)}i.pipeline=n.createComputePipeline({compute:r,layout:n.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,s;const n=e.blending,r=e.blendSrc,i=e.blendDst,a=e.blendEquation;if(n===Jn){const u=e.blendSrcAlpha!==null?e.blendSrcAlpha:r,c=e.blendDstAlpha!==null?e.blendDstAlpha:i,l=e.blendEquationAlpha!==null?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(i),operation:this._getBlendOperation(a)},s={srcFactor:this._getBlendFactor(u),dstFactor:this._getBlendFactor(c),operation:this._getBlendOperation(l)}}else{const u=e.premultipliedAlpha,c=(l,d,p,f)=>{t={srcFactor:l,dstFactor:d,operation:Ms.Add},s={srcFactor:p,dstFactor:f,operation:Ms.Add}};if(u)switch(n){case ks:c(J.One,J.OneMinusSrcAlpha,J.One,J.OneMinusSrcAlpha);break;case xi:c(J.One,J.One,J.One,J.One);break;case yi:c(J.Zero,J.OneMinusSrc,J.Zero,J.One);break;case gi:c(J.Dst,J.OneMinusSrcAlpha,J.Zero,J.One);break}else switch(n){case ks:c(J.SrcAlpha,J.OneMinusSrcAlpha,J.One,J.OneMinusSrcAlpha);break;case xi:c(J.SrcAlpha,J.One,J.One,J.One);break;case yi:console.error("THREE.WebGPURenderer: SubtractiveBlending requires material.premultipliedAlpha = true");break;case gi:console.error("THREE.WebGPURenderer: MultiplyBlending requires material.premultipliedAlpha = true");break}}if(t!==void 0&&s!==void 0)return{color:t,alpha:s};console.error("THREE.WebGPURenderer: Invalid blending: ",n)}_getBlendFactor(e){let t;switch(e){case rs:t=J.Zero;break;case Sd:t=J.One;break;case Nd:t=J.Src;break;case yd:t=J.OneMinusSrc;break;case bd:t=J.SrcAlpha;break;case gd:t=J.OneMinusSrcAlpha;break;case Td:t=J.Dst;break;case md:t=J.OneMinusDst;break;case xd:t=J.DstAlpha;break;case fd:t=J.OneMinusDstAlpha;break;case _d:t=J.SrcAlphaSaturated;break;case lN:t=J.Constant;break;case dN:t=J.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const s=e.stencilFunc;switch(s){case Ky:t=Ge.Never;break;case jy:t=Ge.Always;break;case Xy:t=Ge.Less;break;case qy:t=Ge.LessEqual;break;case Hy:t=Ge.Equal;break;case Wy:t=Ge.GreaterEqual;break;case $y:t=Ge.Greater;break;case zy:t=Ge.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",s)}return t}_getStencilOperation(e){let t;switch(e){case nx:t=ns.Keep;break;case sx:t=ns.Zero;break;case tx:t=ns.Replace;break;case ex:t=ns.Invert;break;case Jy:t=ns.IncrementClamp;break;case Zy:t=ns.DecrementClamp;break;case Qy:t=ns.IncrementWrap;break;case Yy:t=ns.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case Xt:t=Ms.Add;break;case pd:t=Ms.Subtract;break;case hd:t=Ms.ReverseSubtract;break;case ix:t=Ms.Min;break;case rx:t=Ms.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,s){const n={},r=this.backend.utils;switch(n.topology=r.getPrimitiveTopology(e,s),t.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(n.stripIndexFormat=t.index.array instanceof Uint16Array?Cn.Uint16:Cn.Uint32),s.side){case xn:n.frontFace=Jo.CCW,n.cullMode=ea.Back;break;case Ze:n.frontFace=Jo.CCW,n.cullMode=ea.Front;break;case Os:n.frontFace=Jo.CCW,n.cullMode=ea.None;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",s.side);break}return n}_getColorWriteMask(e){return e.colorWrite===!0?ql.All:ql.None}_getDepthCompare(e){let t;if(e.depthTest===!1)t=Ge.Always;else{const s=e.depthFunc;switch(s){case Bd:t=Ge.Never;break;case Md:t=Ge.Always;break;case Cd:t=Ge.Less;break;case Ed:t=Ge.LessEqual;break;case wd:t=Ge.Equal;break;case Ad:t=Ge.GreaterEqual;break;case Rd:t=Ge.Greater;break;case vd:t=Ge.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",s)}}return t}}class RE extends Fg{constructor(e,t,s=2048){super(s),this.device=e,this.type=t,this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxQueries,label:`queryset_global_timestamp_${t}`});const n=this.maxQueries*8;this.resolveBuffer=this.device.createBuffer({label:`buffer_timestamp_resolve_${t}`,size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=this.device.createBuffer({label:`buffer_timestamp_result_${t}`,size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})}allocateQueriesForContext(e){if(!this.trackTimestamp||this.isDisposed)return null;if(this.currentQueryIndex+2>this.maxQueries)return ls(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryOffsets.set(e.id,t),t}async resolveQueriesAsync(){if(!this.trackTimestamp||this.currentQueryIndex===0||this.isDisposed)return this.lastValue;if(this.pendingResolve)return this.pendingResolve;this.pendingResolve=this._resolveQueries();try{return await this.pendingResolve}finally{this.pendingResolve=null}}async _resolveQueries(){if(this.isDisposed)return this.lastValue;try{if(this.resultBuffer.mapState!=="unmapped")return this.lastValue;const e=new Map(this.queryOffsets),t=this.currentQueryIndex,s=t*8;this.currentQueryIndex=0,this.queryOffsets.clear();const n=this.device.createCommandEncoder();n.resolveQuerySet(this.querySet,0,t,this.resolveBuffer,0),n.copyBufferToBuffer(this.resolveBuffer,0,this.resultBuffer,0,s);const r=n.finish();if(this.device.queue.submit([r]),this.resultBuffer.mapState!=="unmapped")return this.lastValue;if(await this.resultBuffer.mapAsync(GPUMapMode.READ,0,s),this.isDisposed)return this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue;const i=new BigUint64Array(this.resultBuffer.getMappedRange(0,s));let a=0;for(const[,u]of e){const c=i[u],l=i[u+1],d=Number(l-c)/1e6;a+=d}return this.resultBuffer.unmap(),this.lastValue=a,a}catch(e){return console.error("Error resolving queries:",e),this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue}}async dispose(){if(!this.isDisposed){if(this.isDisposed=!0,this.pendingResolve)try{await this.pendingResolve}catch(e){console.error("Error waiting for pending resolve:",e)}if(this.resultBuffer&&this.resultBuffer.mapState==="mapped")try{this.resultBuffer.unmap()}catch(e){console.error("Error unmapping buffer:",e)}this.querySet&&(this.querySet.destroy(),this.querySet=null),this.resolveBuffer&&(this.resolveBuffer.destroy(),this.resolveBuffer=null),this.resultBuffer&&(this.resultBuffer.destroy(),this.resultBuffer=null),this.queryOffsets.clear(),this.pendingResolve=null}}}class AE extends Bg{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.compatibilityMode=e.compatibilityMode===void 0?!1:e.compatibilityMode,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.compatibilityMode=this.parameters.compatibilityMode,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new TE(this),this.attributeUtils=new NE(this),this.bindingUtils=new SE(this),this.pipelineUtils=new vE(this),this.textureUtils=new cE(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let s;if(t.device===void 0){const i={powerPreference:t.powerPreference,featureLevel:t.compatibilityMode?"compatibility":void 0},a=typeof navigator<"u"?await navigator.gpu.requestAdapter(i):null;if(a===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const u=Object.values(Ha),c=[];for(const d of u)a.features.has(d)&&c.push(d);const l={requiredFeatures:c,requiredLimits:t.requiredLimits};s=await a.requestDevice(l)}else s=t.device;s.lost.then(i=>{const a={api:"WebGPU",message:i.message||"Unknown reason",reason:i.reason||null,originalEvent:i};e.onDeviceLost(a)});const n=t.context!==void 0?t.context:e.domElement.getContext("webgpu");this.device=s,this.context=n;const r=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(Ha.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:r}),this.updateSize()}get coordinateSystem(){return Mn}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(e===null){const s=this.renderer;e={colorAttachments:[{view:null}]},(this.renderer.depth===!0||this.renderer.stencil===!0)&&(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(s.depth,s.stencil).createView()});const n=e.colorAttachments[0];this.renderer.samples>0?n.view=this.colorBuffer.createView():n.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.image.depth>1&&e.camera.isArrayCamera}_getRenderPassDescriptor(e,t={}){const s=e.renderTarget,n=this.get(s);let r=n.descriptors;if(r===void 0||n.width!==s.width||n.height!==s.height||n.dimensions!==s.dimensions||n.activeMipmapLevel!==e.activeMipmapLevel||n.activeCubeFace!==e.activeCubeFace||n.samples!==s.samples){r={},n.descriptors=r;const c=()=>{s.removeEventListener("dispose",c),this.delete(s)};s.hasEventListener("dispose",c)===!1&&s.addEventListener("dispose",c)}const i=e.getCacheKey();let a=r[i];if(a===void 0){const c=e.textures,l=[];let d;const p=this._isRenderCameraDepthArray(e);for(let f=0;f<c.length;f++){const m=this.get(c[f]),y={label:`colorAttachment_${f}`,baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,arrayLayerCount:1,dimension:we.TwoD};if(s.isRenderTarget3D)d=e.activeCubeFace,y.baseArrayLayer=0,y.dimension=we.ThreeD,y.depthOrArrayLayers=c[f].image.depth;else if(s.isRenderTarget&&c[f].image.depth>1)if(p===!0){const T=e.camera.cameras;for(let S=0;S<T.length;S++){const R={...y,baseArrayLayer:S,arrayLayerCount:1,dimension:we.TwoD},w=m.texture.createView(R);l.push({view:w,resolveTarget:void 0,depthSlice:void 0})}}else y.dimension=we.TwoDArray,y.depthOrArrayLayers=c[f].image.depth;if(p!==!0){const T=m.texture.createView(y);let S,R;m.msaaTexture!==void 0?(S=m.msaaTexture.createView(),R=T):(S=T,R=void 0),l.push({view:S,resolveTarget:R,depthSlice:d})}}if(a={textureViews:l},e.depth){const f=this.get(e.depthTexture),m={};e.depthTexture.isArrayTexture&&(m.dimension=we.TwoD,m.arrayLayerCount=1,m.baseArrayLayer=e.activeCubeFace),a.depthStencilView=f.texture.createView(m)}r[i]=a,n.width=s.width,n.height=s.height,n.samples=s.samples,n.activeMipmapLevel=e.activeMipmapLevel,n.activeCubeFace=e.activeCubeFace,n.dimensions=s.dimensions}const u={colorAttachments:[]};for(let c=0;c<a.textureViews.length;c++){const l=a.textureViews[c];let d={r:0,g:0,b:0,a:1};c===0&&t.clearValue&&(d=t.clearValue),u.colorAttachments.push({view:l.view,depthSlice:l.depthSlice,resolveTarget:l.resolveTarget,loadOp:t.loadOp||re.Load,storeOp:t.storeOp||He.Store,clearValue:d})}return a.depthStencilView&&(u.depthStencilAttachment={view:a.depthStencilView}),u}beginRender(e){const t=this.get(e),s=this.device,n=e.occlusionQueryCount;let r;n>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,r=s.createQuerySet({type:"occlusion",count:n,label:`occlusionQuerySet_${e.id}`}),t.occlusionQuerySet=r,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(n),t.lastOcclusionObject=null);let i;e.textures===null?i=this._getDefaultRenderPassDescriptor():i=this._getRenderPassDescriptor(e,{loadOp:re.Load}),this.initTimestampQuery(e,i),i.occlusionQuerySet=r;const a=i.depthStencilAttachment;if(e.textures!==null){const c=i.colorAttachments;for(let l=0;l<c.length;l++){const d=c[l];e.clearColor?(d.clearValue=l===0?e.clearColorValue:{r:0,g:0,b:0,a:1},d.loadOp=re.Clear):d.loadOp=re.Load,d.storeOp=He.Store}}else{const c=i.colorAttachments[0];e.clearColor?(c.clearValue=e.clearColorValue,c.loadOp=re.Clear):c.loadOp=re.Load,c.storeOp=He.Store}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=re.Clear):a.depthLoadOp=re.Load,a.depthStoreOp=He.Store),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=re.Clear):a.stencilLoadOp=re.Load,a.stencilStoreOp=He.Store);const u=s.createCommandEncoder({label:"renderContext_"+e.id});if(this._isRenderCameraDepthArray(e)===!0){const c=e.camera.cameras;!t.layerDescriptors||t.layerDescriptors.length!==c.length?this._createDepthLayerDescriptors(e,t,i,c):this._updateDepthLayerDescriptors(e,t,c),t.bundleEncoders=[],t.bundleSets=[];for(let l=0;l<c.length;l++){const d=this.pipelineUtils.createBundleEncoder(e,"renderBundleArrayCamera_"+l),p={attributes:{},bindingGroups:[],pipeline:null,index:null};t.bundleEncoders.push(d),t.bundleSets.push(p)}t.currentPass=null}else{const c=u.beginRenderPass(i);if(t.currentPass=c,e.viewport&&this.updateViewport(e),e.scissor){const{x:l,y:d,width:p,height:f}=e.scissorValue;c.setScissorRect(l,d,p,f)}}t.descriptor=i,t.encoder=u,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[]}_createDepthLayerDescriptors(e,t,s,n){const r=s.depthStencilAttachment;t.layerDescriptors=[];const i=this.get(e.depthTexture);i.viewCache||(i.viewCache=[]);for(let a=0;a<n.length;a++){const u={...s,colorAttachments:[{...s.colorAttachments[0],view:s.colorAttachments[a].view}]};if(s.depthStencilAttachment){const c=a;i.viewCache[c]||(i.viewCache[c]=i.texture.createView({dimension:we.TwoD,baseArrayLayer:a,arrayLayerCount:1})),u.depthStencilAttachment={view:i.viewCache[c],depthLoadOp:r.depthLoadOp||re.Clear,depthStoreOp:r.depthStoreOp||He.Store,depthClearValue:r.depthClearValue||1},e.stencil&&(u.depthStencilAttachment.stencilLoadOp=r.stencilLoadOp,u.depthStencilAttachment.stencilStoreOp=r.stencilStoreOp,u.depthStencilAttachment.stencilClearValue=r.stencilClearValue)}else u.depthStencilAttachment={...r};t.layerDescriptors.push(u)}}_updateDepthLayerDescriptors(e,t,s){for(let n=0;n<s.length;n++){const r=t.layerDescriptors[n];if(r.depthStencilAttachment){const i=r.depthStencilAttachment;e.depth&&(e.clearDepth?(i.depthClearValue=e.clearDepthValue,i.depthLoadOp=re.Clear):i.depthLoadOp=re.Load),e.stencil&&(e.clearStencil?(i.stencilClearValue=e.clearStencilValue,i.stencilLoadOp=re.Clear):i.stencilLoadOp=re.Load)}}}finishRender(e){const t=this.get(e),s=e.occlusionQueryCount;t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),s>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery();const n=t.encoder;if(this._isRenderCameraDepthArray(e)===!0){const r=[];for(let i=0;i<t.bundleEncoders.length;i++){const a=t.bundleEncoders[i];r.push(a.finish())}for(let i=0;i<t.layerDescriptors.length;i++)if(i<r.length){const a=t.layerDescriptors[i],u=n.beginRenderPass(a);if(e.viewport){const{x:c,y:l,width:d,height:p,minDepth:f,maxDepth:m}=e.viewportValue;u.setViewport(c,l,d,p,f,m)}if(e.scissor){const{x:c,y:l,width:d,height:p}=e.scissorValue;u.setScissorRect(c,l,d,p)}u.executeBundles([r[i]]),u.end()}}else t.currentPass&&t.currentPass.end();if(s>0){const r=s*8;let i=this.occludedResolveCache.get(r);i===void 0&&(i=this.device.createBuffer({size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(r,i));const a=this.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,s,i,0),t.encoder.copyBufferToBuffer(i,0,a,0,r),t.occlusionQueryBuffer=a,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),e.textures!==null){const r=e.textures;for(let i=0;i<r.length;i++){const a=r[i];a.generateMipmaps===!0&&this.textureUtils.generateMipmaps(a)}}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:s,currentOcclusionQueryObjects:n}=t;if(s&&n){const r=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await s.mapAsync(GPUMapMode.READ);const i=s.getMappedRange(),a=new BigUint64Array(i);for(let u=0;u<n.length;u++)a[u]===BigInt(0)&&r.add(n[u]);s.destroy(),t.occluded=r}}updateViewport(e){const{currentPass:t}=this.get(e),{x:s,y:n,width:r,height:i,minDepth:a,maxDepth:u}=e.viewportValue;t.setViewport(s,n,r,i,a,u)}getClearColor(){const e=super.getClearColor();return this.renderer.alpha===!0&&(e.r*=e.a,e.g*=e.a,e.b*=e.a),e}clear(e,t,s,n=null){const r=this.device,i=this.renderer;let a=[],u,c,l,d;if(e){const m=this.getClearColor();c={r:m.r,g:m.g,b:m.b,a:m.a}}if(n===null){l=i.depth,d=i.stencil;const m=this._getDefaultRenderPassDescriptor();if(e){a=m.colorAttachments;const y=a[0];y.clearValue=c,y.loadOp=re.Clear,y.storeOp=He.Store}(l||d)&&(u=m.depthStencilAttachment)}else{l=n.depth,d=n.stencil;const m={loadOp:e?re.Clear:re.Load,clearValue:e?c:void 0};l&&(m.depthLoadOp=t?re.Clear:re.Load,m.depthClearValue=t?i.getClearDepth():void 0,m.depthStoreOp=He.Store),d&&(m.stencilLoadOp=s?re.Clear:re.Load,m.stencilClearValue=s?i.getClearStencil():void 0,m.stencilStoreOp=He.Store);const y=this._getRenderPassDescriptor(n,m);a=y.colorAttachments,u=y.depthStencilAttachment}l&&u&&(t?(u.depthLoadOp=re.Clear,u.depthClearValue=i.getClearDepth(),u.depthStoreOp=He.Store):(u.depthLoadOp=re.Load,u.depthStoreOp=He.Store)),d&&u&&(s?(u.stencilLoadOp=re.Clear,u.stencilClearValue=i.getClearStencil(),u.stencilStoreOp=He.Store):(u.stencilLoadOp=re.Load,u.stencilStoreOp=He.Store));const p=r.createCommandEncoder({label:"clear"});p.beginRenderPass({colorAttachments:a,depthStencilAttachment:u}).end(),r.queue.submit([p.finish()])}beginCompute(e){const t=this.get(e),s={label:"computeGroup_"+e.id};this.initTimestampQuery(e,s),t.cmdEncoderGPU=this.device.createCommandEncoder({label:"computeGroup_"+e.id}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(s)}compute(e,t,s,n,r=null){const i=this.get(t),{passEncoderGPU:a}=this.get(e),u=this.get(n).pipeline;this.pipelineUtils.setPipeline(a,u);for(let l=0,d=s.length;l<d;l++){const p=s[l],f=this.get(p);a.setBindGroup(l,f.group)}let c;if(r===null&&(r=t.count),typeof r=="number"){const l=r;if(i.dispatchSize===void 0||i.count!==l){i.dispatchSize=[0,1,1],i.count=l;const d=t.workgroupSize;let p=d[0];for(let y=1;y<d.length;y++)p*=d[y];const f=Math.ceil(l/p),m=this.device.limits.maxComputeWorkgroupsPerDimension;c=[f,1,1],f>m&&(c[0]=Math.min(f,m),c[1]=Math.ceil(f/m)),i.dispatchSize=c}c=i.dispatchSize}else c=r;a.dispatchWorkgroups(c[0],c[1]||1,c[2]||1)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:s,material:n,context:r,pipeline:i}=e,a=e.getBindings(),u=this.get(r),c=this.get(i).pipeline,l=e.getIndex(),d=l!==null,p=e.getDrawParameters();if(p===null)return;const f=(y,T)=>{this.pipelineUtils.setPipeline(y,c),T.pipeline=c;const S=T.bindingGroups;for(let w=0,L=a.length;w<L;w++){const F=a[w],P=this.get(F);S[F.index]!==F.id&&(y.setBindGroup(F.index,P.group),S[F.index]=F.id)}if(d===!0&&T.index!==l){const w=this.get(l).buffer,L=l.array instanceof Uint16Array?Cn.Uint16:Cn.Uint32;y.setIndexBuffer(w,L),T.index=l}const R=e.getVertexBuffers();for(let w=0,L=R.length;w<L;w++){const F=R[w];if(T.attributes[w]!==F){const P=this.get(F).buffer;y.setVertexBuffer(w,P),T.attributes[w]=F}}r.stencil===!0&&n.stencilWrite===!0&&u.currentStencilRef!==n.stencilRef&&(y.setStencilReference(n.stencilRef),u.currentStencilRef=n.stencilRef)},m=(y,T)=>{if(f(y,T),s.isBatchedMesh===!0){const S=s._multiDrawStarts,R=s._multiDrawCounts,w=s._multiDrawCount,L=s._multiDrawInstances;L!==null&&ls("THREE.WebGPUBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection.");for(let F=0;F<w;F++){const P=L?L[F]:1,B=P>1?0:F;d===!0?y.drawIndexed(R[F],P,S[F]/l.array.BYTES_PER_ELEMENT,0,B):y.draw(R[F],P,S[F],B),t.update(s,R[F],P)}}else if(d===!0){const{vertexCount:S,instanceCount:R,firstVertex:w}=p,L=e.getIndirect();if(L!==null){const F=this.get(L).buffer;y.drawIndexedIndirect(F,0)}else y.drawIndexed(S,R,w,0,0);t.update(s,S,R)}else{const{vertexCount:S,instanceCount:R,firstVertex:w}=p,L=e.getIndirect();if(L!==null){const F=this.get(L).buffer;y.drawIndirect(F,0)}else y.draw(S,R,w,0);t.update(s,S,R)}};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){const y=this.get(e.camera),T=e.camera.cameras,S=e.getBindingGroup("cameraIndex");if(y.indexesGPU===void 0||y.indexesGPU.length!==T.length){const w=this.get(S),L=[],F=new Uint32Array([0,0,0,0]);for(let P=0,B=T.length;P<B;P++){F[0]=P;const U=this.bindingUtils.createBindGroupIndex(F,w.layout);L.push(U)}y.indexesGPU=L}const R=this.renderer.getPixelRatio();for(let w=0,L=T.length;w<L;w++){const F=T[w];if(s.layers.test(F.layers)){const P=F.viewport;let B=u.currentPass,U=u.currentSets;if(u.bundleEncoders){const V=u.bundleEncoders[w],ee=u.bundleSets[w];B=V,U=ee}P&&B.setViewport(Math.floor(P.x*R),Math.floor(P.y*R),Math.floor(P.width*R),Math.floor(P.height*R),r.viewportValue.minDepth,r.viewportValue.maxDepth),S&&y.indexesGPU&&(B.setBindGroup(S.index,y.indexesGPU[w]),U.bindingGroups[S.index]=S.id),m(B,U)}}}else if(u.currentPass){if(u.occlusionQuerySet!==void 0){const y=u.lastOcclusionObject;y!==s&&(y!==null&&y.occlusionTest===!0&&(u.currentPass.endOcclusionQuery(),u.occlusionQueryIndex++),s.occlusionTest===!0&&(u.currentPass.beginOcclusionQuery(u.occlusionQueryIndex),u.occlusionQueryObjects[u.occlusionQueryIndex]=s),u.lastOcclusionObject=s)}m(u.currentPass,u.currentSets)}}needsRenderUpdate(e){const t=this.get(e),{object:s,material:n}=e,r=this.utils,i=r.getSampleCountRenderContext(e.context),a=r.getCurrentColorSpace(e.context),u=r.getCurrentColorFormat(e.context),c=r.getCurrentDepthStencilFormat(e.context),l=r.getPrimitiveTopology(s,n);let d=!1;return(t.material!==n||t.materialVersion!==n.version||t.transparent!==n.transparent||t.blending!==n.blending||t.premultipliedAlpha!==n.premultipliedAlpha||t.blendSrc!==n.blendSrc||t.blendDst!==n.blendDst||t.blendEquation!==n.blendEquation||t.blendSrcAlpha!==n.blendSrcAlpha||t.blendDstAlpha!==n.blendDstAlpha||t.blendEquationAlpha!==n.blendEquationAlpha||t.colorWrite!==n.colorWrite||t.depthWrite!==n.depthWrite||t.depthTest!==n.depthTest||t.depthFunc!==n.depthFunc||t.stencilWrite!==n.stencilWrite||t.stencilFunc!==n.stencilFunc||t.stencilFail!==n.stencilFail||t.stencilZFail!==n.stencilZFail||t.stencilZPass!==n.stencilZPass||t.stencilFuncMask!==n.stencilFuncMask||t.stencilWriteMask!==n.stencilWriteMask||t.side!==n.side||t.alphaToCoverage!==n.alphaToCoverage||t.sampleCount!==i||t.colorSpace!==a||t.colorFormat!==u||t.depthStencilFormat!==c||t.primitiveTopology!==l||t.clippingContextCacheKey!==e.clippingContextCacheKey)&&(t.material=n,t.materialVersion=n.version,t.transparent=n.transparent,t.blending=n.blending,t.premultipliedAlpha=n.premultipliedAlpha,t.blendSrc=n.blendSrc,t.blendDst=n.blendDst,t.blendEquation=n.blendEquation,t.blendSrcAlpha=n.blendSrcAlpha,t.blendDstAlpha=n.blendDstAlpha,t.blendEquationAlpha=n.blendEquationAlpha,t.colorWrite=n.colorWrite,t.depthWrite=n.depthWrite,t.depthTest=n.depthTest,t.depthFunc=n.depthFunc,t.stencilWrite=n.stencilWrite,t.stencilFunc=n.stencilFunc,t.stencilFail=n.stencilFail,t.stencilZFail=n.stencilZFail,t.stencilZPass=n.stencilZPass,t.stencilFuncMask=n.stencilFuncMask,t.stencilWriteMask=n.stencilWriteMask,t.side=n.side,t.alphaToCoverage=n.alphaToCoverage,t.sampleCount=i,t.colorSpace=a,t.colorFormat=u,t.depthStencilFormat=c,t.primitiveTopology=l,t.clippingContextCacheKey=e.clippingContextCacheKey,d=!0),d}getRenderCacheKey(e){const{object:t,material:s}=e,n=this.utils,r=e.context;return[s.transparent,s.blending,s.premultipliedAlpha,s.blendSrc,s.blendDst,s.blendEquation,s.blendSrcAlpha,s.blendDstAlpha,s.blendEquationAlpha,s.colorWrite,s.depthWrite,s.depthTest,s.depthFunc,s.stencilWrite,s.stencilFunc,s.stencilFail,s.stencilZFail,s.stencilZPass,s.stencilFuncMask,s.stencilWriteMask,s.side,n.getSampleCountRenderContext(r),n.getCurrentColorSpace(r),n.getCurrentColorFormat(r),n.getCurrentDepthStencilFormat(r),n.getPrimitiveTopology(t,s),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,s,n,r,i){return this.textureUtils.copyTextureToBuffer(e,t,s,n,r,i)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const s=e.isComputeNode?"compute":"render";this.timestampQueryPool[s]||(this.timestampQueryPool[s]=new RE(this.device,s,2048));const n=this.timestampQueryPool[s],r=n.allocateQueriesForContext(e);t.timestampWrites={querySet:n.querySet,beginningOfPassWriteIndex:r,endOfPassWriteIndex:r+1}}createNodeBuilder(e,t){return new xE(e,t)}createProgram(e){const t=this.get(e);t.module={module:this.device.createShaderModule({code:e.code,label:e.stage+(e.name!==""?`_${e.name}`:"")}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const s=this.get(e),r=s.currentPass.finish();this.get(t).bundleGPU=r,s.currentSets=s._currentSets,s.currentPass=s._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e,t,s,n){this.bindingUtils.createBindings(e,t,s,n)}updateBindings(e,t,s,n){this.bindingUtils.createBindings(e,t,s,n)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){let t=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(t|=GPUBufferUsage.STORAGE),this.attributeUtils.createAttribute(e,t)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,s=null,n=null,r=0,i=0){let a=0,u=0,c=0,l=0,d=0,p=0,f=e.image.width,m=e.image.height,y=1;s!==null&&(s.isBox3===!0?(l=s.min.x,d=s.min.y,p=s.min.z,f=s.max.x-s.min.x,m=s.max.y-s.min.y,y=s.max.z-s.min.z):(l=s.min.x,d=s.min.y,f=s.max.x-s.min.x,m=s.max.y-s.min.y,y=1)),n!==null&&(a=n.x,u=n.y,c=n.z||0);const T=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),S=this.get(e).texture,R=this.get(t).texture;T.copyTextureToTexture({texture:S,mipLevel:r,origin:{x:l,y:d,z:p}},{texture:R,mipLevel:i,origin:{x:a,y:u,z:c}},[f,m,y]),this.device.queue.submit([T.finish()]),i===0&&t.generateMipmaps&&this.textureUtils.generateMipmaps(t)}copyFramebufferToTexture(e,t,s){const n=this.get(t);let r=null;t.renderTarget?e.isDepthTexture?r=this.get(t.depthTexture).texture:r=this.get(t.textures[0]).texture:e.isDepthTexture?r=this.textureUtils.getDepthBuffer(t.depth,t.stencil):r=this.context.getCurrentTexture();const i=this.get(e).texture;if(r.format!==i.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",r.format,i.format);return}let a;if(n.currentPass?(n.currentPass.end(),a=n.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),a.copyTextureToTexture({texture:r,origin:[s.x,s.y,0]},{texture:i},[s.z,s.w]),n.currentPass){const{descriptor:u}=n;for(let c=0;c<u.colorAttachments.length;c++)u.colorAttachments[c].loadOp=re.Load;if(t.depth&&(u.depthStencilAttachment.depthLoadOp=re.Load),t.stencil&&(u.depthStencilAttachment.stencilLoadOp=re.Load),n.currentPass=a.beginRenderPass(u),n.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.viewport&&this.updateViewport(t),t.scissor){const{x:c,y:l,width:d,height:p}=t.scissorValue;n.currentPass.setScissorRect(c,l,d,p)}}else this.device.queue.submit([a.finish()]);e.generateMipmaps&&this.textureUtils.generateMipmaps(e)}}class wE extends Ka{constructor(e,t,s,n,r,i){super(e,t,s,n,r,i),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class EE extends Ka{constructor(e,t,s,n,r,i){super(e,t,s,n,r,i),this.aspect=null}copy(e,t){return super.copy(e,t),this.aspect=e.aspect,this}}class CE extends Sg{constructor(){super(),this.addMaterial(ib,"MeshPhongMaterial"),this.addMaterial(_m,"MeshStandardMaterial"),this.addMaterial(Hb,"MeshPhysicalMaterial"),this.addMaterial(Kb,"MeshToonMaterial"),this.addMaterial(Z_,"MeshBasicMaterial"),this.addMaterial(nb,"MeshLambertMaterial"),this.addMaterial(X_,"MeshNormalMaterial"),this.addMaterial(Qb,"MeshMatcapMaterial"),this.addMaterial(O_,"LineBasicMaterial"),this.addMaterial(z_,"LineDashedMaterial"),this.addMaterial(tN,"PointsMaterial"),this.addMaterial(Nm,"SpriteMaterial"),this.addMaterial(rN,"ShadowMaterial"),this.addLight(Zv,kg),this.addLight(aw,zg),this.addLight(uw,$g),this.addLight(_c,Ka),this.addLight(hw,Wg),this.addLight(pw,Hg),this.addLight(fw,qg),this.addLight(cw,wE),this.addLight(dw,EE),this.addToneMapping(km,Xg),this.addToneMapping(zm,jg),this.addToneMapping($m,Kg),this.addToneMapping(Wm,Yg),this.addToneMapping(Hm,Qg),this.addToneMapping(qm,Zg)}}class PE extends Pw{constructor(e={}){let t;e.forceWebGL?t=Hl:(t=AE,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new Hl(e)));const s=new t(e);super(s,e),this.library=new CE,this.isWebGPURenderer=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}}class LE extends br{constructor(e=1,t=1){super(),this.image={width:e,height:t},this.magFilter=ot,this.minFilter=ot,this.isStorageTexture=!0}setSize(e,t){(this.image.width!==e||this.image.height!==t)&&(this.image.width=e,this.image.height=t,this.dispose())}}class DE extends br{constructor(e=1,t=1,s=1){super(),this.isArrayTexture=!1,this.image={width:e,height:t,depth:s},this.magFilter=ot,this.minFilter=ot,this.wrapR=Ii,this.isStorageTexture=!0,this.is3DTexture=!0}setSize(e,t,s){(this.image.width!==e||this.image.height!==t||this.image.depth!==s)&&(this.image.width=e,this.image.height=t,this.image.depth=s,this.dispose())}}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */h.BRDF_GGX;h.BRDF_Lambert;h.BasicPointShadowFilter;h.BasicShadowFilter;h.Break;h.Const;h.Continue;h.DFGApprox;h.D_GGX;h.Discard;h.EPSILON;h.F_Schlick;h.Fn;h.INFINITY;h.If;h.Loop;h.NodeAccess;h.NodeShaderStage;h.NodeType;h.NodeUpdateType;h.PCFShadowFilter;h.PCFSoftShadowFilter;h.PI;h.PI2;h.PointShadowFilter;h.Return;h.Schlick_to_F0;h.ScriptableNodeResources;h.ShaderNode;h.Stack;h.Switch;h.TBNViewMatrix;h.VSMShadowFilter;h.V_GGX_SmithCorrelated;h.Var;h.VarIntent;h.abs;h.acesFilmicToneMapping;h.acos;h.add;h.addMethodChaining;h.addNodeElement;h.agxToneMapping;h.all;h.alphaT;h.and;h.anisotropy;h.anisotropyB;h.anisotropyT;h.any;h.append;h.array;h.arrayBuffer;h.asin;h.assign;h.atan;h.atan2;h.atomicAdd;h.atomicAnd;h.atomicFunc;h.atomicLoad;h.atomicMax;h.atomicMin;h.atomicOr;h.atomicStore;h.atomicSub;h.atomicXor;h.attenuationColor;h.attenuationDistance;const UE=h.attribute;h.attributeArray;h.backgroundBlurriness;h.backgroundIntensity;h.backgroundRotation;h.batch;h.bentNormalView;h.billboarding;h.bitAnd;h.bitNot;h.bitOr;h.bitXor;h.bitangentGeometry;h.bitangentLocal;h.bitangentView;h.bitangentWorld;h.bitcast;h.blendBurn;h.blendColor;h.blendDodge;h.blendOverlay;h.blendScreen;h.blur;h.bool;h.buffer;h.bufferAttribute;h.bumpMap;h.burn;h.bvec2;h.bvec3;h.bvec4;h.bypass;h.cache;h.call;h.cameraFar;h.cameraIndex;h.cameraNear;h.cameraNormalMatrix;h.cameraPosition;h.cameraProjectionMatrix;h.cameraProjectionMatrixInverse;h.cameraViewMatrix;h.cameraWorldMatrix;h.cbrt;h.cdl;h.ceil;h.checker;h.cineonToneMapping;h.clamp;h.clearcoat;h.clearcoatNormalView;h.clearcoatRoughness;h.code;h.color;const IE=h.colorSpaceToWorking;h.colorToDirection;h.compute;h.computeKernel;h.computeSkinning;h.context;h.convert;h.convertColorSpace;h.convertToTexture;h.cos;h.cross;h.cubeTexture;h.cubeTextureBase;h.cubeToUV;h.dFdx;h.dFdy;h.dashSize;h.debug;h.decrement;h.decrementBefore;h.defaultBuildStages;h.defaultShaderStages;h.defined;h.degrees;h.deltaTime;h.densityFog;h.densityFogFactor;h.depth;h.depthPass;h.determinant;h.difference;h.diffuseColor;h.directPointLight;h.directionToColor;h.directionToFaceDirection;h.dispersion;h.distance;h.div;h.dodge;h.dot;h.drawIndex;h.dynamicBufferAttribute;h.element;h.emissive;h.equal;h.equals;h.equirectUV;h.exp;h.exp2;h.expression;h.faceDirection;h.faceForward;h.faceforward;h.float;h.floor;h.fog;h.fract;h.frameGroup;h.frameId;h.frontFacing;h.fwidth;h.gain;h.gapSize;h.getConstNodeType;h.getCurrentStack;h.getDirection;h.getDistanceAttenuation;h.getGeometryRoughness;h.getNormalFromDepth;h.getParallaxCorrectNormal;h.getRoughness;h.getScreenPosition;h.getShIrradianceAt;h.getShadowMaterial;h.getShadowRenderObjectFunction;h.getTextureIndex;h.getViewPosition;const VE=h.globalId;h.glsl;h.glslFn;h.grayscale;h.greaterThan;h.greaterThanEqual;h.hash;h.highpModelNormalViewMatrix;h.highpModelViewMatrix;h.hue;h.increment;h.incrementBefore;h.instance;h.instanceIndex;h.instancedArray;h.instancedBufferAttribute;h.instancedDynamicBufferAttribute;h.instancedMesh;h.int;h.inverse;h.inverseSqrt;h.inversesqrt;h.invocationLocalIndex;h.invocationSubgroupIndex;h.ior;h.iridescence;h.iridescenceIOR;h.iridescenceThickness;h.ivec2;h.ivec3;h.ivec4;h.js;h.label;h.length;h.lengthSq;h.lessThan;h.lessThanEqual;h.lightPosition;h.lightProjectionUV;h.lightShadowMatrix;h.lightTargetDirection;h.lightTargetPosition;h.lightViewPosition;h.lightingContext;h.lights;h.linearDepth;h.linearToneMapping;const GE=h.localId;h.log;h.log2;h.logarithmicDepthToViewZ;h.luminance;h.mat2;h.mat3;h.mat4;h.matcapUV;h.materialAO;h.materialAlphaTest;h.materialAnisotropy;h.materialAnisotropyVector;h.materialAttenuationColor;h.materialAttenuationDistance;h.materialClearcoat;h.materialClearcoatNormal;h.materialClearcoatRoughness;h.materialColor;h.materialDispersion;h.materialEmissive;h.materialEnvIntensity;h.materialEnvRotation;h.materialIOR;h.materialIridescence;h.materialIridescenceIOR;h.materialIridescenceThickness;h.materialLightMap;h.materialLineDashOffset;h.materialLineDashSize;h.materialLineGapSize;h.materialLineScale;h.materialLineWidth;h.materialMetalness;h.materialNormal;h.materialOpacity;h.materialPointSize;h.materialReference;h.materialReflectivity;h.materialRefractionRatio;h.materialRotation;h.materialRoughness;h.materialSheen;h.materialSheenRoughness;h.materialShininess;h.materialSpecular;h.materialSpecularColor;h.materialSpecularIntensity;h.materialSpecularStrength;h.materialThickness;h.materialTransmission;h.max;h.maxMipLevel;h.mediumpModelViewMatrix;h.metalness;h.min;h.mix;h.mixElement;h.mod;h.modInt;h.modelDirection;h.modelNormalMatrix;h.modelPosition;h.modelRadius;h.modelScale;h.modelViewMatrix;h.modelViewPosition;h.modelViewProjection;h.modelWorldMatrix;h.modelWorldMatrixInverse;h.morphReference;h.mrt;h.mul;h.mx_aastep;h.mx_add;h.mx_atan2;h.mx_cell_noise_float;h.mx_contrast;h.mx_divide;h.mx_fractal_noise_float;h.mx_fractal_noise_vec2;h.mx_fractal_noise_vec3;h.mx_fractal_noise_vec4;h.mx_frame;h.mx_heighttonormal;h.mx_hsvtorgb;h.mx_ifequal;h.mx_ifgreater;h.mx_ifgreatereq;h.mx_invert;h.mx_modulo;h.mx_multiply;h.mx_noise_float;h.mx_noise_vec3;h.mx_noise_vec4;h.mx_place2d;h.mx_power;h.mx_ramp4;h.mx_ramplr;h.mx_ramptb;h.mx_rgbtohsv;h.mx_rotate2d;h.mx_rotate3d;h.mx_safepower;h.mx_separate;h.mx_splitlr;h.mx_splittb;h.mx_srgb_texture_to_lin_rec709;h.mx_subtract;h.mx_timer;h.mx_transform_uv;h.mx_unifiednoise2d;h.mx_unifiednoise3d;h.mx_worley_noise_float;h.mx_worley_noise_vec2;h.mx_worley_noise_vec3;h.negate;h.neutralToneMapping;h.nodeArray;h.nodeImmutable;h.nodeObject;h.nodeObjectIntent;h.nodeObjects;h.nodeProxy;h.nodeProxyIntent;h.normalFlat;h.normalGeometry;h.normalLocal;h.normalMap;h.normalView;h.normalViewGeometry;h.normalWorld;h.normalWorldGeometry;h.normalize;h.not;h.notEqual;h.numWorkgroups;h.objectDirection;h.objectGroup;h.objectPosition;h.objectRadius;h.objectScale;h.objectViewPosition;h.objectWorldMatrix;h.OnObjectUpdate;h.OnMaterialUpdate;h.oneMinus;h.or;h.orthographicDepthToViewZ;h.oscSawtooth;h.oscSine;h.oscSquare;h.oscTriangle;h.output;h.outputStruct;h.overlay;h.overloadingFn;h.parabola;h.parallaxDirection;h.parallaxUV;h.parameter;h.pass;h.passTexture;h.pcurve;h.perspectiveDepthToViewZ;h.pmremTexture;h.pointShadow;h.pointUV;h.pointWidth;const OE=h.positionGeometry;h.positionLocal;h.positionPrevious;h.positionView;h.positionViewDirection;h.positionWorld;h.positionWorldDirection;h.posterize;h.pow;h.pow2;h.pow3;h.pow4;h.premultiplyAlpha;h.property;h.radians;h.rand;h.range;h.rangeFog;h.rangeFogFactor;h.reciprocal;h.reference;h.referenceBuffer;h.reflect;h.reflectVector;h.reflectView;h.reflector;h.refract;h.refractVector;h.refractView;h.reinhardToneMapping;h.remap;h.remapClamp;h.renderGroup;h.renderOutput;h.rendererReference;h.rotate;h.rotateUV;h.roughness;h.round;h.rtt;h.sRGBTransferEOTF;h.sRGBTransferOETF;h.sample;const kE=h.sampler;h.samplerComparison;h.saturate;h.saturation;h.screen;h.screenCoordinate;h.screenSize;h.screenUV;h.scriptable;h.scriptableValue;h.select;h.setCurrentStack;h.setName;h.shaderStages;h.shadow;h.shadowPositionWorld;h.shapeCircle;h.sharedUniformGroup;h.sheen;h.sheenRoughness;h.shiftLeft;h.shiftRight;h.shininess;h.sign;h.sin;h.sinc;h.skinning;h.smoothstep;h.smoothstepElement;h.specularColor;h.specularF90;h.spherizeUV;h.split;h.spritesheetUV;h.sqrt;h.stack;h.step;h.stepElement;const zE=h.storage;h.storageBarrier;h.storageObject;const $E=h.storageTexture;h.string;h.struct;h.sub;h.subBuild;h.subgroupIndex;h.subgroupSize;h.tan;h.tangentGeometry;h.tangentLocal;h.tangentView;h.tangentWorld;h.temp;const WE=h.texture,HE=h.texture3D;h.textureBarrier;h.textureBicubic;h.textureBicubicLevel;h.textureCubeUV;h.textureLoad;h.textureSize;const qE=h.textureStore;h.thickness;h.time;h.timerDelta;h.timerGlobal;h.timerLocal;h.toneMapping;h.toneMappingExposure;h.toonOutlinePass;h.transformDirection;h.transformNormal;h.transformNormalToView;h.transformedClearcoatNormalView;h.transformedNormalView;h.transformedNormalWorld;h.transmission;h.transpose;h.triNoise3D;h.triplanarTexture;h.triplanarTextures;h.trunc;h.uint;const XE=h.uniform;h.uniformArray;h.uniformCubeTexture;h.uniformGroup;h.uniformTexture;h.unpremultiplyAlpha;h.userData;const jE=h.uv;h.uvec2;h.uvec3;h.uvec4;const KE=h.varying,YE=h.varyingProperty;h.vec2;h.vec3;h.vec4;h.vectorComponents;h.velocity;h.vertexColor;h.vertexIndex;h.vertexStage;h.vibrance;h.viewZToLogarithmicDepth;h.viewZToOrthographicDepth;h.viewZToPerspectiveDepth;h.viewport;h.viewportCoordinate;h.viewportDepthTexture;h.viewportLinearDepth;h.viewportMipTexture;h.viewportResolution;h.viewportSafeUV;h.viewportSharedTexture;h.viewportSize;h.viewportTexture;h.viewportUV;const Ur=h.wgsl,Nc=h.wgslFn;h.workgroupArray;h.workgroupBarrier;const QE=h.workgroupId;h.workingToColorSpace;h.xor;const ZE=Ur(`

	const BVH_STACK_DEPTH = 60u;
	const INFINITY = 1e20;
	const TRI_INTERSECT_EPSILON = 1e-5;

`),ME=Ur(`
	struct Ray {
		origin: vec3f,
		direction: vec3f,
	};
`),Dg=Ur(`
	struct BVHBoundingBox {
		min: array<f32, 3>,
		max: array<f32, 3>,
	}
`),JE=Ur(`
	struct BVHNode {
		bounds: BVHBoundingBox,
		rightChildOrTriangleOffset: u32,
		splitAxisOrTriangleCount: u32,
	};
`,[Dg]),e0=Ur(`
	struct IntersectionResult {
		didHit: bool,
		indices: vec4u,
		normal: vec3f,
		barycoord: vec3f,
		side: f32,
		dist: f32,
	};
`),t0=Nc(`

	fn getVertexAttribute(
		barycoord: vec3f,
		indices: vec3u,
		attributeBuffer: ptr<storage, array<vec3f>, read>
	) -> vec3f {

		let n0 = attributeBuffer[ indices.x ];
		let n1 = attributeBuffer[ indices.y ];
		let n2 = attributeBuffer[ indices.z ];
		return barycoord.x * n0 + barycoord.y * n1 + barycoord.z * n2;

	}

`),s0=Nc(`

	fn ndcToCameraRay( ndc: vec2f, inverseModelViewProjection: mat4x4f ) -> Ray {

		// Calculate the ray by picking the points at the near and far plane and deriving the ray
		// direction from the two points. This approach works for both orthographic and perspective
		// camera projection matrices.
		// The returned ray direction is not normalized and extends to the camera far plane.
		var homogeneous = vec4f();
		var ray = Ray();

		homogeneous = inverseModelViewProjection * vec4f( ndc, 0.0, 1.0 );
		ray.origin = homogeneous.xyz / homogeneous.w;

		homogeneous = inverseModelViewProjection * vec4f( ndc, 1.0, 1.0 );
		ray.direction = ( homogeneous.xyz / homogeneous.w ) - ray.origin;

		return ray;

	}
`),n0=Nc(`

	fn intersectsBounds(
		ray: Ray,
		bounds: BVHBoundingBox,
		dist: ptr<function, f32>
	) -> bool {

		let boundsMin = vec3( bounds.min[0], bounds.min[1], bounds.min[2] );
		let boundsMax = vec3( bounds.max[0], bounds.max[1], bounds.max[2] );

		let invDir = 1.0 / ray.direction;
		let tMinPlane = ( boundsMin - ray.origin ) * invDir;
		let tMaxPlane = ( boundsMax - ray.origin ) * invDir;

		let tMinHit = vec3f(
			min( tMinPlane.x, tMaxPlane.x ),
			min( tMinPlane.y, tMaxPlane.y ),
			min( tMinPlane.z, tMaxPlane.z )
		);

		let tMaxHit = vec3f(
			max( tMinPlane.x, tMaxPlane.x ),
			max( tMinPlane.y, tMaxPlane.y ),
			max( tMinPlane.z, tMaxPlane.z )
		);

		let t0 = max( max( tMinHit.x, tMinHit.y ), tMinHit.z );
		let t1 = min( min( tMaxHit.x, tMaxHit.y ), tMaxHit.z );

		( *dist ) = max( t0, 0.0 );

		return t1 >= ( *dist );

	}

`,[ME,Dg]);export{DE as A,Z_ as M,Se as N,bS as S,PE as W,e0 as a,JE as b,ZE as c,QE as d,UE as e,IE as f,t0 as g,WE as h,n0 as i,LE as j,Ur as k,GE as l,HE as m,s0 as n,kE as o,KE as p,jE as q,ME as r,zE as s,qE as t,XE as u,YE as v,Nc as w,OE as x,$E as y,VE as z};
